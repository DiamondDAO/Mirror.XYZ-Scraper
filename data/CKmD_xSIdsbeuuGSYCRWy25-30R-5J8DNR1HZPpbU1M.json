"lves and cache the entry content for extremely fast response-times. This allows us to have a world-class writing and reading experience, while still achieving all of our goals of content decentralization.\\n\\nIn terms of building this backend API in 2021, there were probably 10+ viable options for where to deploy code and just as many promising languages for its development. Picking early tools can be difficult! I ended up choosing something that was strongly within my realm of competency, and would also be easy for new engineers on our team to learn. I also chose what I believe to be the path of greatest extensibility and flexibility into the future, which for us meant building our backend in **NodeJS on AWS infrastructure**. The decision was not obvious, however, and I wanted to take into account the competencies we would be building as an engineering order in time to come.\\n\\nSetting up web applications on AWS is much more time consuming than using an abstracted service like Heroku or Vercel. Things like environments, databases, security groups, and deployments all have to be configured up individually. In the long-run, though, it grants more control, and this can be helpful for crypto applications that sometimes had non-standard concerns. It took me about 2 days to set up this infrastructure — including security groups, IAM accounts, databases, staging and production environments, etc. But from here, I know that I have the world's best infrastructure behind us, without the platform risk of newer, less fully-featured services.\\n\\nWe use **Postgres via AWS's RDS service**, and VPC and security groups for communicating between **ElasticBeanstalk** and RDS. We used **GraphQL with Apollo** for our API endpoints.\\n\\nI'll note here that, for a while before committing to this path, I considered using writing the backend in Golang or Rust, and protobufs, since cryptographic signatures require strict typing for correct validation across platforms. But I know that development would have been *a lot slower* if we had gone this path. On the other hand, building a competency in Rust from the start would have allowed us to track the growing number of interesting layer-2 integrations (which seems promising).\\n\\nOur deployments are handled through **Github workflows**, such that every push to our *staging* or *main* triggers an action on Github that deploys the application. To be clear, there is a *lot* that still needs to be improved here — including blocking deploys on test suites passing, and measuring test coverage. We don't have full integration tests, e.g. against a built docker contains with exposed GraphQL endpoints.\\n\\n![The genesis entry](https://images.mirror-media.xyz/publication-images/7c3c118d-8dda-4f5d-9e80-6df764fd403c.jpeg)\\n\\n## Building a Frontend for Blogging\\n\\nWe decided to use Vercel and NextJS on the frontend, which has wildcard subdomain support, as well as support for statically rendered content. This has been great so far, because we get fast-loading, well-cached content that can be read easily by machines like social media platforms and search engines. It's also generally a fantastic product for managing staging environments, deployments, etc.\\n\\n## What went well?\\n\\nWe were able to get an MVP out *really* really quickly — we made a goal to ship before Christmas, and only started building the backend some ways into December. So overall, it took us mere weeks to build a novel CMS that uses public-private key signatures to verify content, stores data in Postgres, stores data on Arweave, burns a token on Ethereum to claim ownership of an ENS label, validates ownership of that label, iterations on our signing model, and so on. \\n\\nHere's a few specific examples of these things:\\n\\n1. The first blog post by Trent: [https://stateful.mirror.xyz/a151ee1decb2028a8bb48277f6928c6f38319c32601dc1da1ee82acfcad2e525](https://stateful.mirror.xyz/a151ee1decb2028a8bb48277f6928c6f38319c32601dc1da1ee82acfcad2e525)\\n2. A transaction that burns a $WRITE token and claims an ENS domain: [https://rinkeby.etherscan.io/tx/0x29b9d13187a2db64b7d85f4ff5be739729b07404fd1f5fce79b3bba13da7530b](https://rinkeby.etherscan.io/tx/0x29b9d13187a2db64b7d85f4ff5be739729b07404fd1f5fce79b3bba13da7530b)\\n3. An Arweave transaction that stores Linda's [post](https://linda.mirror.xyz/df649d61efb92c910464a4e74ae213c4cab150b9cbcc4b7fb6090fc77881a95d) forever, along with signatures that prove authorship: [https://viewblock.io/arweave/tx/WvwsHyKCjfkLoKNbNSGfoV-vaWrJa2PMYB_c3wucXUA](https://viewblock.io/arweave/tx/WvwsHyKCjfkLoKNbNSGfoV-vaWrJa2PMYB_c3wucXUA)\\n\\nIt's exhausting even to think back through the past month and everything we've been able to build out! And the fact that this is *basically working* is very fun and exciting. I'm glad that we also did a fair amount of this \\\"in public\\\" and have screen recording our on-boarding sessions.\\n\\n## What went wrong?\\n\\nBy tackling so many challenges at once, it sometimes felt like there were an overwhelming number of important issues that urgently needed to be patched. Sometimes, that made it difficult for me to communicate priorities in linear way, so that we were all on the same page and rationally working together on the same thing. Given that that team hadn't worked together before this project, and are just learning about each of our distinct work and communication styles, there was considerable \\\"under-communication\\\" that we need to improve on.\\n\\nThe fast pace also created some disorder. For example, late one Thursday I was configuring the Github Workflows to deploy our AWS EB environment, and it was working well in staging. We didn't deploy to production over the weekend, and during that time I updated production to a whole new AWS EB environment. Our first deploy on Monday shipped to the *outdated* environment, and a bug manifested right before an [onboarding session](https://www.youtube.com/watch?v=8e9Fcf0DiOE)! We had to roll-back to prevent live-streaming a failed onboarding, and it was very confusing! We wrote our first post-mortem for this.\\n\\n## What lessons were learned?\\n\\nWe learned that we can really push hard and work quickly to make an ambitious goal a reality within a short timeframe. I think we proved that by hitting the December 25th deadline.\\n\\nWe also learned a lot about each each and our competencies (there's only three of us), and how we need to communicate with each other to build more trust and confidence in how things are going. That includes over-communicating more about expectations and responsibilities over the codebase and product, outstanding issues, priorities, and individual goals for any given sprint.\\n\\nExpect more information on $WRITE soon.\\n\\nIn the meantime, you can read the first entries published on Mirror over the past few weeks:\\n\\n- [https://stateful.mirror.xyz/](https://stateful.mirror.xyz/) by [@trent_vanepps](https://twitter.com/trent_vanepps)\\n- [http://amorfati.mirror.xyz/](http://amorfati.mirror.xyz/) by [@apruden08](https://twitter.com/apruden08)\\n- [https://joonian.mirror.xyz/](https://joonian.mirror.xyz/) by [@joonian](https://twitter.com/joonian)\\n- [https://helloshreyas.mirror.xyz/](https://helloshreyas.mirror.xyz/) by [@HelloShreyas](https://twitter.com/HelloShreyas)\\n- [https://g.mirror.xyz/](https://g.mirror.xyz/) by [@strangechances](https://twitter.com/strangechances)\\n- [https://d.mirror.xyz/](https://d.mirror.xyz/) by [@Iiterature](https://twitter.com/Iiterature)\",\"timestamp\":1610412049,\"title\":\"Formatting Design\",\"publication\":\"jktest\"},\"digest\":\"SIPVXG-emp2kJbpHAnBuwMpGg4ueFSFk5iOWi6v6I_8\",\"authorship\":{\"contributor\":\"0x841fF85B6873d7bfB712C8f7A347C774355b6EC3\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"D1Nn9IpEf0chYibcqyEM8fB8CHFqq6rMbIYwnOkCxDA\\\",\\\"y\\\":\\\"z6c6bKX6AOAv9yhlnT3b4QeGXaxhPpbIhO4uOpD4oLU\\\"}\",\"signature\":\"zDu7ngEpFGKdN4pVTvM9FFpmB27jl_bnW0-_jAogU6uG_R2D_vPZs4KaqvI44ryfYn9ldAy3qSFBmHTp3jnX7w\",\"signingKeySignature\":\"0x941ba0ed82249496350320f822e1ba02977fea61efb3faa9497970fe4831b4990ce47f13da9d5baaf32aa320c34d86ac76f56c09e40cfa646cfd889094b5b8e61b\",\"signingKeyMessage\":\"I authorize the publication of articles on jktest.mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"D1Nn9IpEf0chYibcqyEM8fB8CHFqq6rMbIYwnOkCxDA\\\",\\\"y\\\":\\\"z6c6bKX6AOAv9yhlnT3b4QeGXaxhPpbIhO4uOpD4oLU\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"version\":\"12-21-2020\",\"originalDigest\":\"B32AHYVIlCf20jjOc7ebm3dv1W7KIBjdw9JB93z3gKY\"}"