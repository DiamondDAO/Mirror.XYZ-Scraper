"{\"content\":{\"body\":\"## [](#introduction)Introduction\\n\\nIn this article we will be learning how to use Vue's provide and inject.\\n\\n## [](#installation)Installation\\n\\nOpen your terminal and create a fresh Vue project,\\\\\\n\\n\\n    $ vue create vue-3-dependency-injection\\n\\n\\n\\nThen open the scaffolded project by the CLI in your IDE.\\\\\\n\\n\\n    $ cd vue-3-dependency-injection && code .\\n\\n\\n\\n## [](#provide)Provide\\n\\nAs an example, let's say our client wants to have the user's name in many places in our application. But there are many ways to do that, but the team decided to only go with `provide()` so it can supply data to components.\\n\\n*Note: The example scenario may not be so ideal but just to demo how `provide()` and `inject()` works*\\\\\\n\\n\\n    <template>\\n      <AppFirstChild />\\n      <AppSecondChild />\\n      <AppThirdChild />\\n    </template>\\n\\n    <script>\\n    import { defineComponent, provide } from \\\"@vue/runtime-core\\\";\\n    import AppFirstChild from \\\"./components/AppFirstChild.vue\\\";\\n    import AppSecondChild from \\\"./components/AppSecondChild.vue\\\";\\n    import AppThirdChild from \\\"./components/AppThirdChild.vue\\\";\\n\\n    export default defineComponent({\\n      name: \\\"App\\\",\\n\\n      components: {\\n        AppFirstChild,\\n        AppSecondChild,\\n        AppThirdChild,\\n      },\\n\\n      setup() {\\n        provide(\\\"user\\\", \\\"Carlo Miguel Dy\\\");\\n      },\\n    });\\n    </script>\\n\\n    <style>\\n    #app {\\n      font-family: Avenir, Helvetica, Arial, sans-serif;\\n      -webkit-font-smoothing: antialiased;\\n      -moz-osx-font-smoothing: grayscale;\\n      text-align: center;\\n      color: #2c3e50;\\n      margin-top: 60px;\\n    }\\n    </style>\\n\\n\\n\\nBut we can just use props instead? We can definitely pass down props from Parent to child component and this child component passes down this prop to its other child components, and when that child component also has its own child components that needs the data from the root component you pass down props as well.\\n\\nActually this is a problem and things might not be that consistent across our application. So the solution to that problem is to use dependency injection with `provide()` and have all the nested child components use `inject()` to get the provided data.\\n\\n## [](#inject-dependency)Inject Dependency\\n\\nThe one way we can use or get the value from `provide()` is to use `inject()`. We'll import that also from `@vue/runtime-core`. Now let us inject the provided data from our Parent component.\\n\\nFor component `AppFirstChild`\\\\\\n\\n\\n    <template>\\n      <h1>{{ user }}</h1>\\n\\n      <AppFirstChildChild />\\n    </template>\\n\\n    <script>\\n    import { defineComponent, inject } from \\\"vue\\\";\\n    import AppFirstChildChild from \\\"./AppFirstChildChild.vue\\\";\\n\\n    export default defineComponent({\\n      components: {\\n        AppFirstChildChild,\\n      },\\n\\n      setup() {\\n        const user = inject(\\\"user\\\");\\n\\n        return {\\n          user,\\n        };\\n      },\\n    });\\n    </script>\\n\\n\\n\\nAs you see `AppFirstChild` component also has a child component. We can also use `inject()` to get the data provided from the root Parent component easily.\\n\\nfor component `AppFirstChildChild`\\\\\\n\\n\\n    <template>\\n      <h1>AppFirstChildChild: {{ user }}</h1>\\n    </template>\\n\\n    <script>\\n    import { defineComponent, inject } from \\\"vue\\\";\\n\\n    export default defineComponent({\\n      setup() {\\n        const user = inject(\\\"user\\\");\\n\\n        return {\\n          user,\\n        };\\n      },\\n    });\\n    </script>\\n\\n\\n\\n## [](#provide-any-data)Provide any data\\n\\nWe are not only limited to provide values as string, we can pass down any type of data. It can be an array, a number, or an object.\\n\\nSo let us provide another data with emojis\\\\\\n\\n\\n    export default defineComponent({\\n      name: \\\"App\\\",\\n\\n      components: {\\n        AppFirstChild,\\n        AppSecondChild,\\n        AppThirdChild,\\n      },\\n\\n      setup() {\\n        provide(\\\"user\\\", \\\"Carlo Miguel Dy\\\");\\n        provide(\\\"emojis\\\", {\\n          fire: \\\"üî•\\\",\\n          star: \\\"‚≠ê\\\",\\n          pizza: \\\"üçï\\\",\\n        });\\n      },\\n    });\\n\\n\\n\\n## [](#demo)Demo\\n\\nOur client is happy with the functionality that we created, cheers!\\n\\n[![image](https://res.cloudinary.com/practicaldev/image/fetch/s--5PeQ4UrM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw\\\\_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7yle3ewwhx1iavk7sfcg.png)](https://res.cloudinary.com/practicaldev/image/fetch/s--5PeQ4UrM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw\\\\_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7yle3ewwhx1iavk7sfcg.png)\\n\\n## [](#conclusion)Conclusion\\n\\nWhen we want to be consistent in passing down values to other child components across our entire application, we should use `provide()` and `inject()` instead as it saves us the time and all the frustrations when just using props.\\n\\nThanks for taking the time to read, hope you had a wonderful weekend!\\n\",\"timestamp\":1636676685,\"title\":\"Dependency Injection with Vue 3\"},\"digest\":\"h9y-zgBsU3tBs8SsB3syzwGWmkgQkJA_ov8NQwb82cg\",\"authorship\":{\"contributor\":\"0x3E8c686F499C877D8f4aFB1215b6f0935796b986\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"XNAfCibxrmGjSr-VHADLIVoKcpjQ6AvgUiRVqATl37k\\\",\\\"y\\\":\\\"3RuY7Uw61mZNEnJyyzr7ObM928gt-QoWvGAdLDb2gy4\\\"}\",\"signature\":\"1n76JWAAr6XEBB3Hk-EfYk8Xc5kmfE2AVuShjnaiF1Gdzp6zTh9jmc2DYQC8yCnp_4Hoqj0YEXTP2aMuRLO7Ww\",\"signingKeySignature\":\"0xc823d2ab2ee5864fc5495382efb960b4461c3fb598b3be4e5e068c6312ab60ce014c7378c1f02beed8fce37236dc1e3eb8dd28a6f911b33ec4172a1fa8b17f101b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"XNAfCibxrmGjSr-VHADLIVoKcpjQ6AvgUiRVqATl37k\\\",\\\"y\\\":\\\"3RuY7Uw61mZNEnJyyzr7ObM928gt-QoWvGAdLDb2gy4\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"h9y-zgBsU3tBs8SsB3syzwGWmkgQkJA_ov8NQwb82cg\"}"