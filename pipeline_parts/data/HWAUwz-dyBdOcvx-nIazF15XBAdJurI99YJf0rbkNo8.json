"{\"content\":{\"body\":\"Web3, also known as Web 3.0, is an idea for a version of the Internet that is decentralized and based on public blockchains.\\nThe concept gained popularity in 2020 and 2021 with interest from cryptocurrency enthusiasts and investments from high-profile technologists and companies.\\n\\nWeb3 revolves around the idea of a decentralized Internet. Proponents often contrast this to Web 2.0, where large amounts of the web's data and content are centralized in a fairly small group of companies (often referred to as Big Tech).\\n\\nSpecific visions for Web3 differ, but all are heavily based in blockchain technologies, such as various cryptocurrencies and non-fungible tokens (NFTs). Some visions are based around the concepts of decentralized autonomous organizations (DAOs), which seek to enable many people to have equal ownership and governance in an organization. Decentralized finance (DeFi) is another key concept, in which users exchange currency without bank or government involvement. Self-sovereign identity allows users to identify themselves without relying on a centralized authentication system like OAuth.\\n\\n## What is a blockchain?\\n\\nA blockchain is a particular type of irreversible distributed ledger which combines aspects of both computation and data storage. Each new block which is added contains modifications to the state of the ledger that have been agreed upon by the consensus of the distributed nodes which run the network.\\n\\n## What is NEAR?\\n\\nNEAR Protocol \\\"NEAR\\\" is a decentralized development platform where developers can host serverless applications and smart contracts that easily connect to \\\"open finance\\\" networks and benefit from an ecosystem of web3 components.\\n\\n## Why NEAR?\\n\\nUnlike most blockchain-based platforms, NEAR Protocol is built from the ground up to be the easiest in the world for developers and their end users, while still providing the scalability and security you need to serve those users.\\n\\n## How to get started?\\n\\n### NEAR Wallet\\n\\nis an in-browser, web-based wallet for creating and interacting with NEAR accounts.\\n\\nYou can setup an [account](https://wallet.testnet.near.org/) on `testnet` and start exploring your account features.\\n\\nNEAR has several development networks operating independently of each other with their own account IDs. Because of this, there are several deployed wallets you can use.\\n\\nNEAR Wallet `mainnet`\\nNEAR Wallet `testnet`\\nNEAR Wallet `betanet`\\n\\nWe will focus only on : NEAR Wallet `testnet`\\n\\n### NEAR Explorer\\n\\nNEAR Explorer allows you to view block creations in real time! This useful tool allows you to search for transactions and accounts allowing you to view all interactions between users and smart contracts.\\nGo check: [NEAR Explorer on ](https://explorer.testnet.near.org/)`testnet`\\n\\n### NEAR CLI\\n\\nis a NodeJS command line interface that utilizes near-api-js to connect to and interact with the NEAR blockchain.\\nyou should consider this as your first reference to start developing on NEAR.\\nGo check: [NEAR CLI Docs](https://docs.near.org/docs/tools/near-cli)\\n\\n## Writing your first smart contract\\n\\nWe will write a very basic and simple smart contract using Rust language and `near-sdk-rs` then deploy it to `NEAR testnet`.\\n\\n1- Clone The Smart Contract Template Repository\\n\\n```shell\\n$ git clone git@github.com:near-examples/rust-template.git voting_contract\\n$ cd voting_contract\\n```\\n\\n2- Open the cloned repository in your editor or VSCode using:\\n\\n```shell\\n$ code .\\n```\\n\\n3- Change the project name in the `Cargo.toml` file\\n\\n```toml\\n[package]\\nname = \\\"helloworld_contract\\\"\\nversion = \\\"0.1.0\\\"\\n```\\n\\n4- Writing the contract code\\n\\nwe will change the struct name to `HelloWorldContract`.\\n\\n``` rust\\n#[near_bindgen]\\n#[derive(Default,BorshDeserialize, BorshSerialize)]\\npub struct HelloWorldContract {\\n    // SETUP CONTRACT STATE\\n}\\n```\\n\\n5- Write the methods implementations for this contract\\n\\n```rust\\n#[near_bindgen]\\nimpl HelloWorldContract {\\n    // ADD CONTRACT METHODS HERE\\n    pub fn say_hello(&self) -> String{\\n        return \\\"Hello World!\\\".to_string();\\n    }\\n}\\n```\\n\\n6- Build the project\\n\\n```shell\\n$ ./build.sh\\n```\\n\\nit will create the executable `.wasm` file in `./res` folder.\\n\\n7- Login with NEAR testnet account\\n\\n```shell\\n$ npm install -g near-cli # if not installed\\n$ near login\\n$ export ID={YOUR_LOGGED_IN_ACCOUNT_ID}\\n```\\n\\n8- Create Sub-Account to deploy the contract on it\\n\\n```shell\\n$ near create-account hello.$ID --masterAccount $ID --initialBalance 1\\n```\\n\\n9- Deploy the contract to the sub-account\\n\\n```shell\\n$ near deploy --wasmFile ./res/helloworld_contract.wasm --accountId hello.$ID\\n```\\n\\n10- Calling the contract functions\\n\\n```shell\\n$ near call hello.$ID say_hello '' --accountId $ID\\n# Result: 'Hello World!'\\n```\\n\\nThat's it.\\nHappy Coding!\\n\\n\\n------\\n\\n> If you think this is useful, Please Consider Donation: [eslamx7.near](https://wallet.near.org/send-money)\\n\\n\\n---\\n\\n> References:\\n> [wikipedia](https://en.wikipedia.org/wiki/Web3)\\n> [NEAR](https://docs.near.org)\",\"timestamp\":1639078220,\"title\":\"Web3 is NEAR\"},\"digest\":\"FeCDlsS7imPe5zxSAHWvQw-9hh2n-nhbMR6xIU0pfxQ\",\"authorship\":{\"contributor\":\"0xB053c0fBb1649f594F6b61b3853f39430d807E9e\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"SRs5qRQTTQiBUw8Xz5Q3rL5BNWRVIeQT6voW84QuxHw\\\",\\\"y\\\":\\\"Rfk-gZL4EMGt7Ce_gZTnPwgkr2LGcfTzOKHLCFdEq5o\\\"}\",\"signature\":\"MbckKw2V8x6qwNl5sbierC-dHCvTDtDppFBdQPqA39rfAspedO4MpKQEYTEsSde-7ovfxZQtMo65pWm3iplEpQ\",\"signingKeySignature\":\"0x2973f765742355bdf24d545a4b8cdd98a3a41a4f4fad00df52a957effbd163c64daced2388ea23462c8154b5882ddae852d65990155f5112287c45e5de7b14f01b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"SRs5qRQTTQiBUw8Xz5Q3rL5BNWRVIeQT6voW84QuxHw\\\",\\\"y\\\":\\\"Rfk-gZL4EMGt7Ce_gZTnPwgkr2LGcfTzOKHLCFdEq5o\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"FeCDlsS7imPe5zxSAHWvQw-9hh2n-nhbMR6xIU0pfxQ\"}"