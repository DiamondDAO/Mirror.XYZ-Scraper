"{\"content\":{\"body\":\"自从ENS打响了大规模社区空投+Fair Launch的第一枪后，fomo的后起之秀纷纷效仿。更有OpenDAO做了“社区空袭”式微创新+Fair Launch+Meme之后，仿盘GasDAO快马加鞭进场，1天之内揽金过亿。若是业内深耕细作的项目方向贡献者发放空投，自然无可厚非，并且长期看来是正向价值分配和引导的Token分发模式。但如OpenDAO、GasDAO做的“空袭式”或“空气币式”空投是否值得追捧？\\n\\n1. **研发成本**\\n\\n   从研发成本角度看，一纸简单智能合约的开发成本最多只需几个工作日，完全不足以支撑短期巨大的市值泡沫。OpenDAO、GasDAO智能合约中最核心的模块是签名验证，实际代码量非常小。\\n\\n   **代码细节**\\n\\n   （i）OpenDAO采用基于EIP712标准的签名验证，这种方式需要注意在要将签名过程在合约函数内复现。\\n\\n   ```python\\n   function claim(uint256 amountV, bytes32 r, bytes32 s) external {\\n           uint256 amount = uint248(amountV);\\n           uint8 v = uint8(amountV >> 248);\\n           uint256 total = _totalSupply + amount;\\n           require(total <= MAX_SUPPLY, \\\"OpenDAO: Exceed max supply\\\");\\n           require(minted[msg.sender] == 0, \\\"OpenDAO: Claimed\\\");\\n           bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", \\n               ECDSA.toTypedDataHash(_domainSeparatorV4(),\\n                   keccak256(abi.encode(MINT_CALL_HASH_TYPE, msg.sender, amount))\\n           )));\\n           require(ecrecover(digest, v, r, s) == cSigner, \\\"OpenDAO: Invalid signer\\\");\\n           _totalSupply = total;\\n           _mint(msg.sender, amount);\\n       }\\n   ```\\n\\n   （ii）GasDAO采用Merkle Tree进行白名单信息压缩，在链下完成签名后，将Merkle Tree Root存入合约中用于验签。\\n\\n   ```python\\n   library MerkleProof {\\n       /**\\n        * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\\n        * defined by `root`. For this, a `proof` must be provided, containing\\n        * sibling hashes on the branch from the leaf to the root of the tree. Each\\n        * pair of leaves and each pair of pre-images are assumed to be sorted.\\n        */\\n       function verify(\\n           bytes32[] memory proof,\\n           bytes32 root,\\n           bytes32 leaf\\n       ) internal pure returns (bool) {\\n           return processProof(proof, leaf) == root;\\n       }\\n   \\n       function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\\n           bytes32 computedHash = leaf;\\n           for (uint256 i = 0; i < proof.length; i++) {\\n               bytes32 proofElement = proof[i];\\n               if (computedHash <= proofElement) {\\n                   // Hash(current computed hash + current element of the proof)\\n                   computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\\n               } else {\\n                   // Hash(current element of the proof + current computed hash)\\n                   computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\\n               }\\n           }\\n           return computedHash;\\n       }\\n   }\\n   \\n   function claimTokens(uint256 amount, bytes32[] calldata merkleProof) public {\\n           bytes32 leaf = keccak256(abi.encodePacked(msg.sender, amount));\\n           bool valid = MerkleProof.verify(merkleProof, merkleRoot, leaf);\\n           require(valid, \\\"GasDao: Valid proof required.\\\");\\n           require(!claimed[msg.sender], \\\"GasDao: Tokens already claimed.\\\");\\n           claimed[msg.sender] = true;\\n       \\n           emit Claim(msg.sender, amount);\\n   \\n           _transfer(address(this), msg.sender, amount);\\n       }\\n   ```\\n2. **代币分配**\\n\\n   虽然Fair Launch模式给了所有用户公平的参与机会，但由于缺乏产品内在价值支撑，也带了巨大的投资风险。此外，OpenDAO项目方具有50% Token的控制权（虽然对用途做了说明，但控制Token分发的私钥依然有中心化问题），GasDAO更是直接将15% Token分发给内部人员（虽然说的是25个核心贡献者，但是人均贡献可能不到10行代码）。这种将短期利益快速变现且存在中心化利益输送的代币分配显然会伤害投资或投机者的利益。\\n3. **社区运营**\\n\\n   这部分长期来说，很难断言这些项目不会真心做好运营，但就目前的情况，只看到短平快的营销打法而非有诚意地运作。GasDAO的discord甚至也是今天创建的，连基础的discord社区运营功能都没有做好配置，草率浮躁可见一斑。\\n\\n总之，fomo这些项目也无妨，但是在这些项目真正为用户创造价值之前，我不会把它们作为投资标的花时间研究。谨记：勿把炮友当真爱！\\n\\n### Reference：\\n\\n[https://dev.to/0xmojo7/merkle-tree-solidity-sc-validation-568m](https://dev.to/0xmojo7/merkle-tree-solidity-sc-validation-568m)\\n\\n[https://etherscan.io/address/0x6bba316c48b49bd1eac44573c5c871ff02958469#code](https://etherscan.io/address/0x6bba316c48b49bd1eac44573c5c871ff02958469#code)\\n\\n[https://twitter.com/0xQuit/status/1476097145010675714](https://twitter.com/0xQuit/status/1476097145010675714)\\n\\n[https://twitter.com/0xQuit/status/1476097145010675714](https://twitter.com/0xQuit/status/1476097145010675714)\\n\\n\",\"timestamp\":1640794740,\"title\":\"关于OpenDAO、GasDAO和空投的碎碎念\"},\"digest\":\"JPsh37L9GF3s8cjA_8CttFN-hkI7YMz3X-JpfMxBYzs\",\"authorship\":{\"contributor\":\"0xcB71f617411D587A0b56fa56bfBa793Dd2F0303C\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"cvDcF9EeVfmc41P8fZTJUczCMxsmIFFDtNxVnhz1lcs\\\",\\\"y\\\":\\\"sBJdL6UwkINS7QYYToU4Fsx1cbwfIEOy04v-5fC2aYw\\\"}\",\"signature\":\"JjFqSOr_ODdHdFyRKg2D4jchKCIjeQcW_EVOTXJRuMEVn7OJJa3G7IrHUguUG2hzaNwTeEFiAsi800EBgwP2mQ\",\"signingKeySignature\":\"0x7bc5e2a7a1d8dd9294995de1c0b812d1b8269cb7a7bb3a54c48fd16d9a6882747cb3bb9727c80bdeafd417b9ce4ff4a47d47bc1f85d193b529a628bb0fc0cd351c\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"cvDcF9EeVfmc41P8fZTJUczCMxsmIFFDtNxVnhz1lcs\\\",\\\"y\\\":\\\"sBJdL6UwkINS7QYYToU4Fsx1cbwfIEOy04v-5fC2aYw\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"JTphuAYFfdjQez1ayZiuK1dpJtVFUl-DOEthbIO3aI8\"}"