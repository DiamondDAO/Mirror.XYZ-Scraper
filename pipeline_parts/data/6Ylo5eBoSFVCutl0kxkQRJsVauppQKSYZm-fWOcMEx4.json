"{\"content\":{\"body\":\"在很久很久以前，有一堵墙架在大陆与国际互联网之间，它就是 GFW! \\n 从那时起，人们就已经开始想各种办法跨过它。 \\n 所以不用担心，此问题已经有解！\\n\\n大体上可以分为三种情况：\\n\\n1. 直连矿池的国外 CDN 域名\\n2. 使用国外服务器转发矿池端口\\n3. 依靠现有的代理软件为挖矿提供翻墙\\n\\n\\n---\\n\\n众所周知，挖矿是门躺赚的活 (矿潮时期)。而开矿池，抽矿友门的佣金，虽然比挂机挖矿累点，但只要用户体量上去了，赚得只会更多。作为一个矿池，肯定希望自己的用户越多越好。但架不住有些国家地区法律禁止了挖矿活动。\\n\\n  这里以鱼池举例\\n\\n在国外，鱼池使用的是 Cloudflare (以下简称 CF) 的 CDN 服务为全球矿友提供连接。\\n\\n而为了服务中国大陆地区用户，鱼池则使用了阿里云的 CDN 服务。想必大家能猜到 CF 的使用体验在大陆地区一定很差吧？但有一个好处是 CF 的 CDN 域名不用担心被大面积阻断。因为除了矿池，还有其他的厂商同样使用 CF 的 CDN 服务。一旦全部阻断，受牵连的无辜厂商肯定是多于需要 “制裁” 的厂商的\\n\\n结合上一篇分析文章，鱼池使用的 CF CDN 域名为 \\n `eth.f2pool.com.cdn.cloudflare.net` 和 `12f713daf74148c18f110d179fc6170c.pacloudflare.com`\\n\\n> 纠正上一篇文章的一个错误： \\n 当时我认为这种随机数前缀的 CDN 域名是不可持久使用 CDN 域名。不过这几天我观察之后发现这个域名一直没变，并且多个地区测试出的结果都是这个域名。 \\n 所以我觉得这个随机前缀域名拿来一直用也是 OK 的，在此纠正一下！\\n\\n不过 CF CDN 在国内的服务连通性也一般。所以也不会太好用，比较看地区。\\n\\n像我老家的测试矿机就无法连上，而居住地的测试机器就可以连上但也丢包严重\\n\\n```\\n以下是一些矿池ETH节点的CDN域名，端口保持原来的不变\\n\\n鱼池海外CDN服务由Cloudflare提供：\\neth.f2pool.com.cdn.cloudflare.net\\n12f713daf74148c18f110d179fc6170c.pacloudflare.com\\n\\nEthermine矿池海外CDN服务由CLoudflare提供：\\nAsia1:49544245d7934e5baaec258728a04c33.pacloudflare.com\\nAsia2:c2e74ad4719846c686448bd4c8071e88.pacloudflare.com\\nEU、US地区的链接不推荐使用就不放出了\\n\\n币安矿池海外CDN服务由AWS提供：\\nab189dbfcc17c21af.awsglobalaccelerator.com\\n```\\n\\n如果不是实在没有法子了，不推荐直连海外 CDN 域名～\\n\\n\\n---\\n\\n## 展开目录\\n\\n这种方法是现阶段最推荐的，但随着 GFW 的包检测以及各地区运营商的包检测开始后也不排除被阻断的可能\\n\\n**能用且用！**\\n\\n转发矿池端口的原理是利用一台海外的服务器将矿池的数据原样转发，在通过自己的端口送出去。\\n\\n你连上中转机的 IP 或域名 + 端口，就等同于连上了海外矿池。\\n\\n并且由于是海外机器转发的海外矿池，在钱包地址匿名挖矿的情况下矿池是无法判断你是不是大陆用户的，所以此方法不会受到各大矿池清退大陆用户的影响～\\n\\n大致原理图：\\n\\n【待补充】\\n\\n挖矿流量的传输采用的是基于 TCP 的 Stratum 协议，理论上能转发 TCP 流量的工具都 OJBK\\n\\n有兴趣了解 Stratum 协议的矿友可以跳转进行阅读： \\n [Stratum 协议文档](https://braiins.com/stratum-v1/docs)\\n\\n大家比较常用的是矿池给到的 **stratum+tcp://** 前缀，也就是未经加密的普通传输。 \\n 有的则采用了 **stratum+ssl://** 前缀，是在前者的基础上套了一层 SSL 加密。内容虽不再是明文可见，但两者的**特征明显**，可被大量训练后的数据模型检测识别。\\n\\n虽然是这样，但**能用 SSL 还是尽量用**（虽然自建中转要用 SSL 会麻烦很多很多）\\n\\n经过这几天的测试，个人倾向于使用以下两种工具进行转发。 \\n 下面将 **\\\"简单\\\"** 介绍下搭建与使用方法，承让了... \\n （ SSL 的使用单独讲）\\n\\n\\n---\\n\\n  以下方法均系个人使用，如哪里讲错欢迎指出\\n\\n以下教程，如果全部照做无报错仍然无法访问... \\n 请自行检查防火墙是否放行，不懂的话请使用搜索引擎\\n\\n## 展开目录\\n\\n> 一款由 Rust 编写的高性能中转工具\\n\\n使用简单，支持转发 DDNS 域名，支持多端口，支持配置文件。作为一款轻量转发工具，个人认为很完美！\\n\\nGithub 直接下载：[Github Realm v1.4](https://github.com/zhboner/realm/releases/download/v1.4/realm)\\n\\n[作者中文文档 (较长时间未更新)](https://zhb.me/realm) \\n [Github 主页](https://github.com/zhboner/realm/tree/master)\\n\\n### 展开目录\\n\\n#### 展开目录\\n\\n需要一台安装了 Linux 系统的服务器，登录 root 用户。\\n\\n1. 防小白\\n\\n   ```\\n   Debian:\\n   ape update -y && apt install wget -y\\n   \\n   Centos:\\n   yum update -y && yum install wget -y\\n   \\n   ```\\n2. 下载 Realm 并赋予执行权限\\n\\n   ```\\n   wget -O /root/realm https://github.com/zhboner/realm/releases/download/v1.4/realm\\n   chmod +x /root/realm\\n   \\n   ```\\n3. 一条命令开始测试使用 \\n `/root/realm -l 0.0.0.0:16688 -r eth.f2pool.com:6688`\\n\\n上一条命令中的 **矿池地址与端口** 可随意替换为你需要使用的矿池，但**不可使用矿池提供的 SSL 端口**。\\n\\n敲完命令后回到矿机进行测试，将挖矿软件中矿池的地址与端口修改为你中转机的 **IP 地址与端口** 即可开始挖矿。\\n\\n测试没问题后，你可能会发现一旦关闭服务器的窗口转发就失效了？那是因为那条命令是让 Realm 运行在前台，一旦关闭后就会失效。\\n\\n进行下一步操作前，请先按 **Ctrl+C** 结束掉正在运行中的 Realm\\n\\n如果测试没问题，接下来我们要用更加稳定可靠的方式去运行它。\\n\\n#### 展开目录\\n\\nRealm 支持通过配置文件启动，我们将需要的转发确定别写入配置文件后，Realm 每次启动就会从配置文件中读取你需要的转发，就不用每次都敲一大串命令啦。\\n\\n确定你要的转发端口与矿池，以下端口均为举例，请根据自己实际需求修改。\\n\\n下面的配置文件我将通过 16688，14444，18888 分别转发 鱼池 6688，E 池 4444，币安 8888。\\n\\n写入示例配置文件：\\n\\n```\\ncat > /root/realmconfig.json <<EOF\\n{\\n    \\\"listening_addresses\\\": [\\\"0.0.0.0\\\"],\\n    \\\"listening_ports\\\": [\\\"16688\\\", \\\"14444\\\", \\\"18888\\\"],\\n    \\\"remote_addresses\\\": [\\\"eth.f2pool.com\\\", \\\"asia1.ethermine.org\\\", \\\"ethash.poolbinance.com\\\"],\\n    \\\"remote_ports\\\": [\\\"6688\\\", \\\"4444\\\", \\\"8888\\\"]\\n}\\nEOF\\n\\n以上内容一次性复制粘贴进终端并回车，或者你一行一行复制粘贴回车复制粘贴回车直到最后一行也彳亍...\\n```\\n\\n可自定义选项：\\n\\n```\\nlistening_ports        监听端口，即你矿机连接的端口\\nremote_addresses    远程地址，即被转发的域名或IP地址\\nremote_ports        远程端口，即被转发的域名或IP对应的端口\\n\\n以上三项必须在配置中 一 一 对 应\\n```\\n\\n实际使用时只需将上面给出的自定义选项进行修改即可。\\n\\n请千万不要泄露你的 IP 地址与服务端口，这是常识，除非你打算公开给大家用 \\n （也有可能会挨揍消耗大量流量并影响正常使用）\\n\\n配置修改并保存后，让我们测试一下：\\n\\n`/root/realm -c /root/realmconfig.json`\\n\\n然后逐个测试你定义的端口吧～\\n\\n最后，测试完成，都没问题了。可它还是在系统前台运行～关了终端就停止了。 \\n **记得先 Ctrl+C 结束正在运行的 Realm！**\\n\\n#### 展开目录\\n\\n顾名思义，就是**保持它一直在运行**。\\n\\n废话不多说我尼玛直接开始：\\n\\n```\\ncat > /etc/systemd/system/realm.service <<EOF\\n[Unit]\\nDescription=realm\\nAfter=network-online.target\\nWants=network-online.target systemd-networkd-wait-online.service\\n\\n[Service]\\nType=simple\\nUser=root\\nRestart=on-failure\\nRestartSec=5s\\nDynamicUser=true\\nExecStart=/root/realm -c /root/realmconfig.json\\n\\n[Install]\\nWantedBy=multi-user.target\\nEOF\\n\\n以上内容一次性复制粘贴进终端并回车，或者你一行一行复制粘贴回车复制粘贴回车直到最后一行也彳亍...\\n```\\n\\n创建完成后需要重新加载并手动启动一下服务，最后开启开机自启。\\n\\n```\\nsystemctl daemon-reload        \\\\\\\\ 重新加载\\nsystemctl start realm        \\\\\\\\ 手动启动服务\\n\\n再次测试无误后\\n\\nsystemctl enable realm        \\\\\\\\ 开启开机自启\\n```\\n\\n到这里 Realm 的教程就结束了 ✿✿ヽ (°▽°) ノ✿\\n\\n> 教程中 Realm 与其配置文件的位置仅仅是为了方便而放在 root 目录，实际为了方便管理请养成该放哪儿放哪儿的良好习惯（小白忽略）\\n\\n\\n---\\n\\n接下来的工具就很有名了... 但配置难度稍高。我思考了下直接部署和 Docker 哪一个更适合小白。 \\n 还是... 直接部署吧！\\n\\n## 展开目录\\n\\n> [Project X](https://github.com/XTLS) originates from XTLS protocol, provides a set of network tools such as [Xray-core](https://github.com/XTLS/Xray-core) and [Xray-flutter](https://github.com/XTLS/Xray-flutter).\\n\\n功能强大，但... 这里我们既不会用到 VMess VLESS 或是 Torjan，也不会用到 XTLS Fallbak\\n\\n[Github 主页](https://github.com/XTLS/Xray-core) \\n [项目文档](https://xtls.github.io/)\\n\\n转发矿池主要用到了 Xray 入站代理中的 [Dokodemo-Door](https://xtls.github.io/config/inbounds/dokodemo.) 协议\\n\\n> Dokodemo door（任意门）可以监听一个本地端口，并把所有进入此端口的数据发送至指定服务器的一个端口，从而达到端口映射的效果。\\n\\n  Xray 的配置稍有难度，容易出错，尽量直接说操作不讲原理吧\\n\\n1. 安装 Xray \\n `bash -c \\\"$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)\\\" @ install -u root`\\n2. 直接用我写好的现成配置 \\n `rm /usr/local/etc/xray/config.json`\\n\\n`mkdir /root/xray`\\n\\n```\\ncat > /usr/local/etc/xray/config.json <<EOF\\n{\\n  \\\"log\\\": {\\n    \\\"access\\\": \\\"/root/xray/access.log\\\",\\n    \\\"error\\\": \\\"/root/xray/error.log\\\",\\n    \\\"loglevel\\\": \\\"warning\\\"\\n  },\\n  \\\"inbounds\\\": [\\n    {\\n      \\\"listen\\\": \\\"0.0.0.0\\\",\\n      \\\"port\\\": 16688,\\n      \\\"protocol\\\": \\\"dokodemo-door\\\",\\n      \\\"settings\\\": {\\n        \\\"address\\\": \\\"eth.f2pool.com\\\",\\n        \\\"port\\\": 6688,\\n        \\\"network\\\": \\\"tcp\\\",\\n        \\\"timeout\\\": 300,\\n        \\\"followRedirect\\\": false\\n      },\\n      \\\"tag\\\": \\\"F2Pool\\\"\\n    },\\n    {\\n      \\\"listen\\\": \\\"0.0.0.0\\\",\\n      \\\"port\\\": 14444,\\n      \\\"protocol\\\": \\\"dokodemo-door\\\",\\n      \\\"settings\\\": {\\n        \\\"address\\\": \\\"asia1.ethermine.org\\\",\\n        \\\"port\\\": 4444,\\n        \\\"network\\\": \\\"tcp\\\",\\n        \\\"timeout\\\": 300,\\n        \\\"followRedirect\\\": false\\n      },\\n      \\\"tag\\\": \\\"EPool\\\"\\n    },\\n    {\\n      \\\"listen\\\": \\\"0.0.0.0\\\",       \\n      \\\"port\\\": 18888,\\n      \\\"protocol\\\": \\\"dokodemo-door\\\",\\n      \\\"settings\\\": {\\n        \\\"address\\\": \\\"ethash.poolbinance.com\\\",\\n        \\\"port\\\": 8888,\\n        \\\"network\\\": \\\"tcp\\\",\\n        \\\"timeout\\\": 300,\\n        \\\"followRedirect\\\": false\\n      },\\n      \\\"tag\\\": \\\"BinancePool\\\"\\n    }\\n  ],\\n  \\\"outbounds\\\": [\\n    {\\n      \\\"protocol\\\": \\\"freedom\\\",\\n      \\\"tag\\\": \\\"free\\\"\\n    }\\n  ]\\n}\\nEOF\\n\\n从开始的 cat .... 到上面这行的 EOF，一次性复制之后粘贴进终端然后回车\\n```\\n\\n上述配置中，除了 16688 6688 或 矿池地址之类的可以修改，其它请勿动...\\n\\n完成后 `systemctl start xray` 开启 Xray 进行测试，矿池和所占端口与上面 Realm 示例相同。\\n\\n确认无问题后 `systemctl enable xray` 开启开机自启，服务器重启也不用担心转发中断。\\n\\n配置文件目录在 /usr/local/etc/xray/confing.json \\n 有需要请自行修改\\n\\n修改完成后请重启 Xray 以生效 \\n 重启 Xray：systemctl restart xray\\n\\n> Xray 是一个我很喜欢的工具\\n\\n\\n---\\n\\n## 展开目录\\n\\n此方法应该是现阶段最安全靠谱的方法\\n\\n前提是你需要有一个 **已经能正常工作的代理软件，包括但不限于 V2rayN，Clash，Shadowsocks 等**\\n\\n**请自行打开这几个软件的 “允许局域网连接” 的功能**\\n\\n然后用到了一个大佬提供的工具 6 娃，基于 gost 编写的用来桥接挖矿软件与代理软件的工具\\n\\n[点击下载](https://t.me/calabash6/773)\\n\\n   以 V2rayN 举例\\n\\nV2rayN 打开局域网连接。\\n\\n软件主界面底部显示开放给局域网的 SOCKS5 代理地址与端口为 127.0.0.1:10808。\\n\\n这时打开 6 娃，主界面如图\\n\\n中转机 IP：指的是你当前机器在局域网内的 IP 地址，如果希望局域网内其他机器也能连接到六娃，请不要修改。 \\n 中转机 IP 端口：可自定义 \\n 矿池地址与端口：自定义需要连接的矿池，支持 SSL \\n SOCKS5 地址与端口：本机使用请填写 127.0.0.1 和 你所使用的代理软件提供的 **SOCKS5 端口**，局域网内其他机器请使用中转机 **局域网 IP** 和代理软件提供的 **SOCKS5 端口**。 \\n tips: 局域网 IP 即打开六娃默认第一栏的 IP\\n\\n一切设置好后点击启动，并将 **中转机 IP 与端口** 填入挖矿软件的 **矿池地址与端口** 中。\\n\\n本机使用的话 矿池地址请填写 127.0.0.1，局域网机器使用请填写六娃所在机器的**局域网 IP**。\\n\\n查看挖矿内核日志，代理软件日志，观察是否正常。\\n\\n代理软件中的节点应尽量选择延迟低，稳定的节点 \\n IPLC 节点最好\\n\\n代理软件开的 SOCKS5 仅限在局域网内使用！请勿在公网中传输，是明文。\\n\\n不建议使用没有 IPLC 或隧道中转的 SS，容易被墙\",\"timestamp\":1639666804,\"title\":\"矿池被墙了，还有什么办法能连上？\"},\"digest\":\"or7kKawAJPdqXEI2HUMkMckBYOoHtypt9iFRAj6QIbE\",\"authorship\":{\"contributor\":\"0xEC91cf635a5Ff45dDA384c7C3800657B05f42a1F\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"ozabDpEyv7o1Eo_gfdcVaI848U115iigUc6X7TkWbno\\\",\\\"y\\\":\\\"0cPAXgdpoyuPk_TZ_NVPvLMjmcnMIp2il76qYycAYw4\\\"}\",\"signature\":\"t7g-zyqDifOWUjjdpR2gbv3L9LMCGTrWtuVNMkFkDd0HQ0gw1mi8MLVQefE5wo1Na7qBg8592zK5z9qKAnQvBQ\",\"signingKeySignature\":\"0x1ecca4ea62418ea4b0cfc3b397c2efab6116c7c03dcc766d071e8392db7833cf1304cbd290ad7d5a2d8a9067aa4ee58ae0caabf2d5eee9f976127afc95c08a271c\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"ozabDpEyv7o1Eo_gfdcVaI848U115iigUc6X7TkWbno\\\",\\\"y\\\":\\\"0cPAXgdpoyuPk_TZ_NVPvLMjmcnMIp2il76qYycAYw4\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"or7kKawAJPdqXEI2HUMkMckBYOoHtypt9iFRAj6QIbE\"}"