"{\"content\":{\"body\":\"There’s just too much going by too fast to digest in real time, so here’s my running list of links Sherif shared tonight for later exploration:\\n\\n* Interested in teaching for NEAR -\\n\\n  <https://www.near.university/teach>\\n* Deploying contract Line 26 discussion\\n\\n  <https://github.com/Learn-NEAR/NCD.L1.sample--thanks/blob/a973dcd365ab2e4d7188d5da919fe14217431f0b/scripts/x-deploy.sh#L26>\\n  * Account data structure for NEAR contracts\\n\\n    <https://nomicon.io/DataStructures/Account.html#account>\\n  * Random number generator in code sample\\n\\n    <https://github.com/Learn-NEAR/NCD.L1.sample--lottery/blob/2bd11bc1092004409e32b75736f78adee821f35b/src/lottery/assembly/lottery.ts#L12-L13>\\n    * Explanation of randomness in NEAR and a few other blockchains (video 2 in playlist)\\n\\n      <https://www.youtube.com/playlist?list=PLwnSaD6BDfXLClL8O3MnY-3lIQ7yKwoOm>\\n  * A really simple getting started contract example\\n\\n    <https://github.com/Learn-NEAR/NCD.L1.sample--thanks>\\n* An example of smart contracts using Rust\\n\\n  <https://github.com/Learn-NEAR/workshop--berry-club-bot>\\n* Details on staking within NEAR\\n\\n  <https://near-staking.com/>\\n* Details on token delegation and validation\\n\\n  <https://wiki.near.org/ecosystem/near-token/token-delegation>\\n* The standards NEAR tokens follow (Similar to ERC specs in Solidity)\\n\\n  <https://nomicon.io/Standards/README.html>\\n* Near Protocol improvements Github repo\\n\\n  <https://github.com/near/neps>\\n  * with the list of issues\\n\\n    <https://github.com/near/NEPs/issues>\\n* Near SDK Rust examples in Github\\n\\n  <https://github.com/near/near-sdk-rs/tree/master/examples>\\n  * Fungible token example in NEAR using Rust\\n\\n    <https://github.com/near/near-sdk-rs/blob/master/examples/fungible-token/ft/src/lib.rs>\\n  * Non-Fungible token (NFT) example for NEAR in Rust\\n\\n    <https://github.com/near/near-sdk-rs/blob/master/examples/non-fungible-token/nft/src/lib.rs>\\n* Lost the context of these links (I think it had to do with Art)\\n\\n  <https://tkn.farm/>\\n\\n[https://tenkbay.com/](https://tenkbay.com/)\\n\\nReferencing the ERC-721 standard for Ethereum for comparison\\n\\n[https://docs.openzeppelin.com/contracts/4.x/erc721](https://docs.openzeppelin.com/contracts/4.x/erc721)\\n\\n[https://eips.ethereum.org/EIPS/eip-721](https://eips.ethereum.org/EIPS/eip-721)\\n\\n* List of NEAR projects\\n\\n  <https://awesomenear.com/>\\n\\n[https://awesomenear.com/webassembly-music/](https://awesomenear.com/webassembly-music/)\\n\\n* Creator of WebAssembly Music -\\n\\n  <https://petersalomonsen.com/>\\n* Sample Art Demo:\\n\\n  <https://github.com/Learn-NEAR/NCD.L1.sample--art-demo>\\n* Not sure the context - need to review\\n\\n  <https://cura.run/>\\n* Decentralised storage options mentioned\\n  * IPFS\\n  * Sia Sky\\n  * Arweave\\n  * Filecoin\\n  * StorJ - https://www.storj.io\\n* Didn’t get the context, but looks like a list of Near resources\\n\\n  <https://vitalpoint.ai/academy/>\\n* Starting to walk thru with this example\\n\\n  <https://github.com/Learn-NEAR/starter--near-sdk-as>\\n* Walkthru of two different styles of writing contracts - The simple style and the singleton style. The singleton style was created to assist those familar with Rust to get a handle of AssemblyScript better.\\n* Installing the [Near CLI](https://docs.near.org/docs/tools/near-cli) is a dependency (see Monday’s lesson, also good videos on the README for the [walkthru of the project](https://www.youtube.com/watch?v=B6Gc_OQjX9E).\\n* William Wyndham’s Github (not sure of context, shared in chat) as someone to follow on Github and YouTube\\n\\n  <https://github.com/willemneal?tab=repositories>\\n* Question: If I forget to run Cleanup script in a current session, how would I find it again after the terminal is closed to perform the operation\\n* Answer from Abdul Raul - You can search your deployed contract on block explorer of test and can do cleanup by storing its address in the contract environment variable and then running the Cleanup script.\\n* AssemblyScript is good for simple contracts, meant to move away from the overhead of learning Rust for the simple stuff, as you may get lost in the weeds learning Rust or not appreciate its nuances if no background with other languages\",\"timestamp\":1642698688,\"title\":\"Real Time Notes from NEAR Bootcamp Night 3\"},\"digest\":\"SHKlQde7PjL2AXT0Ta9XFCEhO-5__Dz_yWopcUrYz5M\",\"authorship\":{\"contributor\":\"0xC9Af4E56741f255743e8f4877d4cfa9971E910C2\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"t0w4L9h6_pPmvicu-yLO7cqLfXzha2LRdIkQMC21NK4\\\",\\\"y\\\":\\\"IuQOQizV_Qz1eXXI9ilwMXjpcQ3Q2sySS0z6Ul4a-T4\\\"}\",\"signature\":\"WoE5g3T80mf3Wiwc5-d3mEsevSUlp79DVhwB1bA_Asm1-i-Y285NDWHnpga3ZyNuP8qJISMV6V4uWfKATOUVLg\",\"signingKeySignature\":\"0xcdd093f27a77a98c01bc85287ccfcdd1fc6aef53bf5508ea5918b95646d23a23061ba24cf8201102c7b2ae59477df04a44dc116f4ea3d8dffb024dcc5f101d4d1c\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"t0w4L9h6_pPmvicu-yLO7cqLfXzha2LRdIkQMC21NK4\\\",\\\"y\\\":\\\"IuQOQizV_Qz1eXXI9ilwMXjpcQ3Q2sySS0z6Ul4a-T4\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"uapjuEyAfE5eTTaif4L_BAbPKFvh7ckuH_Ts_H2RqLU\"}"