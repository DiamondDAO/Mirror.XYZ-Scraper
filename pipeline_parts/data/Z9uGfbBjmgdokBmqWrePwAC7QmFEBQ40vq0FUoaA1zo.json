"{\"content\":{\"body\":\"Ethereum is the most versatile blockchain on web 3.0. This versatility is due to the ability to run smart contracts on Ethereum. Smart contracts function similar to a vending machine. The smart contract will only execute when certain specifications are met. In the same way, a vending machine will only execute a transaction until you insert coins and make a selection.  Rather than using physical coins, Ethereum uses digital tokens.\\n\\n*On the Ethereum blockchain, tokens represent a wide range of digital assets such as vouchers, lottery tickets, voting rights, and much more. Tokens can also represent tangible assets such as an ounce of gold, a piece of fine art, or fiat currency like the US dollar, etc.*\\n\\nMy goal in this article is to help you understand token standards on the Ethereum blockchain and some common examples of these standards. This is information that everyone in the Web3 space should be familiar with. Let's dive in!\\n\\n**What is a token standard?**\\nToken Standards are a part of smart contracts. Standards represent a framework that tells developers how to create, issue, and deploy new tokens on the Ethereum blockchain. Anyone is free to create a token standard on the Ethereum blockchain as long as they can explain the standard and gather support within the community to push it forward.\\n\\nToken standards are usually defined using the ERC acronym. **ERC** is an acronym that stands for **Ethereum Request for Comments**.\\n\\n**Fungibility**\\nBefore we dive into the token standards it is important to understand the term fungible. Simply put an item that is fungible has multiple identical copies with the exact same value. In the physical world, fungible assets are money, gold, and stocks. On the blockchain, these fungible assets are cryptocurrencies and other tokens. Non-fungible means an item that is unique and does not have multiple items that have the same value. Examples of these assets are real estate, cars, and art. The equivalent on the blockchain is called Non-fungible tokens (NFTs). NFTs recently has been in the spotlight of blockchain technology for enabling digital ownership of fine art to domain names.\\n\\nOk now that you understand fungibility. Let's look at some examples of token standards and how they differ.\\n\\n\\n**ERC -20**\\nERC-20 is one of the first and most popular standards on the Ethereum blockchain. This standard was first proposed in 2015 by Vitalik Buterin – the founder of Ethereum. It is a simple interface that facilitates the creation of tokens on the Ethereum blockchain that can be reused by other applications such as wallets and decentralized exchanges.\\n\\nBetween 2016 and 2016, ERC-20 was the commonly used standard for creating tokens on the Ethereum blockchain. It is a standard for fungible tokens. Fungible tokens are similar in terms of type and value, so they can be interchanged between different users on the platform. Fungible tokens have the same value; that is why they can be used as a medium of exchange.\\n\\nETH is a common example of ERC-20 tokens. Each ETH on the Ethereum blockchain has the same value as all the other ETH tokens on the platform. Some of the other valuable tokens on the Ethereum blockchain include Binance Coin (BNB), 0x (ZRX), and OmiseGo (OMG).\\n\\nThe ERC-20 has six key functions that include the following;\\n***totalsupply()*** – this function determines the total number of tokens on the blockchain.\\n***balanceOf()*** – this function helps keep track of the token balance on each Ethereum wallet\\n***transfer()*** – this function is used during the creation of the token. It can transfer all the created tokens to one wallet or distribute them to Initial Coin Offering (ICO) investors.\\n***transferfrom()*** – this function enables token holders to exchange tokens after the initial distribution has occurred\\n***approve()*** – this function approves other accounts to withdraw a given number of tokens from the account calling the function.\\n***allowance()*** – this function is used to check the number of tokens that the approved account is allowed to withdraw from the account called the approve() function.\\n\\n**ERC-721**\\nThe ERC-721 standard is used to define non-fungible tokens (NFTs) on the Ethereum blockchain. If you have been closely following news in the crypto, you should already have some basic knowledge about NFTs. But for those who haven't, here is what an NFT means; it is a unique token on the Ethereum blockchain that acts as proof of ownership of a digital asset such as digital art pieces, video clips, photos, and many more.\\n\\nNFTs are also used to prove ownership of physical assets as well. However, the most popular use cases for NFTs are in digital assets. With NFTs, each token created using the ERC-721 standard has to be unique and only one of a kind on the entire blockchain. This standard was proposed by William Entriken, Dieter Shirley, Jacob Evans, Nastassia Sachs in January 2018. The different use cases of NFTs are still being explored, but the most popular ones at the moment are proof of ownership for digital art pieces and collectibles.\\n\\nOne of the most popular NFT sales is Beeple's collection of 5000 digital art pieces that he sold for $69 million. Many experts predict that NFTs will change the way we own things, especially digital assets on the internet. With so many other use-cases coming in every other day, NFTs will be one of the most exciting technologies to follow in the next couple of years.\\n\\n**ERC – 777**\\nThis standard was created to improve the ERC-20 token standard. Tokens using the new ERC-777 standard are backward compatible with the ERC-20 standard. Some of the improvements made to the original ERC-20 include the following;\\n**Hooks:** These are functions described in the code of a given smart contract. The hook function is called when several tokens are sent or received by a given smart contract. With hooks, a smart contract will react to both incoming and outgoing tokens. This allows sending tokens to a given contract and notifying that contract in a single transaction, unlike the older ERC-20 that requires two functions to execute a similar task.\\n**Decimals:** The new ERC-777 standard clarifies the confusion that we see around decimals that we see with the older ERC-20 standard.\\n**Backward compatibility:** Contracts created based on the ERC-777 standard can be interacted with similarly as ERC-20 contracts.\\n\\nThis standard is very similar to the ERC-20 but makes some vital improvements that fix the shortcomings of the older ERC-20 standard.\\n\\n**ERC-1155 MULTI-TOKEN STANDARD**\\nThis standard was created to facilitate more efficient trades and bundling of transactions to save costs. The ERC-1155 allows creating both fungible tokens like the Binance Coin and non-fungible tokens such as CryptoPunks. It provides the interface for managing various token types, including non-fungible tokens, fungible tokens, and semi-fungible tokens.\\n\\nSo, if you want to deploy a contract that includes different token types, this is the standard you have to follow. In simple terms, the ERC-1155 standard can do all the functions of the ERC-20 and ERC-721 functions. If the need arises, it can even do both at the same time. This standard also improves the functionality and efficiency of the ERC-20 and ERC-721 standards hance fixing most of the implementation shortcomings of the old standards.\\n\\nThe core functions and features of the ERC-1155 include the following;\\nBatch Transfer – this function enables the transfer of multiple assets in a single call.\\nBatch Balance – this function makes it possible to get balances of multiple assets in a single call.\\nBatch Approval – this enables approval of tokens to all addresses in a single call as well\\nHooks – Similar to the hooks in the ERC-777 standard, this function enables smart contracts to react to both incoming and outgoing tokens.NFT Support – When the total supply of tokens on the blockchain is 1, treat it as an NFT. With this feature, you can define a metadata URL, which clients can read and modify.\\nSafe Transfer Rules represent a set of rules that facilitate the secure transfer of tokens.\\n\\n**ERC 223**\\nIt is a token standard that was proposed by u/Dexaran. The main aim of this standard was to fix the security loopholes of the ERC-20 standard. For instance, when ERC-20 tokens are sent to a smart contract that doesn't work with the ERC-20 standard, these tokens will be lost forever. With the ERC-223 standard, this issue was fixed by adding a function called tokenFallback that ensures tokens are only sent to compatible smart contracts.\\n\\nThe ERC-20 standard led to the loss of millions of dollars due to tokens that were sent to contracts that don't support this standard. With the ERC-223 standard, a transaction is canceled if the smart contract you are trying to send tokens to doesn't have the appropriate functionality to ensure no funds are lost.\\n\\nSo, the main goal of this standard was to ensure the transfer of tokens on the Ethereum blockchain is much safer and secure.\\n\\n**ERC 1337**\\nIt is a standardized interface for recurring subscriptions on the Ethereum blockchain. This standard makes it easy for enterprises to set up a payment system for recurring payments for cryptocurrencies or tokens. The subscription model has been very successful on the internet for many years. So, having a standard that makes implementing this model in web 3.0 is a massive boost for Dapp developers on the Ethereum blockchain.\\n\\nThe ERC 1337 makes it possible for the decentralized app (Dapp) owner to receive periodic payments in a token of his choice. There is also an allowance that gives the users an option of choosing a token of their choice while making payments.  This standard also gives the Dapp owner the option of choosing an interval for the payments.\\n\\nIt also enables users to choose how much to pay for each installment and the total amount they are willing to pay the Dapp owner. This kind of payment flexibility makes this standard one of the most useful standards on the Ethereum blockchain.\\n\\n**Final thoughts**\\nStandards make creating tokens on the Ethereum blockchain much faster and more efficient. The uniformity of similar tokens also makes it easier for the users to adopt a specific type of token. The good news is these standards can be proposed by anyone on the Ethereum blockchain as long they have the right explanation and community support to back them up.\\n\\nAs a user or developer of Dapps on the Ethereum blockchain, it is essential to understand some of the most common standard and their implications. You may not have to master them but understanding the basics will help you navigate Web3!\",\"timestamp\":1638763597,\"title\":\"Breaking down the Blockchain: Ethereum Token Standards \"},\"digest\":\"bSc8R76327_d8zHGD9q_DDwm90auUYxkqJSV9deVhug\",\"authorship\":{\"contributor\":\"0x0c7Cf39362441d4637c9434A764241d6F31668aA\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"dVkfcXtg2K4lHnbFTlaeRw1Bg3Ly7ptpMIhUr3sA9tg\\\",\\\"y\\\":\\\"SS5ab-g4bBXX_zprYIvgWLxn2BkcZp6JTPdMiOGVUt8\\\"}\",\"signature\":\"TvyJSQSESyfF-2qQOR9UPo3oub6lkYZHtDOldjih-TweKnxq-pTOwlAwVbA5EXtsSeVrab5DrfF-28MHGg-ipw\",\"signingKeySignature\":\"0x4e61f654893e05f964a1e251e953d7c9598991d46819d51334724ce10644b7c15f950d8fbfebfe89e51a58c241dab8a9103e49fe8602249ffecc4abe967728cf1b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"dVkfcXtg2K4lHnbFTlaeRw1Bg3Ly7ptpMIhUr3sA9tg\\\",\\\"y\\\":\\\"SS5ab-g4bBXX_zprYIvgWLxn2BkcZp6JTPdMiOGVUt8\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"bSc8R76327_d8zHGD9q_DDwm90auUYxkqJSV9deVhug\"}"