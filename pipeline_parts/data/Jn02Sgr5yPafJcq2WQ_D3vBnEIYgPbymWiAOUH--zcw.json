"{\"content\":{\"body\":\"![](https://miro.medium.com/max/1400/1\\\\*9nxlETzn_j0GXsNdH8zcvQ.png)\\n\\n## **Requirements**\\n\\nA Safepay Commerce account and sandbox account\\n\\n1. Go to [Safepay Sandbox](https://sandbox.api.getsafepay.com/dashboard/signup) and create an account.\\n2. Go to \\\\*\\\\*Account > Settings \\\\*\\\\*and take note of your **API Key**\\n\\n## Add the Button\\n\\nAdd the Smart Payment Button to your site. This integration guide helps you:\\n\\n* Render a click-able Safepay Checkout Button\\n* Set up a transaction and immediately capture the funds into your account\\n* Test the button and take it live on your site\\n\\n## Add the Safepay script to your homepage\\n\\nAdd the Safepay script to your homepage\\n\\n```\\n<!DOCTYPE html><head>\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n  <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\" />\\n</head><body>\\n  <script\\n    src=\\\"https://storage.googleapis.com/safepayobjects/api/safepay-checkout.min.js\\\">\\n  </script>\\n</body>\\n```\\n\\nMake sure you\\n\\n* Add the `<!DOCTYPE html>` tag for optimal browser compatibility.\\n* Add the `<meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\" />` meta tag to the page for optimal Internet Explorer compatibility.\\n* Add the `<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">` tag to the page to ensure optimal rendering on mobile devices.\\n\\n## Render the Smart Payment Button\\n\\nNext, render the Safepay Smart Payment Button to a container element on your page:\\n\\n```\\n<html>\\n  <body>\\n    <script\\n     src=\\\"https://storage.googleapis.com/safepayobjects/api/safepay-checkout.min.js\\\">\\n    </script>    <div id=\\\"safepay-button-container\\\"></div>    <script>\\n      safepay.Button().render('#safepay-button-container');\\n    </script>\\n  </body>\\n</html>\\n```\\n\\nSo far so good! This will render a button on your page in the `#safepay-button-container` element. To customize it even further continue reading below.\\n\\n## Set up the transaction\\n\\nNext, implement the `payment` function, which is called when the buyer clicks the Safepay button. This step:\\n\\n* Calls Safepay using `actions.payment.create()` to set up the details of the transaction, including the amount, currency and more.\\n* Launches the Safepay Checkout window so the buyer can log in or checkout as guest and approve the transaction on Safepay.\\n\\n<!---->\\n\\n```\\n<script>\\n  safepay.Button.render({\\n    // Choose between \\\"production\\\" or \\\"sandbox\\\"\\n    env: 'sandbox',\\n    // The amount you wish you charge\\n    amount: 6800.57,\\n    // The currency of the purchase\\n    currency: \\\"PKR\\\",\\n    // Your API Keys\\n    client: {\\n      \\\"sandbox\\\": \\\"sec_4f84abd2-0bae-4476-be6b-22c8c9e35133\\\"\\n      \\\"production\\\": \\\"<YOUR_PRODUCTION_KEY>\\\"\\n    },    payment: function (data, actions) {\\n      return actions.payment.create({\\n        transaction: {\\n          amount: 6800.57,\\n          currency: 'PKR'\\n        }\\n      })\\n    }\\n  }, '#safepay-button-container');\\n</script>\\n```\\n\\n## Capture the transaction\\n\\nNext, implement the `onCheckout` function, which is called after the buyer approves the transaction on Safepay. This function:\\n\\n* Returns a `data` object containing details from the successful transaction that your system should store in its database.\\n* Allows you to show an appropriate message to your user explaining that the payment has been captured and the transaction was successful.\\n\\n<!---->\\n\\n```\\n<script>\\n  safepay.Button.render({\\n    // Choose between \\\"production\\\" or \\\"sandbox\\\"\\n    env: 'sandbox',\\n    // The amount you wish you charge\\n    amount: 6800.57,\\n    // The currency of the purchase\\n    currency: \\\"PKR\\\",\\n    // Your API Keys\\n    client: {\\n      \\\"sandbox\\\": \\\"sec_4f84abd2-0bae-4476-be6b-22c8c9e35133\\\"\\n      \\\"production\\\": \\\"<YOUR_CLIENT_KEY>\\\"\\n    },    payment: function (data, actions) {\\n      return actions.payment.create({\\n        transaction: {\\n          amount: 6800.57,\\n          currency: 'PKR'\\n        }\\n      })\\n    },    onCheckout: function(data, actions) {\\n      console.log(data)\\n      console.log(\\\"You completed the payment!\\\");\\n    }}, '#safepay-button-container');\\n</script>\\n```\\n\\nThe `data` object that is returned after the buyer successfully completes the transaction will look like this:\\n\\n```\\n{\\n  amount: 100\\n  client: \\\"client_071f9c25-c291-4dcf-a21e-79b576ddd0fd\\\"\\n  created_at: \\\"2019-05-15T20:04:55Z\\\"\\n  currency: \\\"PKR\\\"\\n  fees: 30\\n  net: 70\\n  reference: \\\"274263\\\"\\n  token: \\\"trans_24106c57-2627-44b7-9744-2e7b31c77e29\\\"\\n  tracker: \\\"track_3d7c740f-42b7-4844-8d93-80d86826c912\\\"\\n  updated_at: \\\"2019-05-15T20:04:55Z\\\"\\n  user: \\\"guest_ceea0319-0f3b-4921-bb05-aed3d2f1404d\\\"\\n}\\n```\\n\\n## Handling cancellations\\n\\nIn order to get notified if the buyer cancelled the transaction at any point, implement the `onCancel` function.\\n\\n```\\n<script>\\n  safepay.Button.render({\\n    // Choose between \\\"production\\\" or \\\"sandbox\\\"\\n    env: 'sandbox',\\n    // The amount you wish you charge\\n    amount: 6800.57,\\n    // The currency of the purchase\\n    currency: \\\"PKR\\\",\\n    // Your API Keys\\n    client: {\\n      \\\"sandbox\\\": \\\"sec_4f84abd2-0bae-4476-be6b-22c8c9e35133\\\"\\n      \\\"production\\\": \\\"<YOUR_CLIENT_KEY>\\\"\\n    },    payment: function (data, actions) {\\n      return actions.payment.create({\\n        transaction: {\\n          amount: 6800.57,\\n          currency: 'PKR'\\n        }\\n      })\\n    },    onCheckout: function(data, actions) {\\n      console.log(data)\\n      console.log(\\\"You completed the payment!\\\");\\n    },    onCancel: function (data, actions) {\\n      // The buyer cancelled the payment\\n      // Don't create an order in your system\\n    },}, '#safepay-button-container');\\n</script>\\n```\\n\\n## Testing sandbox transactions\\n\\nTo test sandbox transactions follow these steps:\\n\\n* Click the Safepay Checkout button and go through the checkout flow.\\n* When you reach the credit card form use the following Visa test cardNumber: 4111111111111111Expiry: 11/19Cvv: 111\\n* Click \\\\*\\\\*Authorize Transaction \\\\*\\\\*and then **Complete your purchase**\\n* Visit your Sandbox dashboard and verify that the payment appears\\n\\n## Go live\\n\\nTo launch your button into production, complete these steps:\\n\\n* Create an account on [Safepay Production](https://www.getsafepay.com/dashboard/signup) if you havenâ€™t already done so.\\n* Go to \\\\*\\\\*Account > Settings \\\\*\\\\*and take note of your **API Key**\\n* Add you production API key in the `client` configuration of the Button\\n\\n<!---->\\n\\n```\\n// Your API Keys\\nclient: {\\n  \\\"sandbox\\\": \\\"sec_4f84abd2-0bae-4476-be6b-22c8c9e35133\\\"\\n  \\\"production\\\": \\\"<YOUR_CLIENT_KEY>\\\"\\n},\\n```\\n\\n* Switch the `env` from `sandbox` to `production`\\n\\n*Congratulations. You have completed the basic Safepay Smart Payment Button integration. Your new button will set up and capture simple, one-time payments.*\",\"timestamp\":1637432314,\"title\":\"Safepay Checkout Integration Guide - The Safepay Blog - Medium\"},\"digest\":\"MA7U66jy-Cc78BiBCXIiTfOmeb__N_q3Wt1A1BdhwfY\",\"authorship\":{\"contributor\":\"0xA3B7630dB09F90738d9340820F5E0747F498564B\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"46xTLoq68viRvO5bxzAxmjD2XW5_jQ9kpa7j_q6-0uM\\\",\\\"y\\\":\\\"AU1nG5xrj202cmPeYAdhjKLtW8ptLknnucR7UZDuikE\\\"}\",\"signature\":\"EhHnhWnXvOu0FrfWUVn1P84XbATKLzC5sR9GMyPnPCq4c_vW7zOTkQH23JDrIrJL1sv9acsjTp23IhYenvwG7A\",\"signingKeySignature\":\"0x2aff42d92fd3881b3e1e65884dedc4b2b7d2de29f8dedd1a11be8897d25f732a7d873312c1f69adc66040839edea5df0683cb98490384938a85831a504068e7e1c\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"46xTLoq68viRvO5bxzAxmjD2XW5_jQ9kpa7j_q6-0uM\\\",\\\"y\\\":\\\"AU1nG5xrj202cmPeYAdhjKLtW8ptLknnucR7UZDuikE\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"MA7U66jy-Cc78BiBCXIiTfOmeb__N_q3Wt1A1BdhwfY\"}"