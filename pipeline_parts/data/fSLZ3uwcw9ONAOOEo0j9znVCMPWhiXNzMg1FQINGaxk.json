"{\"content\":{\"body\":\"### 购买服务器并连接省略不写，不会的自行百度\\n\\n![image.png](https://upload-images.jianshu.io/upload_images/16626132-373144722ebb4de2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\\n\\nUCloud全球大促：<https://www.ucloud.cn/site/active/kuaijiesale.html?invitation_code=C1x2E6088EA03C6>\\nCDN超值特惠专场：<https://www.ucloud.cn/site/active/cdn-ufile.html?invitation_code=C1x2E6088EA03C6>\\n快杰云主机推广：<https://www.ucloud.cn/site/active/ohost.html?invitation_code=C1x2E6088EA03C6>\\n\\n#### 安装\\n\\n* 安装wget\\n\\n  ```\\n  sudo yum -y install wget\\n  ```\\n* 安装unzip\\n\\n  ```\\n  sudo yum install zip unzip\\n  ```\\n* 安装v2ray\\n\\n  ```\\n  bash <(curl -L https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh)\\n  ```\\n  * 等待安装完成\\n* 项目地址\\n\\n  <https://github.com/v2fly/v2ray-core>\\n* 安装和更新文档\\n\\n  <https://github.com/v2fly/fhs-install-v2ray>\\n* 参考网站\\n\\n  <https://www.v2ray.com/>\\n\\n#### 生成UUID\\n\\n```\\ncat /proc/sys/kernel/random/uuid\\n```\\n\\n* 记住生成的这玩意`b72dc422-5813-4a98-98fc-e14c3e9904d8`\\n\\n#### 配置\\n\\n* 进入config.json\\n\\n  ```\\n  /usr/local/etc/v2ray/config.json\\n  ```\\n* 配置如下\\n\\n  ```\\n  {\\n    \\\"inbounds\\\": [{\\n      \\\"port\\\": 20001,\\n      \\\"protocol\\\": \\\"vmess\\\",\\n      \\\"settings\\\": {\\n        \\\"clients\\\": [\\n          {\\n            \\\"id\\\": \\\"b72dc422-5813-4a98-98fc-e14c3e9904d8\\\",\\n            \\\"level\\\": 1,\\n            \\\"alterId\\\": 64\\n          }\\n        ]\\n      }\\n    }],\\n    \\\"outbounds\\\": [{\\n      \\\"protocol\\\": \\\"freedom\\\",\\n      \\\"settings\\\": {}\\n    },{\\n      \\\"protocol\\\": \\\"blackhole\\\",\\n      \\\"settings\\\": {},\\n      \\\"tag\\\": \\\"blocked\\\"\\n    }],\\n    \\\"routing\\\": {\\n      \\\"rules\\\": [\\n        {\\n          \\\"type\\\": \\\"field\\\",\\n          \\\"ip\\\": [\\\"geoip:private\\\"],\\n          \\\"outboundTag\\\": \\\"blocked\\\"\\n        }\\n      ]\\n    }\\n  }\\n  ```\\n* 直接复制我上面的配置即可使用，id就是上面第二步获取的用户id\\n* 此时端口是20001\\n* ID是b72dc422-5813-4a98-98fc-e14c3e9904d8\\n\\n### 启动\\n\\n* 在首次安装完成之后，V2Ray 不会自动启动，需要手动运行上述启动命令\\n\\n  ```\\n  ## 启动\\n  sudo systemctl start v2ray\\n  \\n  ## 停止\\n  sudo systemctl stop v2ray\\n  \\n  ## 重启\\n  sudo systemctl restart v2ray\\n  ```\\n\\n### 客户端使用\\n\\n* windows\\n  * 【v2rayN-v2rayN.exe-Github Release】 <https://github.com/2dust/v2rayN/releases>\\n  * 【v2ray-windows-64.zip Github Release】 <https://github.com/v2ray/v2ray-core/releases>\\n* Android\\n  * 需要你去网上找设备相应的CPU架构并进行选择下载，也可以选择“universal”通用版的，但它却要比其它的安装包大个两倍多，难免会有些臃肿）\\n  * <https://github.com/2dust/v2rayNG/releases>\\n* macos\\n  * （Debian、Ubantu、CentOS等电脑桌面发行版（不能完全通用，可以尝试一下））\\n  * <https://github.com/jiangxufeng/v2rayL/releases>\\n* ios\\n  * 需要国外账号，推荐shadowrocket（小火箭），quantumult（圈），kitsunebi\\n\\n### 工具列表\\n\\n**图形客户端**\\n\\n> V2RayW\\n\\n* V2RayW 是一个基于 V2Ray 内核的 Windows 客户端。用户可以通过界面生成配置文件，并且可以手动更新 V2Ray 内核。下载：[GitHub](https://github.com/Cenmrev/V2RayW)\\n\\n> V2RayN\\n\\n* V2RayN 是一个基于 V2Ray 内核的 Windows 客户端。下载：[GitHub](https://github.com/2dust/v2rayN)\\n\\n> Clash for Windows\\n\\n* 下载：[GitHub](https://github.com/Fndroid/clash_for_windows_pkg)\\n\\n> V2RayX\\n\\n* V2RayX 是一个基于 V2Ray 内核的 Mac OS X 客户端。用户可以通过界面生成配置文件，并且可以手动更新 V2Ray 内核。V2RayX 还可以配置系统代理。下载：[Github](https://github.com/Cenmrev/V2RayX)\\n\\n> V2RayU\\n\\n* V2rayU,基于v2ray核心的mac版客户端,界面友好,使用swift4.2编写,支持vmess,shadowsocks,socks5等服务协议,支持订阅, 支持二维码,剪贴板导入,手动配置,二维码分享等。下载：[GitHub](https://github.com/yanue/V2rayU)\\n\\n> V2RayC\\n\\n* 下载：[GitHub](https://github.com/gssdromen/V2RayC)\\n\\n> ClashX\\n\\n* 下载：[GitHub](https://github.com/yichengchen/clashX)\\n\\n> Qv2ray\\n\\n* Qv2ray：使用 Qt 编写的 v2ray 跨平台 GUI （MacOS, Windows, Linux）支持连接导入和编辑，中英文切换\\n* 下载：[GitHub](https://github.com/lhy0403/Qv2ray)\\n* 官网：<https://lhy0403.github.io/Qv2ray>\\n\\n> Mellow\\n\\n* Mellow 是一个基于规则的全局透明代理工具，可以运行在 Windows、macOS 和 Linux 上，也可以配置成路由器透明代理或代理网关，支持 SOCKS、HTTP、Shadowsocks、VMess 等多种代理协议。\\n* Download: [Github](https://github.com/mellow-io/mellow)\\n\\n> Kitsunebi\\n\\n* Kitsunebi 是一个基于 V2Ray 核心的移动平台应用 (iOS, Android)。它可以创建基于 VMess 或者 Shadowsocks 的 VPN 连接。Kitsunebi 支持导入和导出与 V2Ray 兼容的 JSON 配置。\\n* 由于使用 V2Ray 核心，Kitsunebi 几乎支持 V2Ray 的所有功能，比如 Mux 和 mKCP。\\n* 下载：[iTunes](https://itunes.apple.com/us/app/kitsunebi-proxy-utility/id1446584073?mt=8) | [Play Store](https://play.google.com/store/apps/details?id=fun.kitsunebi.kitsunebi4android&hl=en_US)\\n\\n> i2Ray\\n\\n* i2Ray 是另一款基于 V2Ray 核心的iOS应用。界面简洁易用，适合新手用户使用。同时兼容Shadowrocket和Quantumult格式的规则导入。\\n\\n下载：[iTunes](https://itunes.apple.com/us/app/i2ray/id1445270056?mt=8)\\n\\n> Shadowrocket\\n\\n* Shadowrocket 是一个通用的 iOS VPN 应用，它支持众多协议，如 Shadowsocks、VMess、SSR 等。\\n* 下载：[iTunes](https://itunes.apple.com/us/app/shadowrocket/id932747118?mt=8)\\n\\n> Pepi（原名ShadowRay）\\n\\n* Pepi 是一个兼容 V2Ray 的 iOS 应用，它可以创建基于 VMess 的 VPN 连接，并与 V2Ray 服务器通信。\\n* 下载：[iTunes](https://itunes.apple.com/us/app/pepi/id1283082051?mt=8)\\n\\n> Quantumult\\n\\n* 下载：[iTunes](https://itunes.apple.com/us/app/quantumult/id1252015438?mt=8)\\n\\n> BifrostV\\n\\n* BifrostV 是一个基于 V2Ray 内核的 Android 应用，它支持 VMess、Shadowsocks、Socks 协议。\\n* 下载：[Play Store](https://play.google.com/store/apps/details?id=com.github.dawndiy.bifrostv) | [APK Pure](https://apkpure.com/bifrostv/com.github.dawndiy.bifrostv)\\n\\n> V2RayNG\\n\\n* 下载：[Play Store](https://play.google.com/store/apps/details?id=com.v2ray.ang) | [GitHub](https://github.com/2dust/v2rayNG)\\n\\n## 在线工具/资源\\n\\n> VeekXT V2Ray配置生成\\n\\n* 支持 4.x 版本的配置文件生成器 [veekxt.com](https://www.veekxt.com/utils/v2ray_gen)\\n\\n> V2Ray 配置生成器\\n\\n* 静态 V2Ray 配置文件生成页面 [GitHub](https://github.com/htfy96/v2ray-config-gen)\\n\\n> UUID Generator\\n\\n* VMess User ID 生成工具 [uuidgenerator.net](https://www.uuidgenerator.net/)\\n\\n> vTemplate 项目仓库\\n\\n* 一个 V2Ray 配置文件模板收集仓库 [GitHub](https://github.com/KiriKira/vTemplate)\\n\\n### 配置信息参考\\n\\n* <https://toutyrater.github.io/>\\n\\n### websocket反向代理配置\\n\\n* v2ray服务器配置\\n\\n  ```\\n  {\\n    \\\"inbounds\\\": [\\n      {\\n        \\\"port\\\": 20001,\\n        \\\"protocol\\\": \\\"vmess\\\",\\n        \\\"settings\\\": {\\n          \\\"clients\\\": [\\n            {\\n              \\\"id\\\": \\\"b72dc422-5813-4a98-98fc-e14c3e9904d8\\\",\\n              \\\"alterId\\\": 0,\\n              \\\"email\\\": \\\"\\\"\\n            }\\n          ],\\n          \\\"decryption\\\": \\\"none\\\"\\n        },\\n        \\\"streamSettings\\\": {\\n          \\\"network\\\": \\\"ws\\\",\\n          \\\"security\\\": \\\"none\\\",\\n          \\\"tlsSettings\\\": {},\\n          \\\"wsSettings\\\": {\\n            \\\"connectionReuse\\\": true,\\n            \\\"path\\\": \\\"/blog\\\",\\n            \\\"headers\\\": {\\n              \\\"Host\\\": \\\"你的域名(需要配置到自己的网站上去)\\\"\\n            }\\n          }\\n        },\\n        \\\"tag\\\": \\\"proxy\\\"\\n      }\\n    ],\\n    \\\"outbounds\\\": [\\n      {\\n        \\\"protocol\\\": \\\"freedom\\\",\\n        \\\"settings\\\": {\\n          \\\"domainStrategy\\\": \\\"UseIP\\\"\\n        }\\n      },\\n      {\\n        \\\"protocol\\\": \\\"blackhole\\\",\\n        \\\"settings\\\": {},\\n        \\\"tag\\\": \\\"blocked\\\"\\n      }\\n    ],\\n    \\\"routing\\\": {\\n      \\\"settings\\\": {\\n        \\\"rules\\\": [\\n          {\\n            \\\"inboundTag\\\": [\\n              \\\"api\\\"\\n            ],\\n            \\\"outboundTag\\\": \\\"api\\\",\\n            \\\"type\\\": \\\"field\\\"\\n          },\\n          {\\n            \\\"type\\\": \\\"field\\\",\\n            \\\"ip\\\": [\\n              \\\"0.0.0.0/8\\\",\\n              \\\"10.0.0.0/8\\\",\\n              \\\"100.64.0.0/10\\\",\\n              \\\"169.254.0.0/16\\\",\\n              \\\"172.16.0.0/12\\\",\\n              \\\"192.0.0.0/24\\\",\\n              \\\"192.0.2.0/24\\\",\\n              \\\"192.168.0.0/16\\\",\\n              \\\"198.18.0.0/15\\\",\\n              \\\"198.51.100.0/24\\\",\\n              \\\"203.0.113.0/24\\\",\\n              \\\"::1/128\\\",\\n              \\\"fc00::/7\\\",\\n              \\\"fe80::/10\\\"\\n            ],\\n            \\\"outboundTag\\\": \\\"blocked\\\"\\n          }\\n        ]\\n      },\\n      \\\"strategy\\\": \\\"rules\\\"\\n    }\\n  }\\n  ```\\n* 客户端配置\\n\\n  mark\\n* nginx配置中添加如下配置(拦截的相关后缀根据上边的配置自行修改)\\n\\n  ```\\n  location /blog\\n  {\\n      proxy_redirect off;\\n      proxy_pass http://127.0.0.1:20001;\\n      proxy_http_version 1.1;\\n      proxy_set_header Upgrade $http_upgrade;\\n      proxy_set_header Connection \\\"upgrade\\\";\\n      proxy_set_header Host $http_host;\\n      proxy_set_header X-Real-IP $remote_addr;\\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\n  }\\n  ```\\n* 我使用了https协议进行伪装，自己根据自己的需求进行修改，BT面板可以直接自己进行修改\",\"timestamp\":1640573790,\"title\":\"v2ray 搭建教程\"},\"digest\":\"C92gWIKxhbiyfBxlvIfiv-50f03PxcBLcwvkbt3R0Lw\",\"authorship\":{\"contributor\":\"0x3e3210C7df16fA815B8502A17383C191D00878aD\",\"signingKey\":\"{\\\"alg\\\":\\\"ES256\\\",\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"QoRPKmPxmlUe6qLC0LqoEQLySO5erSAIDCYgiQtpb08\\\",\\\"y\\\":\\\"enOKm-AExVQIvYM6P5wh8DbTFkfpnnfW-x-Z1Ld0GA0\\\"}\",\"signature\":\"zpsLfRD_UcBfndRnxOwSxGOy1V1MdsnTw7CiLmIvrNjqmeSclzT9-KIh70Vvbz5-myOZVxi5EJAR19__zlthJQ\",\"signingKeySignature\":\"0xf7cee934963b43fb9b18131becc0b375c269b5f43bb9bf49b6feded3498a488b301256779f638123d733abfbb5722137827e748c2179ab005d9eaf1f7fc6b4041c\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"alg\\\":\\\"ES256\\\",\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"QoRPKmPxmlUe6qLC0LqoEQLySO5erSAIDCYgiQtpb08\\\",\\\"y\\\":\\\"enOKm-AExVQIvYM6P5wh8DbTFkfpnnfW-x-Z1Ld0GA0\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"C92gWIKxhbiyfBxlvIfiv-50f03PxcBLcwvkbt3R0Lw\"}"