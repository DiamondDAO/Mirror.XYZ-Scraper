"{\"content\":{\"body\":\"**1. gcc 安装** 安装 `nginx` 需要先将官网下载的源码进行编译，编译依赖 gcc 环境，如果没有 gcc 环境，则需要安装：\\n\\n```\\nyum install -y gcc-c++\\n```\\n\\n**2.安装**`make`**和**`libtool`**依赖**\\n\\n```\\nyum -y install make libtool\\n```\\n\\n**3. PCRE** `pcre-devel` **安装** PCRE(Perl Compatible Regular Expressions) 是一个Perl库，包括 perl 兼容的正则表达式库。`nginx` 的 http 模块使用 `pcre` 来解析正则表达式，所以需要在 linux 上安装 `pcre` 库，`pcre-devel`是使用 `pcre` 开发的一个二次开发库。`nginx`也需要此库。命令：\\n\\n```\\nyum install -y pcre pcre-devel\\n```\\n\\n**4.** `zlib` **安装** zlib 库提供了很多种压缩和解压缩的方式， nginx 使用 zlib 对 http 包的内容进行 gzip ，所以需要在 Centos 上安装 zlib 库。\\n\\n```\\nyum install -y zlib zlib-devel\\n```\\n\\n**5. OpenSSL 安装** OpenSSL 是一个强大的安全套接字层密码库，囊括主要的密码算法、常用的密钥和证书封装管理功能及 SSL 协议，并提供丰富的应用程序供测试或其它目的使用。 `nginx` 不仅支持 http 协议，还支持 https（即在ssl协议上传输http），所以需要在 CentOS 安装 OpenSSL 库。\\n\\n```\\nyum install -y openssl openssl-devel\\n```\\n\\n**6.使用**`wget`**命令下载** `nginx`\\n\\n确保系统已经安装了wget，如果没有安装，执行 yum install wget 安装。\\n\\n```\\nwget -c https://nginx.org/download/nginx-1.12.0.tar.gz\\n```\\n\\n```\\n# wget -c https://nginx.org/download/nginx-1.12.0.tar.gz\\n--2021-12-11 11:11:59--  https://nginx.org/download/nginx-1.12.0.tar.gz\\n正在解析主机 nginx.org (nginx.org)... 52.58.199.22, 3.125.197.172, 2a05:d014:edb:5704::6, ...\\n正在连接 nginx.org (nginx.org)|52.58.199.22|:443... 已连接。\\n已发出 HTTP 请求，正在等待回应... 200 OK\\n长度：980831 (958K) [application/octet-stream]\\n正在保存至: “nginx-1.12.0.tar.gz”\\n\\n100%[======================================>] 980,831      923KB/s 用时 1.0s   \\n\\n2021-12-11 11:12:02 (923 KB/s) - 已保存 “nginx-1.12.0.tar.gz” [980831/980831])\\n```\\n\\n也可以直接下载`.tar.gz`安装包，地址：<https://nginx.org/en/download.html>\\n\\n**7.解压**\\n\\n```\\ntar -zxvf nginx-1.12.0.tar.gz\\ncd nginx-1.12.0\\n```\\n\\n**8.配置**\\n\\n其实在 nginx-1.12.0 版本中你就不需要去配置相关东西，默认就可以了。当然，如果你要自己配置目录也是可以的。 \\n 1.使用默认配置\\n\\n默认地址 `/usr/local/nginx`\\n\\n```\\n./configure\\n```\\n\\n```\\n...\\nConfiguration summary\\n  + using system PCRE library\\n  + OpenSSL library is not used\\n  + using system zlib library\\n\\n  nginx path prefix: \\\"/usr/local/nginx\\\"\\n  nginx binary file: \\\"/usr/local/nginx/sbin/nginx\\\"\\n  nginx modules path: \\\"/usr/local/nginx/modules\\\"\\n  nginx configuration prefix: \\\"/usr/local/nginx/conf\\\"\\n  nginx configuration file: \\\"/usr/local/nginx/conf/nginx.conf\\\"\\n  nginx pid file: \\\"/usr/local/nginx/logs/nginx.pid\\\"\\n  nginx error log file: \\\"/usr/local/nginx/logs/error.log\\\"\\n  nginx http access log file: \\\"/usr/local/nginx/logs/access.log\\\"\\n  nginx http client request body temporary files: \\\"client_body_temp\\\"\\n  nginx http proxy temporary files: \\\"proxy_temp\\\"\\n  nginx http fastcgi temporary files: \\\"fastcgi_temp\\\"\\n  nginx http uwsgi temporary files: \\\"uwsgi_temp\\\"\\n  nginx http scgi temporary files: \\\"scgi_temp\\\"\\n```\\n\\n配置完毕\\n\\n2\\\\.自定义配置（不推荐）\\n\\n```\\n./configure \\\\\\n--prefix=/usr/local/nginx \\\\\\n--conf-path=/usr/local/nginx/conf/nginx.conf \\\\\\n--pid-path=/usr/local/nginx/conf/nginx.pid \\\\\\n--lock-path=/var/lock/nginx.lock \\\\\\n--error-log-path=/var/log/nginx/error.log \\\\\\n--http-log-path=/var/log/nginx/access.log \\\\\\n--with-http_gzip_static_module \\\\\\n--http-client-body-temp-path=/var/temp/nginx/client \\\\\\n--http-proxy-temp-path=/var/temp/nginx/proxy \\\\\\n--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \\\\\\n--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \\\\\\n--http-scgi-temp-path=/var/temp/nginx/scgi\\n```\\n\\n注：将临时文件目录指定为`/var/temp/nginx`，需要在/var下创建`temp`及`nginx`目录\\n\\n**9.编译安装**\\n\\n```\\nmake\\nmake install\\n```\\n\\n查找安装路径：\\n\\n```\\n# whereis nginx\\nnginx: /usr/local/nginx\\n```\\n\\n**10.启动、停止nginx**\\n\\n```\\ncd /usr/local/nginx/sbin/\\n./nginx \\n./nginx -s stop\\n./nginx -s quit\\n./nginx -s reload\\n```\\n\\n`./nginx -s quit`:此方式停止步骤是待nginx进程处理任务完毕进行停止。 \\n `./nginx -s stop`:此方式相当于先查出nginx进程id再使用kill命令强制杀掉进程。\\n\\n注：如果启动时报80端口被占用: `nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)`\\n\\n解决方法是安装net-tool 包\\n\\n```\\nyum install -y net-tools\\nnetstat -ntlp\\nkill -9 $pid //杀掉进程\\n/usr/local/nginx/sbin/nginx//再次启动nginx\\n```\\n\\n查询`nginx`进程：\\n\\n```\\nps aux|grep nginx\\n```\\n\\n11\\\\.\",\"timestamp\":1639207355,\"title\":\"CentOS7下安装nginx\"},\"digest\":\"NYtNkoetPfpW7iFCn3nWrw2JkKg2i7XJiG5WRRC282k\",\"authorship\":{\"contributor\":\"0x370dC4e3e3cFa0f6f7244aE551b4ce7Aa556f221\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"hhIHMMeS4M0Y4ntJHR3zn9bcrExV0Ju8caWE7WQDq-g\\\",\\\"y\\\":\\\"s-ciE2tG5iG2TjZ6vi7BvQUQZ82yc1uyD87tRRLhAp8\\\"}\",\"signature\":\"nqgLQjYsf7M6D9CaIYpZFYGIJtKgGO2eTMtKNIjDikNizQWUJy8DZG_e48YQHsGwjSwk8H6RD6tYr5XglGh3ow\",\"signingKeySignature\":\"0xb6d130ebf13a209086787519695c386193ceb668adca37d4e5e4f0df8db1c2d44795db8b2d72b1b0b868cd56f4d3b8808782692dfa3b769dd030549cb19e229b1b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"hhIHMMeS4M0Y4ntJHR3zn9bcrExV0Ju8caWE7WQDq-g\\\",\\\"y\\\":\\\"s-ciE2tG5iG2TjZ6vi7BvQUQZ82yc1uyD87tRRLhAp8\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"WWM-9LidKlHt87EI-UA97FhY6b75RWpscNXR57LqIrg\"}"