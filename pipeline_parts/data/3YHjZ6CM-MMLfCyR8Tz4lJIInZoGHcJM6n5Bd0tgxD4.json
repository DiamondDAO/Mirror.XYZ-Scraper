"{\"content\":{\"body\":\"### Recursos\\n\\n* [https://realpython.com/python-mock-library/](https://realpython.com/python-mock-library/#conclusion)\\n* <https://gist.github.com/evansde77/45467f5a7af84d2a2d34f3fcb357449c>\\n* <https://aaronlelevier.github.io/python-unit-testing-with-magicmock/>\\n\\nSuponiendo que existe una función `get_github_profile` en `services.py`\\n\\n```\\nimport requests\\n\\ndef get_github_profile(user_id: int):\\n    \\\"\\\"\\\" Obtener datos de un usuario de Github \\\"\\\"\\\"\\n\\n    headers = {\\\"accept\\\": \\\"application/vnd.github.v3+json\\\"}\\n\\n    response = requests.get(f\\\"https://api.github.com/users/{user_id}\\\", headers=headers)\\n\\n    user = response.json()\\n\\n    return user[\\\"name\\\"]\\n```\\n\\nSi hacemos un test que ejecute 100 veces esta función, encontraremos 2 problemas:\\n\\n* Las requests HTTP a una API externa son **lentas.**\\n* Posiblemente alcancemos un límite de requests muy rápidamente.\\n\\nEn estos casos podemos *mockear* esa request a la API externa.\\n\\n```\\ndef test_get_github_profile(self):\\n\\n    with patch('requests.get') as mock_request:\\n\\n        # A partir de acá `requests.get` es nuestro mock y podemos\\n        # modificar su comportamiento como queramos\\n\\n        # Set del valor que va a devolver nuestra request \\\"fake\\\"\\n        mock_request.return_value = {\\\"user_id\\\": 150, \\\"name\\\": \\\"Katie\\\"}\\n\\n        result = get_github_profile(user_id=150)\\n\\n        assert result == \\\"Katie\\\"\\n```\",\"timestamp\":1635811945,\"title\":\"Mocking de una función propia en tests de Python – Marco Richetta\"},\"digest\":\"9BXfXn8a_UvVKmkePZceF8_Q8B20Jy3IWxQLgkaZM8s\",\"authorship\":{\"contributor\":\"0x8BeB2c9993d5c7B98d4731Ab818968988905Ca03\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"1zB9R_XuIuGa5s09Ic5_mrQfyfvgoKfHYemnZxasFfA\\\",\\\"y\\\":\\\"b-wE8cScatD7c9loUqL36y1pLy7_L8bVFAE8yitwttw\\\"}\",\"signature\":\"DYerKOmbWOc5L1j8rctXUf0dg22w52pfpqiIIwxz6nX_9ijWStJBfsfaloEOtcuELAtIhiyd2KI7tlg4NtW5yg\",\"signingKeySignature\":\"0xfac6f9692f2fad182dd794899e6c53dfc615be4b61e1f285d7867028be8dfb6950d7ae71852b9029fd0fd599c37bca23c4a7b6af8b2445844df2c8455a3bffd41c\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"1zB9R_XuIuGa5s09Ic5_mrQfyfvgoKfHYemnZxasFfA\\\",\\\"y\\\":\\\"b-wE8cScatD7c9loUqL36y1pLy7_L8bVFAE8yitwttw\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"9BXfXn8a_UvVKmkePZceF8_Q8B20Jy3IWxQLgkaZM8s\"}"