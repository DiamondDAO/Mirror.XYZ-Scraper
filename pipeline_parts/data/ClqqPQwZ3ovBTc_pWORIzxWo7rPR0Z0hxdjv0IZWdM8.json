"{\"content\":{\"body\":\"Writing programs is not an easy job. It is rare for an application to be successfully built from 0 to completion without any problems, be it a write error or a program logic error. When an error occurs that causes the application not to run properly, that's when we find a bug.\\n\\nThere are several types of bugs that are often encountered, including:\\n\\n* Syntax writing error\\n* Error at runtime\\n* Logic error\\n\\n## Syntax writing error (syntax error)\\n\\nAs humans, we are certainly very with mistakes. The error that often occurs is writing the programming syntax incorrectly. Syntax is the rules of writing code that have been standardized by a particular language or framework. If we do not follow these rules, then the program we write will not run properly.\\n\\nSyntax writing errors usually occur when we forget some attributes such as quotes ( `\\\"`), semicolon ( `;`), brackets ( `[{<>}]`), or write incomplete commands. While it may seem simple at first glance, errors like this can take a while to find if you're not used to it.\\n\\n## Runtime error (runtime error)\\n\\nSyntax writing errors will usually appear immediately after the application will be executed or when it will be compiled. There are types of errors that do not appear when the application is first executed, but will appear after the program is run. This error appears when an application fails to execute something by the system while the program is running.\\n\\n## Logic error\\n\\nThis type of error is the most difficult to find because it rarely shows an error message. The consequences of logical errors are calculation errors (not always mathematical). The system cannot recognize this error because the writing has followed the correct rules but because the \\\"formula\\\" is wrong, the result is also wrong.\\n\\n\\n---\\n\\n## Tip 1: Be patient\\n\\nPatience, is the first action that needs to be taken once you find a bug. Keep calm, because sooner or later this bug will be found and fixed. When we panic, we are used to rushing into analysis.\\n\\n## Tip 2: Use a syntax highlighter\\n\\nMost modern text editors and IDEs have a *syntax highlighter installed* . This feature is very helpful for finding syntax errors. Syntax highlighter will make codes written in certain languages or rules so that they are more easily caught by the eye. For example, it will give different colors according to the type of variable, tell which variable has never been called or initialized, notify when there is a mix of space and tab indents, tell if the name of the called variable has not been declared, etc.\\n\\nSublime Text, Visual Studio Code, or Atom, have automatically activated the syntax highlighter feature for common languages such as Python, PHP, Javascript, Java, C/C++, etc. If you're using a framework, you might want to add a syntax highlighter specific to that framework. Some IDEs like Eclipse, IntelliJ IDEA, or Netbeans can even tell you if you're missing semicolon, missing or missing parentheses, etc.\\n\\n## Tip 3: Use static code analysis\\n\\nStatic code analysis is a program that automates the process of analyzing program code. Programs like this can detect program writing errors (syntactically not logical), multithreaded usage errors, detect memory leaks, detect vulnerabilities that might threaten applications, and so on.\\n\\nStatic code analysis can also be used to match writing styles in certain projects by creating writing rules that you can set yourself.\\n\\n## Tip 4: Using the debugger\\n\\nSyntax highlighter and static code analysis are very helpful in finding syntax errors and errors that may occur at runtime. There's just a runtime error that can't be detected by the example program above, so we need to use a debugger.\\n\\nDebugger is a special application that allows programmers to stop program execution at a certain line ( *breakpoint* ), check the value of a variable/object, and then continue execution line by line.\\n\\nThe majority of IDEs such as Eclipse, Netbeans, and IntelliJ IDEA already have a built-in debugger. Some text editors like Visual Studio Code also have it (other editors may need to add special plugins). Typically, each language has its own debugger that can be executed separately (using the command line), and the editors above implement debuggers that the language or framework developers have released.\\n\\nLogical errors can only be found by looking at the resulting values of a \\\"formula\\\". Because we can analyze variable values while the program is running and can stop execution on certain lines at will, the debugger will smooth the job of finding these errors.\\n\\n## Tip 5: Ask\\n\\nEven though we have used many tools, it is still possible for us to miss a bug. Maybe it's because we're not very careful, or maybe it's a new type of bug that no one else has ever found. If it turns out that you can't solve it yourself, then try to ask someone who might be able to help find the source of the error.\\n\\nToday, there are many programming groups on online platforms such as Facebook, Telegram, or WhatsApp. This place is perfect for asking questions that we can't solve on our own. However, use kind words and include questions with code samples or pictures of errors that appear.\\n\\n## Tip 6: Rest bosque\\n\\nIf you still can't find the bug you're looking for, take a break. Try to get out of the room, walk somewhere to take fresh air and increase blood circulation to the brain. Sometimes when we're resting, we can get \\\"inspirations from the sky\\\" that shed light on the bug we're looking for.\",\"timestamp\":1638429467,\"title\":\"Tips for Finding Bugs\"},\"digest\":\"_E1hEjwSBOes00_sex7v10NHZTAeI7PzGfBjac6KU1k\",\"authorship\":{\"contributor\":\"0x0b23824E6B665730A41cC0Ae2a261DB1fb220ed9\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"VaZzafFENfmbQGlZv0OykGwKgaUMRSes2XffQsHWOhA\\\",\\\"y\\\":\\\"y6Zx3Z1G8IE3Qo9O3683ervIXErSHxDpBP55juFoths\\\"}\",\"signature\":\"fqQbQhCzm9ZqXaJA6dsmzIQpsd3o6_7ldhoGdhG_Xis9_E3B7sbEfkv3hka689jxQnvFfhMmdNxSlCsmVG9AHA\",\"signingKeySignature\":\"0xf4a55b07b9accf0c1ccdda84b78d5b444ece607d30b1397649a882c824d7ffd641882c20bfde84ad46b8a320ed891ac50dc2477eeed17b6072018ac6be4458201c\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"VaZzafFENfmbQGlZv0OykGwKgaUMRSes2XffQsHWOhA\\\",\\\"y\\\":\\\"y6Zx3Z1G8IE3Qo9O3683ervIXErSHxDpBP55juFoths\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"_E1hEjwSBOes00_sex7v10NHZTAeI7PzGfBjac6KU1k\"}"