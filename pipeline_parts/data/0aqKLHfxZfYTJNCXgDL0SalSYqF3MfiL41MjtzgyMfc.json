"{\"content\":{\"body\":\"## はじめに\\n\\nMetaverseのブランドを標榜し、**1月13日に行われたPhase1セールで8700個のNFTが即完売**したAzukiプロジェクト。このAzuki NFTは独自のERC721規格である[ERC721A](https://www.azuki.com/erc721a)を利用することでセール時のトランザクション手数料を大幅に削減することができました。\\n\\n[https://twitter.com/AzukiZen/status/1479235139167207432](https://twitter.com/AzukiZen/status/1479235139167207432)\\n\\nイーサリアムをはじめとしたEVMエコシステムにおけるNFTの代表的な規格であるERC721は、暗号資産のようなFungibleなトークンと比べて、非常に多くのトランザクション手数料（いわゆるGas代）が発生します。\\n\\nAzukiはERC721の内部構造をプロジェクトに最適化することで、発行時の手数料の少ないERC721互換のNFTを実現しています。本記事ではこのERC721Aについて解説していきます。なお、ソースコードは[Etherscan上で公開されているもの](https://etherscan.io/address/0xed5af388653567af2f388e6224dc7c4b3241c544#code)、および[GitHubで公開されているもの](https://github.com/chiru-labs/ERC721A/tree/00f50587262a5d415303c36756fb0ef5e217c5ec)をベースにします。\\n\\n## ERC721Aの3つの特徴\\n\\n* ERC721Enumerableのインターフェースは保持\\n* 複数のNFTをmintする際の手数料を削減\\n* tokenOwnerByIndexのgas削減と注意\\n\\nERC721Aの特徴を3つのパートに分けて説明していきます。\\n\\n## ERC721Enumerableのインターフェースは保持\\n\\nERC721は、あるトークンから所有するアカウントの情報を持つ規格ではありますが、あるアカウントが所有するトークンの一覧をストレージのデータとして保持しているわけではありません。つまり、自身を含むスマートコントラクト上から、あるアカウントのトークン一覧を参照することができません。\\n\\nそこで、**ERC721EnumerableというERC721の拡張規格**が提案されており、OpenZeppelin等にも広く利用されています。ERC721Enumerableでは、トークン一覧参照のためのデータをストレージに保存することで一覧情報を参照できるようにします。したがってシンプルなERC721に比べて、余分にストレージを利用することになるため、ERC721Enumerableを実装する場合は、transferやmintに必要となるgasが増加することになります。\\n\\n[https://speakerdeck.com/rmanzoku/enumerate-erc-721](https://speakerdeck.com/rmanzoku/enumerate-erc-721)\\n\\nEnumerableつまり、スマートコントラクトでの一覧表示の必要性の低い一点物のアートNFTや、一部ゲームのようにオフチェーンでの参照を前提とするエコシステムを構築する場合には、Enumebrableをあえて選択しないことで、mintや将来的なtransferのコストを下げる選択が考えられます。\\n\\nAzukiは、将来的なオンチェーンエコシステムを鑑み、ERC721Enumerableを外すという選択はしませんでした。後述するように、単純な所有情報すらも発行時のストレージ利用に手を加えているため、**全てのトークンの中から保有しているトークンを走査するというアプローチでERC721Enumerableを実現**しています。\\n\\n## 複数のNFTをmintする際の手数料を削減\\n\\nERC721Aの目玉機能として、mintつまり新規発行時に複数同時に発行する場合のgasを大幅に削減できることを謳っています。\\n\\nまず、スマートコントラクトの記憶領域であるストレージに情報を保存する際にgasを使用します。このgasに対してトランザクション作成時に指定するgas priceを掛け算することでトランザクションの手数料が発生します。\\n\\nERC721の場合、トークンIDに対してオーナー情報をスマートコントラクトのストレージ上に記録するため、トークンIDの数だけストレージを使用しmintやtransferの際にgasを使用します。\\n\\n![ERC721はトークンの数だけストレージを使用する](https://images.mirror-media.xyz/publication-images/zk_LP9hiRlsfm9w2k_xF1.png?height=1500&width=3000)\\n\\n一方、ERC721Aでは複数のNFTのmintかつ連番での発行を前提としているため、その複数個の処理（バッチサイズ/BatchSize）のまとめ、**一番若いトークンIDのみストレージを使用し、バッチサイズ-1のストレージの書き込みを先送りします**。\\n\\n![ERC721Aのmint](https://images.mirror-media.xyz/publication-images/bMCFCxi4MDyisFibluZl5.png?height=1500&width=3000)\\n\\n上図の場合、0xAが5つのNFTをmintする際にトークンID 1にのみオーナー情報を記録し、2〜4のIDにオーナー情報は記録しません。[オーナー情報を参照する際](https://github.com/chiru-labs/ERC721A/blob/00f50587262a5d415303c36756fb0ef5e217c5ec/ERC721A.sol#L159-L179)は、IDが若い順に走査することで、2〜4のトークンのオーナーは1のトークンオーナーと同じ、つまり0xAであることがわかるようになっています。\\n\\nただし、この実装は所有情報を先送りいており、例えばtransferによる譲渡が発生する場合は改めてオーナー情報をストレージに書き込むことになります。また、Azukiが言及しているように**複数のトークンを同時にmintする際にのみ効力を発揮する**ことがわかります。\\n\\n![ERC721Aのtransfer](https://images.mirror-media.xyz/publication-images/U2PimuTmG9uO_Zwfz5xlq.png?height=1500&width=3000)\\n\\n上図では、トークンID 3のトークンを0xCへtransferします。このとき、トークンID 4も同時にストレージに書き込むことで、前述した参照時の実装に整合性を持たせるようになっています。\\n\\n![ERC721A transfer後のストレージ](https://images.mirror-media.xyz/publication-images/xn-vtZ2apIj_0d16FSKT0.png?height=1500&width=3000)\\n\\nストレージが書き変わったあとにトークンID 4を0xAと書き込むことで、トークンID 5の所有情報に整合性がとれるようになっています。\\n\\nこのようにトークンごと個別にストレージに書き込むことでmintに負担があった従来のERC721に比べて、mint時の負担を極力減らすことを実現しており、ERC721Aの最大の特徴といえるでしょう。\\n\\n## tokenOfOwnerByIndexのgas削減と注意\\n\\n前述したとおり、ERC721AではERC721Enumerableを実装しているため、スマートコントラクトから所有するトークン一覧を取得することができます。通常であればアカウントごとのトークン所有情報をストレージに追加保存し、tokenOfOwnerByIndex関数を実行することで一覧を取得します。\\n\\nERC721Aでは、ERC721Enumerableで発生する追加情報を保存せずにtokenOfOwnerByIndex実行時に**全ての発行済みトークンを走査する**ことで実現しています。これにより、mintおよびtransfer時のgasを大幅に削減することができます。\\n\\n一方で、tokenOfOwnerByIndexが全ての発行済みトークンを走査するため、この関数を**トランザクションの一部で実行した場合に、発行済みトークンの数だけ処理が実行される**ことになります。この処理は、ストレージの更新を伴わないため、1つ1つは大きなgasとなりませんが、膨大な数のトークンがある場合には注意が必要です。\\n\\nAzukiのコントラクトには、10000以上のトークンがある場合は注意をする旨がコメントされています。\\n\\n```\\n    /**\\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\\n     * This read function is O(collectionSize). If calling from a separate contract, be sure to test gas first.\\n     * It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index)\\n        public\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        require(index < balanceOf(owner), \\\"ERC721A: owner index out of bounds\\\");\\n        uint256 numMintedSoFar = totalSupply();\\n        uint256 tokenIdsIdx = 0;\\n        address currOwnershipAddr = address(0);\\n        for (uint256 i = 0; i < numMintedSoFar; i++) {\\n            TokenOwnership memory ownership = _ownerships[i];\\n            if (ownership.addr != address(0)) {\\n                currOwnershipAddr = ownership.addr;\\n            }\\n            if (currOwnershipAddr == owner) {\\n                if (tokenIdsIdx == index) {\\n                    return i;\\n                }\\n                tokenIdsIdx++;\\n            }\\n        }\\n        revert(\\\"ERC721A: unable to get token of owner by index\\\");\\n    }\\n```\\n\\n## ERC721Aはどういったケースに使えるのか？\\n\\nAzuki NFTをベースにERC721Aの解説を行いました。この規格はどのようなケースに使えるのでしょうか？\\n\\nAzukiのTwitterの投稿やウェブサイトを見ると、このプロジェクトのモチベーションの一つに、**NBA TopShotやポケモンカードパック開封の楽しみがモチベーション**になっていることがわかります。\\n\\n**トークンを購入する、後日パックを開封する、唯一の存在であるNFTに出会う**、そのような体験を前提とした場合、複数個を購入することはある種当然の思想になります。\\n\\n本記事で記述したとおり、**ERC721Aはトランザクション手数料を下げる銀の弾丸のような実装であるわけではなく、プロジェクトの特性に合わせてERC721という規格のgas利用タイミングを最適化した**ものです。\\n\\nイーサリアムの手数料の高騰が叫ばれて1年以上立ちますが、NFTを含めイーサリアム上のプロジェクトはまだまだ勢いを持っています。今後もERC規格を満たす特殊な実装が増えてイノベーションが起こっていくのでしょう。\",\"timestamp\":1642096199,\"title\":\"Azukiが開発したNFT規格ERC712Aは何を行なっているのか？\"},\"digest\":\"RADh8fqxfBEf8bPgg3cEHhhq8G_7Mt5BCSKtpAT7YAk\",\"authorship\":{\"contributor\":\"0xd868711BD9a2C6F1548F5f4737f71DA67d821090\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"xaKnUUzHPg5FhSzAl6rsjO0XgSAb37vTRPVjzMUSW6o\\\",\\\"y\\\":\\\"9yyifC_pwApjM6gG037HsTjErQ9RPzJ-gUrmgTgWqEc\\\"}\",\"signature\":\"kBIEDztr8XHDuVNdJwUQJlgOdK3OOul3QWa-65ys1O-pcWP-E-v2rXwx8kEZ2sVZi9cur_7y0V2HQZ1AFkcYCg\",\"signingKeySignature\":\"0x61b8d31f8164d9f87a6a9c657cae67a768ef45121c114dd02980eca546da240e5a4b4dd82205f9210a824513c4dd2d74dcdeee13e55ce8f3d0ba43685343096c1c\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"xaKnUUzHPg5FhSzAl6rsjO0XgSAb37vTRPVjzMUSW6o\\\",\\\"y\\\":\\\"9yyifC_pwApjM6gG037HsTjErQ9RPzJ-gUrmgTgWqEc\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"vw5Qg6caMYIw5HljtVwAfDU5kXJmZ76ZosO4cfiyMHE\"}"