"{\"content\":{\"body\":\"**ERC233**是一个通证标准，解决ERC20的以下问题： \\n 1）容易被错误转账到合约地址，然后不可找回 \\n 2）无法对收到的转账进行处理 \\n 3）与ETH的转账逻辑不一致，即应该永远使用transfer（而非approve和transferFrom） \\n  \\n 简单来说，ERC233代币在转账时，如果接收方是合约，则必须调用接收合约的tokenReceived函数，让合约处理接收。 \\n function tokenReceived(address _from, uint _value, bytes calldata _data) \\n  \\n 如果tokenReceived不存在，则交易失败。接收合约的tokenReceived函数还需要检测收到的代币是否允许接受（比如只支持WBTC） \\n  \\n 另外，还新增了一个带有bytes参数的transfer函数，该参数会被递交到tokenReceived的_data。 \\n function transfer(address _to, uint _value, bytes calldata _data) returns (bool) \\n  \\n 由于接收合约必须有tokenReceived函数，否则交易就会失败，ERC233明显会造成大量兼容性问题。\\n\\n**ERC677**在两个月后发表，为了保证兼容性，他只在ERC20的基础上增加一个transferAndCall函数。 \\n  \\n transferAndCall和ERC233的普通transfer类似，转账后会调用接收合约的onTokenTransfer函数（类似tokenReceived） \\n function onTokenTransfer(address from, uint256 amount, bytes data) returns (bool success) \\n  \\n **在DEX中的应用** \\n 用户不再需要approve，可以用一次交易完成兑换。 \\n  \\n **在Web3上的应用** \\n 假设每个用户都拥有一个社交合约，可以用于接收打赏。现在用户可以限制接受的币种（并且防止收到垃圾币），在收到打赏后可以自动做出反应。 \\n  \\n **在Chainlink中的应用** \\n Chainlink的服务需要LINK代币支付费用，使用transferAndCall进行付费和调用。例如向特定预言机发送任务请求： \\n link.transferAndCall(_oracle, _payment, encodeRequest(_req)) \\n  \\n **局限性** \\n 一个接收合约支持多种业务类型时，由于只有transferAndCall一个入口，可能不利于代码编写。 \\n \",\"timestamp\":1636044315,\"title\":\"ERC233和ERC677\"},\"digest\":\"KQHeOZzhBt0RbNW65FmxDXnvUXJViEzIzFOmo-ggha8\",\"authorship\":{\"contributor\":\"0x6544df975cF58A0b2C9a361a8db2e00D338e10c1\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"cVAKz1oZMGSg-cd2hD3smsf9NkRTBx5Y7HruAEbnF3Y\\\",\\\"y\\\":\\\"JqMdFM5tzB9jgqAARMnOEgfqZjSWmMBgtumPNIP2q1U\\\"}\",\"signature\":\"1SXHJiA5qdpz8SlPH7BSmVQceapHCxONRR0RitH18kco75Sbkj6Y9y3mos0hxNpO_Qk_JrLLI6mpVKi-aoaOcw\",\"signingKeySignature\":\"0xc77bd34a607073f05a834c48fc62bfab2f55b523eb9fd4f66e83bbf9a2cca8625d6b344ef9af3406eac1691db0a3f9b3e3b28491c64b3bd65753d3e5a7ca2a381b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"cVAKz1oZMGSg-cd2hD3smsf9NkRTBx5Y7HruAEbnF3Y\\\",\\\"y\\\":\\\"JqMdFM5tzB9jgqAARMnOEgfqZjSWmMBgtumPNIP2q1U\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"KQHeOZzhBt0RbNW65FmxDXnvUXJViEzIzFOmo-ggha8\"}"