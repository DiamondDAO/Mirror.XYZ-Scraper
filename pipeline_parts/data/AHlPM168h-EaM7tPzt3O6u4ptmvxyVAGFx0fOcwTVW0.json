"{\"content\":{\"body\":\"Blockchain is a popular new concept at present, which contains two concepts of technology and finance. From a technical point of view, this is a distributed database that sacrifices consistency efficiency and ensures final consistency. Of course, this is one-sided. From the perspective of economics, this peer-to-peer network with strong fault tolerance just meets a necessary requirement of sharing economy - low-cost trusted environment. This time, I will share the blockchain technology and the current blockchain technology architecture, and introduce the Internet value. As blockchain is an emerging technical concept, all views in this paper only represent personal views and may not be all correct# 1. The correct attitude of technicians towards blockchain although blockchain is an emerging concept, the technologies it relies on are not new at all, such as asymmetric encryption technology, P2P network protocol, etc. Like Lego blocks, blocks are limited, but different combinations can produce very interesting things. I have contacted some engineers. When I first came into contact with blockchain, I invariably expressed that they are mature technologies, that is, distributed storage. From the perspective of engineers, it is very natural for the first reaction to map this new concept into its own knowledge framework. However, after careful study, it is found that this one-sided understanding may lead to a misunderstanding in the understanding of blockchain, that is, as a technician, he ignores the economic characteristics of blockchain - a decentralized and fully autonomous system. Blockchain is essentially a P2P based value transmission protocol. We can't just see P2P without value transmission. Similarly, you can't just see the value transmission without seeing the underlying technology of the blockchain. It can be said that blockchain is more like an interdisciplinary subject, which combines P2P network technology, asymmetric encryption technology, macroeconomics, economic game and other knowledge to build a new field - Exploration for value Internet. What is the value of the Internet? Value Internet can be the payment business derived from the current booming e-commerce. But is it really just the field of payment? Obviously, this is not enough. Primary capital market, confirmation and transfer of real assets, securities registration and delivery, credit certification and anti fraud. Let's think about it again. Are there still few malicious swipes from professional bad reviewers of our major e-commerce platforms? In today's financial field, in addition to convenient payment, in most other businesses, we are like walking in chains. We repeatedly confirm, review and supervise. We repeatedly build one large and small high availability cluster after another to ensure the reliability and continuity of online services. We hire one security engineer after another, Deliver one penetration test project after another. Why? Because the cost of cheating is so low that millions of funds can be extracted by changing one line of records in the database. The powerful Internet gives us a high-speed information transmission channel with almost zero cost, but there is no low-cost and reliable high-speed value transmission channel, so this is what blockchain will bring. Blockchain is a public distributed general ledger. Let's briefly introduce it from a technical point of view: imagine a 100 distributed database cluster. The current situation is that the actual owner of these 100 nodes is an organization, and all nodes are in the intranet of the organization, so the organization wants these 100 database nodes to do whatever it wants, In other words, the 100 nodes are in a trusted environment and controlled by an entity with absolute arbitration allocation rights. In addition, imagine that the 100 nodes are owned by different people, and everyone's node data is the same, that is, completely redundant, and all nodes are in the WAN. In other words, the 100 nodes are untrusted, there is no entity, and it has absolute arbitration power. Now consider the second case. What algorithm (consensus model) can provide a trusted environment so that: the data exchange process of each node will not be tampered; The exchange history cannot be tampered with; The data of each node will be synchronized to the latest data, and the consensus latest data will be recognized; Based on the principle that the minority obeys the majority, the data maintained by the overall node itself objectively reflects the exchange history. In essence, blockchain is a technical solution to solve the second situation above. More specifically, it should be called Distributed Redundant chained general ledger solution. Some elements of the blockchain have been summarized in my previous articles: it contains a distributed database, which is the physical carrier of the blockchain, and the blockchain is the logical carrier of transactions. All core nodes should contain full copies of the blockchain data, and the blockchain serializes blocks according to time, Moreover, the blockchain is the only main body of the transaction data of the whole network. The blockchain is only valid for addition and invalid for other operations. The public-private key verification bookkeeping node based on asymmetric encryption requires that the Byzantine general problem can be solved / avoided, and the consensus progress is evolutionarily stable, that is, the contradictory data of a certain number of different nodes will not collapse. The consensus process can solve the double spending problem. Therefore, as a technician, he should not only see the technologies that the blockchain depends on, but also pay attention to the points and aspects outside the blockchain. In general, the blockchain will be much more interesting# 2. The general architecture of blockchain introduces the development history of blockchain itself. There are many data on the network, so this paper will not repeat it. The introduction of blockchain technology has detailed information in the communities of various blockchain platforms, but the summary of these materials and the introduction of abstracting a common concept are still rare. This paper tries to summarize it. Before introducing, I would like to introduce the concepts of public chain and alliance chain. These concepts were put forward by vitalik, founder of Ethereum. I have done some research on the basis of these concepts. In fact, it is easy to distinguish between public chain and alliance chain. Just look at the access permissions of the blockchain. If you need to obtain the permission of the nodes on the chain to access the blockchain, it is an alliance chain, otherwise it is a public chain. According to the name, we can also \\\"literally\\\". Public means a fully open network, and alliance means a semi open network. Members are shared, and non member identities do not have free access. Therefore, we also call alliance chain license chain. Let's look at several mainstream blockchain platforms (public chains, all open source) Bitcoin: bitcoin Ethereum / classic Ethereum: bitshares. I generally call them \\\"big three\\\" \\\"From the ecological point of view, bitcoin is the most mature and stable. Ethereum is more like a warrior in front. Bitstocks are much smaller than the first two, but from the perspective of innovation, they are no less than the first two. Many other projects are derived from these three blockchains, so based on these three, we can basically understand the blockchain. No Not to mention the Linux foundation project - hyperledger project (focusing on alliance chain, open source), which is also aimed at building a general blockchain technology. However, I think it is still under development iteration, and there is no specific application case, so I won't talk about it. In addition, there are some interesting alliance chain projects - R3 CEV project (Alliance chain, closed source) , and China ledger (Alliance chain, closed source) Of course, these are not open source, so I can't obtain useful data for analysis, so I won't start it. Technically, there are different requirements for blockchain for different business scenarios, such as real-time settlement business, which requires blockchain to provide second delivery, which corresponds to the requirements of blocking speed, and too fast blocking speed often leads to blockchain forking , an orphan chain is formed. If the orphan chain is invalid, the transaction will be invalid, affecting the final consistency of the blockchain. If frequent forks cause a considerable proportion of user transactions to fail, the system can be considered unreliable. If we insert this business with high real-time requirements into the alliance chain, we can control the risk and adjust the consensus algorithm , the use of the fast consensus model to avoid the above problems is not as robust as the public chain, but it is sufficient for some special scenarios. Therefore, at the architecture level, the technologies of the public chain and the alliance chain should also be treated differently. However, the overall design of the client still has some common concepts, as shown in the following figure: (1) A blockchain is divided into at least three layers. The bottom layer is some general basic modules, such as basic encryption algorithm, network communication library, stream processing, thread encapsulation, message encapsulation and decoding, system time, etc.; the middle layer is the core module of the blockchain, which generally includes the main logic of the blockchain, such as P2P network protocol, consensus module, transaction processing module and transaction pool module , simple contract or smart contract module, embedded database processing module, wallet module, etc.; the top layer is often an interaction module based on JSON standard RPC. Based on JSON RPC, we can also make a better UI interface or a web service. If the blockchain supports smart contract, it may be divided into more layers, such as adding baas layer and area Smart contracts on the blockchain provide autonomous services, such as the following Ethereum architecture diagram (from Google, for reference only): (Figure 2) this layering pays more attention to the layering of the blockchain itself, that is, the business perspective, rather than entirely technical. Let's turn to the design of bitcoin: (figure 3) In fact, the coupling between several modules of bitcoin is relatively high, and there are many historical burdens. When developing bitcoin, Nakamoto, the inventor of bitcoin, used VC + +, and the ssstream stream processing performance in the standard library of VC + + is very touching, so he had to give up and implemented a stream processing container based on vector < char >. With the introduction of C + + 11 and the standard library The performance of the update iteration of bitcoin is different. From the whole figure, we can see that bitcoin has fewer and simpler modules. Chain paramters describes the parameter settings of the whole blockchain. Wallet is related to address / encryption and storage, and MEM pool is an unconfirmed transaction pool. Thanks to the immortal contribution of the core developers of bitcoin, it is compared with bitcoin in the Nakamoto era Bitcoin code, the quality of bitcoin code now is quite good. No matter which design above, it generally needs to start with P2P network protocol. As a P2P wallet, it needs to provide both service and client. As a service, it depends on P2P network protocol, and as a client, it depends on Jason RPC. It should be pointed out that the account models used by the \\\"big three\\\" are different (the so-called account model refers to the account bookkeeping method), bitcoin uses uxto model, Ethereum and bitstock use account balance model. Uxto model (unspent transaction outputs (utxos)) : this model expresses a concept of transfer, that is, any new currency generated will only transfer and not die in the future life cycle. The transfer is essentially controlled by the signature and verification of the encryption algorithm: (Fig. 4) Account balance model: the account balance model abandons this strongly validated account model, that is, the account balance returns to digital addition and subtraction, which improves the efficiency of transaction. #3. Consensus algorithm and distribution finally come to the focus. In fact, each section of this paper can be expanded into an independent article with limited content. In brief, the so-called blockchain consensus process is mentioned above It refers to the process of how to objectively record and tamper with the transaction data of the whole network. At present, the \\\"big three\\\" use different consensus algorithms, bitcoin use workload proof pow (proof of work), Ethereum will soon be converted to proof of stake POS (proof of stake), and bitstocks use authorized proof of stake dpos (delegated proof of stake) I call these algorithms \\\"economics\\\" The so-called economic algorithm means that the cost of cheating can be calculated, and the cost of cheating is often much greater than the benefit brought by cheating, that is, cheating is unprofitable. Through this idea, we construct an algorithm for game between nodes and make it tend to a stable balance. Correspondingly, we also have distributed consistency algorithms in the computer field, such as Paxos, raft, I also call them traditional distributed consistency algorithms. The biggest difference between them is the reliability of the system in the Byzantine general problem scenario, that is, Byzantine fault tolerance (pbft algorithm supports Byzantine fault tolerance). However, both Paxos and raft algorithms may theoretically enter a dead cycle that cannot be voted on (although the probability is actually very, very low) However, they all meet the requirements of safety, but only relax the requirements of liveness, and so does pbft. Here are some similarities and differences between traditional distributed consistency algorithms and blockchain consensus process: similarities: append only emphasizes the problem of serialization minority obeying the majority principle and separation coverage: that is, long chain covers short chain blocks, multi node covers a few node logs. Differences: traditional distribution Most of the distributed consistency algorithms do not consider Byzantine fault tolerance (except Byzantine Paxos), that is, assume that all nodes only have non-human problems such as downtime and network failure, and do not consider the problem of malicious nodes tampering with data; the traditional distributed consistency algorithm is log oriented (data base) The blockchain consensus model is transaction oriented, so strictly speaking, the traditional distributed consistency algorithm should be at the lower level of the blockchain consensus model. Considering the above differences and combining the characteristics of public chain and alliance chain, we have: Alliance chain: a semi closed ecological trading network with peer-to-peer untrusted nodes, such as real estate industry a , B, C and D companies. Public chain: an open ecological trading network, which mainly provides a global trading network for industry chains and private chains. Due to the semi closed and semi open characteristics of alliance industry chains, it is feasible to use the delegated proof of XXX. It is also possible to consider adding Byzantine fault tolerance / security protection mechanism based on the traditional consistency algorithm For public chains, POW / POS / dpos and other \\\"economic\\\" algorithms may be the best algorithms. Technically, many of our newly developed blockchains support a feature: the consensus module is pluggable to meet the requirements of different scenarios. The following figure is a schematic diagram of the future blockchain Ecology: (Figure 5) The public chain provides a trusted and reliable value transmission network, which can continue to build decentralized applications (DAPP) or deploy alliance chains\",\"timestamp\":1638276964,\"title\":\"Blockchain and blockchain technology summary\"},\"digest\":\"hKvBechEq2jtEqqbKywKk0pWaVg03aV5d8lugBYa7Sg\",\"authorship\":{\"contributor\":\"0x174459460A65Dac1242793534dAf9502B0168ab0\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"4LuZtMTkWd0c9rIhCBg-bfg8iGDJ-AmNstQQc2J4scg\\\",\\\"y\\\":\\\"smRTF6jB4xbuwIE2hgO2h1qFrXZ8v2kgXl_dnN1Ukos\\\"}\",\"signature\":\"fRXCIQVm3NSyi7uNeBNUoQ6PoZE5zQ4rLsOXkkDQctDCRyDnuui23_NGmq47yUmZPk88_tMwAF9i-6HVnuYSQg\",\"signingKeySignature\":\"0xe72fecc6830ddd36943fd8228f061ffb6a35b9b5d89271297095c2bb3d572f696d01b14141a51832fa167ae95dc04835acc313e86f82cbd761f4b813f5e0913e1c\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"4LuZtMTkWd0c9rIhCBg-bfg8iGDJ-AmNstQQc2J4scg\\\",\\\"y\\\":\\\"smRTF6jB4xbuwIE2hgO2h1qFrXZ8v2kgXl_dnN1Ukos\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"hKvBechEq2jtEqqbKywKk0pWaVg03aV5d8lugBYa7Sg\"}"