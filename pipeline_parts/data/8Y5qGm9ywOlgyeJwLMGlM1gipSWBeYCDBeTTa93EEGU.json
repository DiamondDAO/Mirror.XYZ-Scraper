"{\"content\":{\"body\":\"比特币的公钥是根据私钥计算出来的。\\n\\n私钥本质上是一个256位整数，记作`k`。根据比特币采用的ECDSA算法，可以推导出两个256位整数，记作`(x, y)`，这两个256位整数即为非压缩格式的公钥。\\n\\n由于ECC曲线的特点，根据非压缩格式的公钥`(x, y)`的`x`实际上也可推算出`y`，但需要知道`y`的奇偶性，因此，可以根据`(x, y)`推算出`x'`，作为压缩格式的公钥。\\n\\n压缩格式的公钥实际上只保存`x`这一个256位整数，但需要根据`y`的奇偶性在`x`前面添加`02`或`03`前缀，`y`为偶数时添加`02`，否则添加`03`，这样，得到一个1+32=33字节的压缩格式的公钥数据，记作`x'`。\\n\\n注意压缩格式的公钥和非压缩格式的公钥是可以互相转换的，但均不可反向推导出私钥。\\n\\n非压缩格式的公钥目前已很少使用，原因是非压缩格式的公钥签名脚本数据会更长。\\n\\n我们来看看如何根据私钥推算出公钥：\\n\\n```\\nconst bitcoin = require('bitcoinjs-lib');\\n```\\n\\nRun\\n\\n构造出`ECPair`对象后，即可通过`getPublicKeyBuffer()`以`Buffer`对象返回公钥数据。\\n\\n### 地址\\n\\n要特别注意，比特币的地址并不是公钥，而是公钥的哈希，即从公钥能推导出地址，但从地址不能反推公钥，因为哈希函数是单向函数。\\n\\n以压缩格式的公钥为例，从公钥计算地址的方法是，首先对1+32=33字节的公钥数据进行Hash160（即先计算SHA256，再计算RipeMD160），得到20字节的哈希。然后，添加`0x00`前缀，得到1+20=21字节数据，再计算4字节校验码，拼在一起，总计得到1+20+4=25字节数据：\\n\\n```\\n0x00      hash160         check\\n┌─┬──────────────────────┬─────┐\\n│1│          20          │  4  │\\n└─┴──────────────────────┴─────┘\\n```\\n\\n对上述25字节数据进行Base58编码，得到总是以`1`开头的字符串，该字符串即为比特币地址，整个过程如下：\\n\\n使用JavaScript实现公钥到地址的编码如下：\\n\\n```\\nconst bitcoin = require('bitcoinjs-lib');\\n```\\n\\nRun\\n\\n计算地址的时候，不必知道私钥，可以直接从公钥计算地址，即通过`ECPair.fromPublicKeyBuffer`构造一个不带私钥的`ECPair`即可计算出地址。\\n\\n要注意，对非压缩格式的公钥和压缩格式的公钥进行哈希编码得到的地址，都是以`1`开头的，因此，从地址本身并无法区分出使用的是压缩格式还是非压缩格式的公钥。\\n\\n以`1`开头的字符串地址即为比特币收款地址，可以安全地公开给任何人。\\n\\n仅提供地址并不能让其他人得知公钥。通常来说，公开公钥并没有安全风险。实际上，如果某个地址上有对应的资金，要花费该资金，就需要提供公钥。如果某个地址的资金被花费过至少一次，该地址的公钥实际上就公开了。\\n\\n私钥、公钥以及地址的推导关系如下：\\n\\n```\\n┌───────────┐      ┌───────────┐\\n│Private Key│─────▶│Public Key │\\n└───────────┘      └───────────┘\\n      ▲                  │\\n      │                  │\\n      ▼                  ▼\\n┌───────────┐      ┌───────────┐\\n│    WIF    │      │  Address  │\\n└───────────┘      └───────────┘\\n```\\n\\n### 小结\\n\\n比特币的公钥是根据私钥由ECDSA算法推算出来的，公钥有压缩和非压缩两种表示方法，可互相转换。\\n\\n比特币的地址是公钥哈希的编码，并不是公钥本身，通过公钥可推导出地址。\\n\\n通过地址不可推导出公钥，通过公钥不可推导出私钥。\",\"timestamp\":1639559667,\"title\":\"公钥和地址\"},\"digest\":\"vBYn1v9Um1mog-ZhVniniHgeod6liRAO8LCRETlkuA0\",\"authorship\":{\"contributor\":\"0xa2Fbc740b7927Fe7647422606173A10e62441dFB\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"dD9hvO-o2F8dMK9rl2ysUC6bVqKAazzZvbOq7Qrfhgg\\\",\\\"y\\\":\\\"DL1zA5XjPaNbY8SeVqb8ld6txyE9vco3shZlGd56aZo\\\"}\",\"signature\":\"ymbFuZ69s-mfhtvJc69CiSniv6fTcJ7EbDHjb2tabiAkVHw7i8i362rrbWhiG20A70-I0VriqwLXU38q-x8Q6Q\",\"signingKeySignature\":\"0x86b07a02cba900135e9861ac4923552afb3e4010e19c0b9f0b9372dcf5627c3f0625e11580694bdbc7472b9fb0a3733aa24c41ce1ce55fe28ed922a356154add1b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"dD9hvO-o2F8dMK9rl2ysUC6bVqKAazzZvbOq7Qrfhgg\\\",\\\"y\\\":\\\"DL1zA5XjPaNbY8SeVqb8ld6txyE9vco3shZlGd56aZo\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"vBYn1v9Um1mog-ZhVniniHgeod6liRAO8LCRETlkuA0\"}"