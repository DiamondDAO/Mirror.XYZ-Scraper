"{\"content\":{\"body\":\"### If you don‚Äôt know what to search, you will end up in the wrong place:\\n\\nLots of results turn up when you google \\\"how to create a cryptocurrency‚Äù, but very few detail what the specific mechanics are in implementation. Existing articles do a relatively good job outlining a basic ideological framework, but I want to take it one step further than vague jargon such as [‚Äúmake your cryptocurrency legal‚Äù, and ‚Äúpromote your project‚Äù](https://www.datadriveninvestor.com/how-to-create-your-own-cryptocurrency/) (it is worth noting, this is the **#1 indexed result in google**).  Both of these steps are essential, but  it would require a textbook worth of information on each to produce any type of actionable insight. Most importantly, both are wholly irrelevant if you are not able to launch a coin (in this case a token) in the first place. This article details what exactly the process of creating a Token yourself looks like.\\n\\n### A dead horse:\\n\\nBefore getting into the nitty gritty specifics, we have to get through my least favorite part of any blockchain related article. **The dreaded ‚Äúblockchain overview‚Äù section** - these are often inaccessible to someone completely unfamiliar with cryptography, and more or less all say the same thing. For this reason, I‚Äôm keeping this intentionally brief. My best attempt at describing blockchain to someone completely unfamiliar is:\\n\\n> *A blockchain is a long, continuously growing digital receipt, where every ‚Äútransaction‚Äù on the network is both publicly visible and peer validated (without the use of a central intermediary).*\\n\\n![Potentially a better summary than my attempt above.](https://images.mirror-media.xyz/publication-images/Z_9ZLsmNXsx7Olmsz1cM0.png?height=746&width=1024)\\n\\nA technology initially thought to be exclusively a currency for drug dealers it is currently proving out a very broad range of use cases. Blockchain today lies at the **intersection of cryptography, finance, currency, technology, art, social interaction, and communication.** **(link here for each different project)** While existing projects are still in early adopter stages, it is my personal belief that we are at the precipice of a platform shift akin to the advent of the internet, or the change from desktop to mobile.\\n\\n### Dead horse pt. II (Key terms)\\n\\n* **Coin vs. Token:** A ‚Äúcoin‚Äù refers to what you likely associate the term ‚Äúcryptocurrency‚Äù with. Examples include Bitcoin, Ethereum, and Solana. Specifically a ‚Äúcoin‚Äù is launched on **its own underlying blockchain**. Anything that is built on an existing blockchain falls under the umbrella of a token. Examples include Chainlink, DAI, or Dogecoin.\\n* **Node:** Each individual in the peer-to-peer network of computers that comprise the computing power of the entire blockchain.\\n* **Consensus algorithm:** The type of cryptographic algorithm employed which serves to validate every single transaction on the network.\\n* **Public / private keys:** all ‚Äúdigitally signed‚Äù information is ‚Äúsigned‚Äù by a user‚Äôs public key. A public key corresponds to a specific private key which is tied to a specific individual. This is how the network knows exactly who is who, and how participants remain pseudo anonymous. Any network observer can see the public keys involved in transactions, however they cannot identify the corresponding private key.\\n* **Public Ledger:** The chain of blocks where transaction details are recorded (once they are validated).\\n* **Transaction:** The atomic unit on a blockchain platform, each individual occurrence of the ‚Äúthing‚Äù that your platform does. These are subsequently written to the public ledger in the form of a block.\\n* **Block:** A group of transactions that (once validated by the selected consensus algorithm) are ‚Äúwritten‚Äù to the public ledger. Blocks can‚Äôt be ‚Äúundone‚Äù, and as transactions continue over time, each newly validated **block is chained** to the existing ones (Aha! now the name makes a bit more sense).\\n\\n## Before implementation:\\n\\nPrior to launching a tokenized project for a real use case, several steps should be taken. The first (and the most frequently overlooked) occurs before a whitepaper, before a business plan, and before any kind of ideation about your new business idea/venture:\\n\\n### Why is this done better on blockchain than existing technology?\\n\\nThis is one of the problems with the blockchain community in its current form. ***Everything*** cannot be done better on blockchain, but for many reasons (I posit this is a symptom of many investors pattern matching while lacking the underpinning technological understanding) if a startup is using blockchain it is automatically more attractive to investors. Thinking about this question critically is the most important step in this process, as you will ultimately end up wasting your own time **even if you raise money from investors**.\\n\\n![The current state of the world.](https://images.mirror-media.xyz/publication-images/lR7adPMhUsEYEmLsb_Skc.png?height=518&width=600)\\n\\n### Clearly defined business idea\\n\\nOnce it is clear that an idea *should* have an applied blockchain solution, the next step is to articulate why and how. This should take the form of a whitepaper, if you intend to issue a token and sell it to anyone, you need to be able to **clearly and concisely** articulate what value your token is going to provide. While this is not a hard and fast requirement, if you launch a token with the explanation of ‚Äúhaha this is a funny joke token‚Äù you likely will not have much success. ([Many](https://twitter.com/ShibainuCoin?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor) [notable](https://en.wikipedia.org/wiki/Dogecoin) [exceptions](https://coinmarketcap.com/currencies/dogelon/) [exist](https://coinmarketcap.com/currencies/samoyedcoin/) -- The total market cap of these linked tokens  is $54.5 Billion USD as of 11/22/21 ü§Æ)\\n\\n## Mechanically, how do you create your own token?\\n\\nTo create your own ERC-20 token (A token on Ethereum‚Äôs blockchain network) We‚Äôll break down the required steps below:\\n\\n## Add Metamask wallet chrome extension:\\n\\nAfter downloading it [here](https://metamask.io/download).\\n\\n![This allows you interact with Web3 applications from within your browser.](https://images.mirror-media.xyz/publication-images/8-MVP_kU0CXQV0DEaYZzX.png?height=1688&width=2104)\\n\\n* In Metamask, set your network to a test ETH network\\n\\n![Change from the \\\"Main Ethereum Network\\\" to a Test Network.](https://images.mirror-media.xyz/publication-images/qIu8dGlzLrCtwKh3MaSMT.png?height=150&width=712)\\n\\n* Get TestNet Ethereum [here](https://www.rinkeby.io/#faucet.). This requires you to copy the public Key of your metamask account, make a post on social media (twitter or facebook), and post a link to the post (as shown below).\\n\\n![Depending how congested the network is, this process can take up to a couple hours for test ETH to be delivered to your wallet.](https://images.mirror-media.xyz/publication-images/MzMeu1WC7zKn14tJdZfEb.png?height=1154&width=2098)\\n\\n* While waiting for this ETH to be delivered, it‚Äôs the perfect time to create the required solidity files using [Remix](https://remix.ethereum.org/). Remix is a browser based compiler and IDE used to create Ethereum smart contracts, programmed in Solidity.\\n\\n![The Source code for my \\\"BlogToken\\\"](https://images.mirror-media.xyz/publication-images/2dCbtfJBayVBBotw4NKzF.png?height=2010&width=2770)\\n\\nFor Test net deployment you can use any ERC-20 token source code. [Here](https://github.com/jimbo-codes/BlogToken) is the link to the ‚ÄúBlogToken‚Äù source code I used, tweaked from the (no longer working) deprecated source code originally published by [Gilad Haimov](https://gist.github.com/giladHaimov).\\n\\n### The Last step:\\n\\nFinally, we are ready to deploy and run our newly created ERC-20 smart contract token. Make sure that the environment is ‚ÄúInjected Web3‚Äù if you want to deploy the contract to the live test network. Once you select deploy, metamask will confirm the transaction (a few dollars worth of the fake test net Ethereum) for the smart contract to execute, creating our new token.\\n\\n![](https://images.mirror-media.xyz/publication-images/s78thGTGOm9qjIfPCsygF.png?height=1788&width=734)\\n\\n![Lastly, deploy and run your new ERC-20 Token.](https://images.mirror-media.xyz/publication-images/I1L4NukfKz-ncMD6Iig6X.png?height=1794&width=738)\\n\\n## How is this different than a real ICO?\\n\\nThe only difference is that we deployed this contract on the Ethereum Test Network. If you wanted to issue and subsequently sell tokens, this initial deployment would need to occur on the Ethereum Mainnet.\\n\\nAlternatively if you wanted to create your own NFT through a similar process, [here is an article](https://medium.com/gochain/how-to-create-and-deploy-an-nft-smart-contract-in-10-minutes-e0d7ef8e59fc) that goes into detail on that topic.\\n\\n## Conclusion\\n\\nCompared to launching an ERC-20 token on the Ethereum Mainnet this article was grossly simplified. Once a smart contract has been deployed it is live, and immutable (cannot be changed). If you wanted to change major features of the launched token, you would need to deploy an entirely new ERC-20 token. For this reason, significant additional consideration must be given to:\\n\\n* Node Design\\n  * Public vs. Private, on-prem vs. Cloud hosting, required hardware, Default OS\\n* Determine Internal Architecture\\n  * Permissions (who can access what data, who can perform transactions, who can validate transactions)\\n  * Address formats (wallet identifiers)\\n  * Key Formats (the keys used to sign transactions)\\n  * Initial Asset Issuance (rules for creating tokens, total supply)\\n  * Key Management system to store public + private keys\\n  * Multi-signature functionality (how many keys a blockchain needs in order to validate a transaction)\\n  * Atomic Swaps (Smart contracts that enable the exchange of one cryptocurrency for your newly launched currency)\\n  * Parameters\\n    * Maximum block size, rewards for mining each block, what transaction limits are imposed, etc.\\n    * Handshaking (how nodes operating within the network will identify one another)\\n  * API Infrastructure (external or internal)\\n  * Design of Interface (both admin and user)\",\"timestamp\":1637622926,\"title\":\"Creating a CryptoToken\"},\"digest\":\"oqldnNMTS5drHFeJ0f5tCrl-fSK-25CO-4ec7VNOHcA\",\"authorship\":{\"contributor\":\"0xaea01704d80288FA97B0de0bc0758d5D2B0b81E1\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"eEuuY_McDKrGXs9xqGw0nSaAdtdvic6gIUGGsj4yXIk\\\",\\\"y\\\":\\\"D66uG20CHoIaFGeVn-J-VbXCB1gftZhDH2p0kh1loD0\\\"}\",\"signature\":\"9EmiN2sJR16VctUfTRi3M9rPzb-elOLhsZ7GmtgHtGYkTSQ6U1a2p3M609kXkwIv80GN4CP48NCg1vO0IvBe9Q\",\"signingKeySignature\":\"0xf3228c8628d5f294883d5e9729ae32323332e5364bca74b6baa3d3c7bd7214b83aa6ba24fa55a9520b3ca8a9bd35a6d4d6a114400ea90856f0401788e0d6247e1b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"eEuuY_McDKrGXs9xqGw0nSaAdtdvic6gIUGGsj4yXIk\\\",\\\"y\\\":\\\"D66uG20CHoIaFGeVn-J-VbXCB1gftZhDH2p0kh1loD0\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"qd2K9RtOcq8VtbupIH4jZc6R26AN-dNCO6g7wdMgRKk\"}"