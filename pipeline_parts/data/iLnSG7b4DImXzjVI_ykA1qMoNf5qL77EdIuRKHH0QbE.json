"{\"content\":{\"body\":\"之前代码太丑，今天要写的 Pythonic 些。 \\n 主程序一行搞定，往自然语言去靠：打开-读取-清洗-统计-排序输出。 \\n 具体工作调用封装函数。 \\n Tips： \\n （1）直接检索字符串时，不要用正则表达式； \\n （2）在 for 循环中，对 for 的对象直接做操作要谨慎，可能会影响循环结构； \\n （3）用 range(len(\\\\*)) 更易读。 \\n （4）删除非汉字，不如直接选取汉字。 \\n  \\n Update： \\n 更简化，可直接对 dict_0 用 value 排序：  \\n order_list = sorted(dict_0, key= lambda x: dict_0\\\\[x\\\\], reverse= True)  \\n 输出为： \\n  for x in order_list: \\n     print(x, “出现了”, dict_0\\\\[x\\\\], “次”) \\n \\n\\n```\\nimport re\\n\\ndef clean(self):\\n    # 删去\\\"第XXX节...(...\\\"所在行、\\\"----\\\"分隔线所在行\\n    self_1 = self.copy()\\n    for i in range(len(self_1)):\\n        if re.match(\\\"第[0-9]+.*\\\\\\\\(.*|----\\\", self_1[i]):\\n            self_1[i] = \\\"\\\\n\\\"    # 删去带网址的行，此处不用正则表达式\\n    for i in range(len(self_1)):\\n        if \\\"http\\\" in self_1[i]:\\n            self_1[i] = \\\"\\\\n\\\"\\n    return self_1\\n\\ndef analyz(lines):\\n    word = []\\n    for i in range(len(lines)):    # 制作单字符列表\\n        word = word + list(lines[i])\\n    word_han = []\\n    for i in range(len(word)):     # 制作纯汉字单字符列表\\n        if '\\\\u4e00' <= word[i] <= '\\\\u9fff':\\n            word_han.append(word[i])\\n    word_dict = {}\\n    for i in range(len(word_han)):  # 制作字频字典0：{字：字数}\\n        if word_han[i] not in word_dict:\\n            word_dict[word_han[i]] = 1\\n        else:\\n            word_dict[word_han[i]] += 1\\n    return word_dict\\n\\ndef order(dict_0, out):\\n    dict_1 = {}       # 制作字典1：{字数：字字字字字}\\n    for i in dict_0:\\n        if dict_0[i] not in dict_1:\\n            dict_1[dict_0[i]] = i\\n        else:\\n            dict_1[dict_0[i]] = dict_1[dict_0[i]] + i\\n    m = max(dict_1.keys())   # 倒序输出字典1\\n    i = m\\n    while i > 0:\\n        if i in dict_1:\\n            print(i, dict_1[i], file=out)\\n        i += -1\\n\\nwith open(\\\"./file.txt\\\") as file_in:    with open(\\\"./file_out.txt\\\", \\\"w\\\") as file_out:        order(analyz(clean(file_in.readlines())), file_out)\\n```\",\"timestamp\":1642643550,\"title\":\"Coding #0003 统计汉字字频（优雅风格）\"},\"digest\":\"F0mtsZYgQxsf2_5ShUUKZztl0l-Y8pJY5cQOU2ZUuAY\",\"authorship\":{\"contributor\":\"0x1ab5a7501f9BF9055A57B3894CC3D30f02f4a5b1\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"Oa_NAJeqYIPNNWNMNy73dhK2rsqMWJR1f43zync6svc\\\",\\\"y\\\":\\\"fDauPvryMzvVldExebl_bO5sAorGbFYTf3QDyhTZ8Ic\\\"}\",\"signature\":\"iLw01qHzdQgVb2AarHMKB-UF9sMqYAqzRUnO1oOX5idEbZngHLk-9qKWicbBmgRBveT6WVdPgro5FT3CHlXyJQ\",\"signingKeySignature\":\"0xcb63ffbaa569c9054ca79e806569d0438b4c170075b3b67a32ba4f1d86cfa394658c6d6b1112887e1edae3c1e4e33292b51dd00e030dfffa843901375aada78a1c\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"Oa_NAJeqYIPNNWNMNy73dhK2rsqMWJR1f43zync6svc\\\",\\\"y\\\":\\\"fDauPvryMzvVldExebl_bO5sAorGbFYTf3QDyhTZ8Ic\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"F0mtsZYgQxsf2_5ShUUKZztl0l-Y8pJY5cQOU2ZUuAY\"}"