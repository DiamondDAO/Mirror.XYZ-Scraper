"{\"content\":{\"body\":\"*Last Update: December 3, 2021*\\n\\nNow that we covered some of the basics in the [first article](https://mirror.xyz/guerakun.eth/pZT9BDTS7jo1p_e6WFRbDcZ5rv3uxwGYn2EWWCNYYxo), let’s explore some more interesting topics that we can add to our arsenal of mental models. We can start with where we are now in the computing phases history and then describe some technical innovations that will bring us to the current phase: *blockchain computing*.\\n\\n![It begins from a board of go or no-go ](https://images.pexels.com/photos/50711/board-electronics-computer-data-processing-50711.jpeg)\\n\\n## Computing Phases\\n\\nWe have gone so far since the mainframe computing days of yore, so to give context to our journey, let’s visit the big picture history of computing, focusing on *what* machine does the computation and *who* is using the computer.\\n\\n* **Mainframe Computing**, circa 1950, where the cost to compute is really expensive and it’s only used by institutions to do bulk data processing such as census, statistics, and large-scale [transaction processing](https://en.wikipedia.org/wiki/Transaction_processing) . **Companies**: IBM, HP, Hitachi.\\n* **Personal Computing**, circa 1975, where hobbyist and technicians starts to be able to do simple *switch programming* and afford these *microcomputers*. The cheap prices are made possible by major advances in [semiconductor](https://en.wikipedia.org/wiki/Semiconductor) technology. Each of these new computers don’t really talk to one another. **Companies**: Apple and MITS for hardware, Microsoft for software, with IBM and HP as incumbents.\\n* **Interpersonal Computing**, circa 1991, where [World Wide Web](https://en.wikipedia.org/wiki/World_Wide_Web) was just made available to the general public and the PCs are getting so much more powerful, capable of not only text, but graphics and sound. This is also where each of these computers can do a *transfer of Information* through the Web between them, marking the Web1 era where the information in websites are mainly *read-only* and *static*. **Companies**: Acer, Dell, Amazon with Apple, IBM, Microsoft as incumbents.\\n* **Internet and Cloud Computing**, circa 2005, where the computer is getting smaller and mobile, and Internet starts to become accessible to more people than ever. The heavy computation at this era is done in central powerful servers ([the Cloud](https://en.wikipedia.org/wiki/Cloud_computing)), with the users’ computers mainly serving as client asking for service. Companies that are able to hone in this model won big. This era is also called as the Web2 era where websites are able to provide service and content that is *dynamic* and *read-write*. **Companies**: Google, Facebook, Twitter and Apple, Microsoft, Amazon as incumbents.\\n\\nThis brings us to now. We can almost see the evolution pattern with our computing phases that the users are getting more connected, computing powers are getting stronger, and the Internet infrastructure are getting better. But at what cost? Are we really able to **own** anything digitally at this point? Or are we merely paying to these platforms a *rental fee* to be able to use their service?\\n\\n## Smart Contracts\\n\\nWith what we built so far with our [Crypto mental model](https://mirror.xyz/guerakun.eth/pZT9BDTS7jo1p_e6WFRbDcZ5rv3uxwGYn2EWWCNYYxo) (let’s imagine it as a big stack with all the properties), what solution can we propose? In summary, we currently have the following mental models in our *crypto stack*:\\n\\n* **Blockchain** is a ledger that is public and decentralized, used to denote transaction of its native assets, complete with information such volume and history.\\n* Blockchain combined with **consensus protocol** enables us to have a method of doing a direct (peer to peer) transaction safely to transfer value without the need of a third party.\\n* **Cryptocurrency** is the *reward* given to the validators for doing validations on proposed transactions using the consensus protocol. This is highly programmable and is different from one cryptocurrency to the next.\\n* **Cryptocurrency** is simply the native asset that is transacted on a blockchain that has the consensus protocol. So as an example, Bitcoin network has BTC, Ethereum has ETH, and Solana has SOL.\\n* **Trust** is built-in inside a cryptocurrency blockchain due to the consensus protocol.\\n* **Information** in the blockchain can also be used as **proof of** **ownership** of the native asset.\\n\\nWhat if we can introduce a new feature, where we ask the computers on the blockchain (in addition to validating the transactions) to do a simple computing task, such as “*once the date hits Friday the 13th, send Freddie Krueger some money*”. Because that’s how we started the **Personal Computing Phase** explained above to begin with (a switchboard that basically tells yes or no, or in computing terms 0 or 1).\\n\\nBitcoin’s transaction system are actually capable of this, but as people start thinking about this feature, they are seeing a lot of limitation on UTXO (Bitcoin’s transaction system). The main one is the **Lack of Turing-completeness** - that is to say, while there is a large subset of computation that the Bitcoin scripting language supports, it does not nearly support everything.\\n\\n`A programming language is called Turing-complete (from the famous mathematician/computer scientist Alan Turing) if it can be used to find an answer to any computational problem (although with no guarantees regarding runtime or memory). This means it can be used to build up literally any feature that is mathematically describable. We are hitting really close the technical realm here but we shouldn’t need to go deeper than this.`\\n\\n![Ethereum with Solidity as the first Turing-Complete Blockchain Computer](https://images.pexels.com/photos/8175569/pexels-photo-8175569.jpeg)\\n\\nSo, in 2013, Ethereum [whitepaper](https://ethereum.org/en/whitepaper/) was conceived and Ethereum was launched in 2015. The big idea is to have a cryptocurrency that is barebone, but will be able to support programmable features through its **Turing-complete** programming language called Solidity.\\n\\nSo the programs written in Solidity are called **smart contracts**, but inside it’s not really that *smart* nor that it’s always a *contract*. It’s just a term. Since then, many other cryptocurrencies follow the same idea and include this functionality to enable decentralized applications (dApps for short) where the *computation* is done by the blockchain nodes themselves.\\n\\n## Blockchain Computing\\n\\nSo with our crypto stack able to do computing as well, what does this bring? Well, knowing that our stack is now also supports a **Turing-complete** programming language, this means we can build *almost anything* as a *program*/*code*.\\n\\nThe first use-case right away is to program a financial system where people can store their money (*cryptocurrency* in this case), and gets rewarded when other people want to borrow it. This is one of the basic functions of a bank, but as a user we very rarely gets the reward. Another is to create a marketplace, where people can buy any cryptocurrency they want without the need of a centralized exchange. These applications are called **Decentralized Finance** ([DeFi](https://future.a16z.com/cryptos-fourth-wave-defi-poised-for-breakthrough/)) applications.\\n\\nWe can even go one step further. Paraphrasing the Nobel prize winner economist [Douglass North](https://en.wikipedia.org/wiki/Douglass_North),\\n\\n> “As humans we find ways to lower uncertainty about one another so that we can exchange value”.\\n\\nHe was one of the first to recognize that humans lower uncertainty by utilizing *institutions*.\\n\\nNorth defines *institutions* as \\\"*humanly devised constraints that structure political, economic and social interactions*\\\". Constraints can be devised as **formal** rules (constitutions, laws, property rights) and **informal** restraints (sanctions, taboos, customs, traditions, codes of conduct).\\n\\nWell now that we see institutions that way, it looks like the formal rules here, are able to be built as a *structured set of smart contracts* because it will stay the same and is enforceable (if only *natively*, which is *digital*). People say that in blockchain, the [code is law](https://journals.openedition.org/factsreports/4518). Bettina Warburg gave the below TED Talk in 2016, on *“How the blockchain will radically transform the economy”.*\\n\\n[https://www.youtube.com/watch?v=RplnSVTzvnU](https://www.youtube.com/watch?v=RplnSVTzvnU)\\n\\nThis is exactly what is happening in DeFi, where the functions of a centralized institutions like banks are instead replaced by a very elaborate set of rules that is written. The code is all *open-source* so people can *verify* if the code is doing what it’s supposed to be, instead of just trusting the institutions to act in our best interest.\\n\\nIn 2020, Chris Dixon from a16z defined Blockchain in their [Crypto Startup School](https://www.youtube.com/watch?v=2wxtiNgXBaU) as [follows](https://a16z.com/wp-content/uploads/2020/05/Chris_Dixon-What_Are_Blockchains_And_What_Are_They_Good_For-1.pdf):\\n\\n> **Blockchain:** A virtual computer that runs on top of a network of physical computers that provides strong, auditable, game-theoretic guarantees that the code it runs will continue to operate as designed.\\n\\nBecause we have all the building blocks needed to understand this definition, I think this is one the best *mental model* to understand blockchain: as a virtual computer that enables people to construct any *institutions* they see fit, to enable a *frictionless* exchange of *value*.\\n\\nInternet enables a frictionless exchange of information. If we add cryptocurrency to that stack, we get a frictionless exchange of value and this will bring a big change to how we do things. When a builder sees that they’re able to include money natively in their code, it will bring about a very new sense of liberation.\\n\\n[https://twitter.com/GueRakun/status/1463316387439558659?s=20](https://twitter.com/GueRakun/status/1463316387439558659?s=20)\\n\\n## New Attack Vectors\\n\\nNo good deed goes unpunished, or so they say. Readers would be wise to consider that *everything in this world is a [trade-off](https://www.youtube.com/watch?v=3_EtIWmja-4)*, and by including this Turing-complete programming language in our network we are also hereby increasing the number of ways our network can get compromised, inviting adversaries to try and exploit the new weakness.\\n\\nOne of the most obvious is spamming the network with contracts that loop infinitely. If this happens, our validators wouldn’t be able to process new blocks because all the computational power is used up for this bogus contract. This is why there is a need for a transaction fee that will scale up with how much computational power used by the contract that is started by the user. In Ethereum, this concept is called the [gas fee](https://ethereum.org/en/developers/docs/gas/). Other cryptocurrencies with their own Turing-complete programming language have their own implementation but the idea is the same.\\n\\n## Summary\\n\\nThese are the mental models we acquired in this article:\\n\\n* Cryptocurrency network combined with a Turing-Complete programming language enables builders to build not only applications but also **institutions as code**.\\n* **Blockchain** can now be seen as a **virtual computer** that enables people to construct any *institutions* they see fit, to enable a *frictionless* exchange of *value*.\\n* **Enforceability** of the code works natively in the digital realm because it’s a clause inside the program. If the programmed condition is not true, then the program won’t run. As Chris Dixon says, it’s changing from “*Don’t be evil*” into “*Can’t be evil*”.\\n* **Gas fees** are used as both incentive method for validators and miners, as well as a  deterrent to the bad actors looking to compromise the network. In short, gas fees help keep the network secure.\\n\\n## Where do we go from here?\\n\\nOnce we are equipped with the mental model that the Blockchain is a virtual computer and we may be in a new era of computing, the Blockchain Computing, then we can start to dive further on the ways it may change the world as we know it. Some people, including the World Wide Web inventor [Tim Berners-Lee](https://en.wikipedia.org/wiki/Tim_Berners-Lee), has coined the term [Web3](https://en.wikipedia.org/wiki/Semantic_Web) long before there even exists a cryptocurrency.\\n\\nHowever in trying to understand **Web3**, we must first build a mental model of its most primitive token, the **Non-Fungible Token** (NFT). This is due to the ownership that we have in our mental model so far is only working for the native asset. If we want the code to enable us to transact with other things, we need a way to *natively* express this ownership in the same system.\\n\\nIn the next article, we’ll try to understand both using the mental models we have acquired so far. This makes explaining and understanding how they work much easier. Hope to see you there!\",\"timestamp\":1638510901,\"title\":\"Understanding Crypto from Zero - Blockchain Computing\"},\"digest\":\"qIrqsUEOxeR192PPmGugyG16V7RvY4mUEV2JV7EUf2g\",\"authorship\":{\"contributor\":\"0x8814f604604e735F80F547473991Ced756D29697\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"NU0Ya51SwNItVCrYvkY92IFQnrXkpZ66MxFguMHxTO0\\\",\\\"y\\\":\\\"z1ZXCgWiqatxQdlxryWm0Yw0rKU56F-g54c7bV7KmQ0\\\"}\",\"signature\":\"_bSBA85W-b6pvG1eNw2LlHG-vKRrjBNCti7f48V2jZChZnjNTyH1EnBIRHhG2WVqx-Kw-3zW_M3edP9xSMPqVw\",\"signingKeySignature\":\"0x107a36b15c021135dc03af621a8131a25b21a77e4f6d798e339a9578942c887d021b5d0915e7f657920d60b4315764c40b32d9d603b8457e58db6285966b47161b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"NU0Ya51SwNItVCrYvkY92IFQnrXkpZ66MxFguMHxTO0\\\",\\\"y\\\":\\\"z1ZXCgWiqatxQdlxryWm0Yw0rKU56F-g54c7bV7KmQ0\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"W60l8R_SOmvMcYFhldOLoMcK-Acdc5LZ-ZkEk2xzKis\"}"