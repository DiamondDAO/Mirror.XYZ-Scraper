"{\"content\":{\"body\":\"> Algorand 是一条速度快，不兼容 EVM，没啥生态的光秃秃链\\n\\n这几个月 Algorand 频繁的出现在我的消息列表了，这一期我们就为大家介绍一下 Algorand。\\n\\nAlgorand 是由一名 MIT 教授在 2017 年所创建的。这位教授认为 Algorand 可以解决以太坊创始人 Vitalik 所提出的稳定性悖论，即扩展性，安全性，去中心化只能三者取其二。\\n\\n## **共识**\\n\\nAlgorand 采用 Pure Proof-of-Stake。网络参与者对产生下一个区块的影响力正比于他们所拥有的代币数量。他们拥有的代币数量越多，他们对下一个区块的影响力越大。所用拥有代币的用户都可以影响下一个区块的产出，并且代币并不需要质押进行锁定。\\n\\nAlgorand 的每秒处理速度大于1000笔交易，8400万交易/天，4秒一个区块，每笔交易手续费 $0.001。\\n\\n作为比较，以太坊的TPS（Transactions Per Second）为 13，15 秒出一个区块。交易手续费高的离谱。\\n\\nBSC 的 TPS 为55 - 60，5 秒一个区块。\\n\\n宇宙最快区块链 Solana 的 TPS 为 6 万 5 千。800 毫秒一个区块。\\n\\nPOS 中常见的一种是 Delegate Proof of Stake（DPOS）。EOS 使用的便是 DPOS。在 EOS 网络中，并不是所有拥有代币的用户都可以影响区块的产出，而是只有 21 个用户可以决定区块的产出。这 21 个用户由所有用户投票产生。通过牺牲一定的去中心化程度，EOS 获得了更快的区块处理速度。\\n\\n另一种常见的是 Bonded Proof-of-Stake（BPOS）。用户通过质押代币来获得对下一个区块的影响力。质押的代币将被锁住一段时间。在这段时间里，用户无法使用这些代币。\\n\\n## **生态**\\n\\nAlgorand 将自己定位为驱动传统金融和去中心化金融加速融合。根据 *[DeFi Lama](https://link.zhihu.com/?target=https%3A//defillama.com/chains)* 的数据，Algorand 的总锁仓量排第 32 位，锁仓金额为八千万美金。目前它的 DeFi 生态只有 *[Yiedly](https://link.zhihu.com/?target=https%3A//yieldly.finance/)*。在 Yieldly 的官网，它们介绍到 ”The world's first and only DeFi suite on Algorand“。Yieldly 包含存款，跨链交易，赌博。\\n\\n![](https://pic1.zhimg.com/v2-b052e8f0033e1c673ad2b8bd0d2e3634\\\\_b.jpg)\\n\\n## **⚙️ 开发**\\n\\nAlogrand 支持智能合约，提供 Python，JS，JAVA，GO 的 SDK。Algorand 使用 *[Algorand virtual machine (AVM)](https://link.zhihu.com/?target=https%3A//developer.algorand.org/docs/get-details/dapps/avm/)*。\\n\\nAlgorand 支持原生资产，即创建的资产和 Algo 享有同样的功能。从 Asset 的参数上，我们就能体会 Algorand 的定位了。Asset 拥有以下参数：\\n\\n*   *[Creator](https://link.zhihu.com/?target=https%3A//developer.algorand.org/docs/get-details/transactions/transactions%23creator)* (required)\\n*   *[AssetName](https://link.zhihu.com/?target=https%3A//developer.algorand.org/docs/get-details/transactions/transactions%23assetname)* (optional, but recommended)\\n*   *[UnitName](https://link.zhihu.com/?target=https%3A//developer.algorand.org/docs/get-details/transactions/transactions%23unitname)* (optional, but recommended)\\n*   *[Total](https://link.zhihu.com/?target=https%3A//developer.algorand.org/docs/get-details/transactions/transactions%23total)* (required)\\n*   *[Decimals](https://link.zhihu.com/?target=https%3A//developer.algorand.org/docs/get-details/transactions/transactions%23decimals)* (required)\\n*   *[DefaultFrozen](https://link.zhihu.com/?target=https%3A//developer.algorand.org/docs/get-details/transactions/transactions%23defaultfrozen)* (required)\\n*   *[URL](https://link.zhihu.com/?target=https%3A//developer.algorand.org/docs/get-details/transactions/transactions%23url)* (optional)\\n*   *[MetaDataHash](https://link.zhihu.com/?target=https%3A//developer.algorand.org/docs/get-details/transactions/transactions%23metadatahash)* (optional)\\n*   *[Manager Address](https://link.zhihu.com/?target=https%3A//developer.algorand.org/docs/get-details/transactions/transactions%23manageraddr)*\\n*   *[Reserve Address](https://link.zhihu.com/?target=https%3A//developer.algorand.org/docs/get-details/transactions/transactions%23reserveaddr)*\\n*   *[Freeze Address](https://link.zhihu.com/?target=https%3A//developer.algorand.org/docs/get-details/transactions/transactions%23freezeaddr)*\\n*   *[Clawback Address](https://link.zhihu.com/?target=https%3A//developer.algorand.org/docs/get-details/transactions/transactions%23clawbackaddr)*\\n\\n最后几个参数赋予对应地址管理 Asset 的能力。如果这些同样的资产出现在以太坊上，则可能会有中心化的问题。\\n\\nAlgorand 的合约分为 *[Stateful Contract](https://link.zhihu.com/?target=https%3A//developer.algorand.org/docs/get-details/dapps/smart-contracts/%23smart-contracts)* 和 *[Stateless Contract](https://link.zhihu.com/?target=https%3A//developer.algorand.org/docs/get-details/dapps/smart-contracts/%23smart-signatures)*。 Stateful Contract 就跟我们印象中的智能合约一样，拥有状态变量，处理 DApp 的主要逻辑。Stateless Contract 又叫 Smart Signature，用来为交易自动签名。Stateless Contract 可以用来管理账户资产，并且并不支持远程调用。\\n\\n## **相关阅读**\\n\\n*   *[Algorand’s pure Proof-of-Stake approach](https://link.zhihu.com/?target=https%3A//www.algorand.com/technology/pure-proof-of-stake)*\\n*   *[Smart Contract](https://link.zhihu.com/?target=https%3A//developer.algorand.org/docs/get-details/dapps/smart-contracts/)*\\n\",\"timestamp\":1633782431,\"title\":\"Algorand\"},\"digest\":\"LEtg5zte3CRMFoC9VBOu1xoSuG7aC8cA1mB674PADe0\",\"authorship\":{\"contributor\":\"0x7B076d7BcdE88Ec322B2D01AA1ADc1997b7724f6\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"-uhmdAZYxFgq_x4xq-zXdui7hRToWKgI3gCLaeRwzfE\\\",\\\"y\\\":\\\"e_jae50XeRHkDjBd1dCU7xTq7o4HjO4Idn3X9qLgXmA\\\"}\",\"signature\":\"o7okcyI9IpUn3e6NSaQ_IZ3AtMwF4pNfE0LiIMtfQywfDnWvP9TWYNORpsbd8BNNyPDB12J5cWfNH2xoyEhnlQ\",\"signingKeySignature\":\"0x0475273f3894cbe534b5ebf3dc9005f7b109c905b95b05fd0afb3d0dd6c056984938a186d9c56832d588e27230d06074bb752d52c6fbbffe3ddc0a71e38362d11c\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"-uhmdAZYxFgq_x4xq-zXdui7hRToWKgI3gCLaeRwzfE\\\",\\\"y\\\":\\\"e_jae50XeRHkDjBd1dCU7xTq7o4HjO4Idn3X9qLgXmA\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"LEtg5zte3CRMFoC9VBOu1xoSuG7aC8cA1mB674PADe0\"}"