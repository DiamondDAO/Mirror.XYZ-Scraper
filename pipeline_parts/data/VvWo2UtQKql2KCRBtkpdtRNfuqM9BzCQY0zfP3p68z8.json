"{\"content\":{\"body\":\"## [](#introduction)Introduction\\n\\nLet's build a grocery list application using Vue 3 with Typescript and the Vue store Pinia! I just found out that [Edward](https://twitter.com/posva) have tweeted about publishing the documentation for Pinia so I thought I'd share how we can create a simple application using this store.\\n\\nI will only be covering the very basic implementation of the Pinia store.\\n\\n## [](#prerequisites)Pre-Requisites\\n\\nThis article assumes the basic knowledge and understanding or familiarity with:\\n\\n*   Vue 3 (Composition API)\\n*   TypeScript\\n*   Prior understanding of what State Management is\\n\\nI will be using TypeScript for this application so I hope you understand at least the basic type annotations. Otherwise let's get right at it and start building this app!\\n\\n## [](#installation)Installation\\n\\nIf you don't have the Vue CLI installed yet then make sure to install it, or if your Vue CLI isn't updated yet then make sure it is on the latest version.\\\\\\n\\n\\n    $ npm i -g @vue/cli\\n\\n\\n\\nIf you are on a Linux distro then add `sudo` at the beginning of the command since we are installing Vue CLI globally.\\n\\nAnd once that is done let's ask Vue CLI to scaffold a Vue 3 project for us. Make sure you have selected Vue 3.\\\\\\n\\n\\n    $ vue create vue-3-pinia-grocery-app\\n\\n\\n\\nAnd once that is done navigate into the app and open the project in your IDE.\\\\\\n\\n\\n    $ cd vue-3-pinia-grocery-app && code .\\n\\n\\n\\nThen let us add our sugar, TypeScript.\\\\\\n\\n\\n    $ vue add typescript\\n\\n\\n\\nFor now these are my selected options, you can choose on your own if you prefer.\\n\\n[![image](https://res.cloudinary.com/practicaldev/image/fetch/s--N\\\\_3yevrn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw\\\\_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d130vmi6u96bn1l0xy4z.png)](https://res.cloudinary.com/practicaldev/image/fetch/s--N\\\\_3yevrn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw\\\\_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d130vmi6u96bn1l0xy4z.png)\\n\\nNext is to install Pinia as the dependency for this project.\\\\\\n\\n\\n    $ npm install pinia@next\\n\\n\\n\\nAnd lastly install faker since I am kind of lazy to create forms for this tutorial and creating a form and validating it is sort of an out of scope. So to make things quick, let's just generate some random data from this faker package.\\\\\\n\\n\\n    $ npm install faker\\n    $ npm install --save @types/faker\\n\\n    $ npm install uuid\\n    $ npm install --save-dev @types/uuid\\n\\n\\n\\nSince I plan to use some fake data for quick data generation. Update your model code as I will have a method called `generateFakeData()` to generate an Item.\\\\\\n\\n\\n    import { v4 as uuidv4 } from \\\"uuid\\\";\\n    import * as faker from \\\"faker\\\";\\n\\n    export interface Item {\\n      id: string;\\n      name: string;\\n      description?: string;\\n      quantity: number;\\n      createdAt: Date;\\n      deletedAt?: Date;\\n    }\\n\\n    export function generateFakeData(): Item {\\n      return {\\n        id: uuidv4(),\\n        quantity: Math.random(),\\n        name: faker.lorem.word(),\\n        description: faker.lorem.words(),\\n        createdAt: new Date(),\\n      };\\n    }\\n\\n\\n\\nAnd once that is done let us run our Vue application.\\\\\\n\\n\\n    $ npm run serve\\n\\n\\n\\n## [](#data-model)Data Model\\n\\nSince we are building a Grocery List application then we should model our data. The core model to have is an Item.\\n\\nSo to define the model,\\\\\\n\\n\\n    export interface Item {\\n      id: string;\\n      name: string;\\n      description?: string;\\n      quantity: number;\\n      createdAt: Date;\\n      deletedAt?: Date;\\n    }\\n\\n\\n\\nSo under the `src` directory create a `models` directory and it's where this Item model will reside. So create a file name it as `item.model.ts`.\\n\\nThen we'll have the following,\\n\\n[![image](https://res.cloudinary.com/practicaldev/image/fetch/s--Xt3IgqtK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw\\\\_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mykn0xuhq8nbqohahdnu.png)](https://res.cloudinary.com/practicaldev/image/fetch/s--Xt3IgqtK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw\\\\_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mykn0xuhq8nbqohahdnu.png)\\n\\n## [](#pinia-setup)Pinia Setup\\n\\nOpen the `main.ts` file under the `src` directory and make sure to chain the following method `use()` and pass in `createPinia()` as the first parameter.\\\\\\n\\n\\n    import { createPinia } from \\\"pinia\\\";\\n    import { createApp } from \\\"vue\\\";\\n    import App from \\\"./App.vue\\\";\\n\\n    createApp(App)\\n      .use(createPinia())\\n      .mount(\\\"#app\\\");\\n\\n\\n\\nNext is to create a directory and name it as `store` and inside it create a file called `index.ts`\\n\\nThen to define this main store,\\\\\\n\\n\\n    import { generateFakeData, Item } from \\\"@/models/item.model\\\";\\n    import { defineStore } from \\\"pinia\\\";\\n\\n    export type RootState = {\\n      items: Item[];\\n    };\\n\\n    export const useMainStore = defineStore({\\n      id: \\\"mainStore\\\",\\n      state: () =>\\n        ({\\n          items: [],\\n        } as RootState),\\n\\n      actions: {\\n        createNewItem(item: Item) {\\n          if (!item) return;\\n\\n          this.items.push(item);\\n        },\\n\\n        updateItem(id: string, payload: Item) {\\n          if (!id || !payload) return;\\n\\n          const index = this.findIndexById(id);\\n\\n          if (index !== -1) {\\n            this.items[index] = generateFakeData();\\n          }\\n        },\\n\\n        deleteItem(id: string) {\\n          const index = this.findIndexById(id);\\n\\n          if (index === -1) return;\\n\\n          this.items.splice(index, 1);\\n        },\\n\\n        findIndexById(id: string) {\\n          return this.items.findIndex((item) => item.id === id);\\n        },\\n      },\\n    });\\n\\n\\n\\nWe have defined the most basic functionality, creating, updating an deleting an item from our grocery list. And that is more done enough for getting to know how to setup Pinia as your Vue store.\\n\\n## [](#demo)Demo\\n\\nThis is the best looking UI... Yeah.\\n\\n[![image](https://res.cloudinary.com/practicaldev/image/fetch/s---vJd1xkg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw\\\\_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bfaxskf0s0ph40wc9n5m.png)](https://res.cloudinary.com/practicaldev/image/fetch/s---vJd1xkg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw\\\\_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bfaxskf0s0ph40wc9n5m.png)\\n\\n[Demo](https://youtu.be/CIjFs7Ax6Mg)\\n\\nAs you can see from this setup we are able to use the Pinia store, that we are able to add an Item, update it and delete it.\\n\\n## [](#summary)Summary\\n\\nWe learned how to setup Pinia with Vue 3 and TypeScript. What I like Pinia is that it is built with TypeScript already that means the store provides us all the auto-completion that we want and the reason we love about TypeScript. Pinia is also very intuitive which we notice it was very similar to how Vuex is implemented.\\n\\nBut there are more of its features that you can read about from the [official documentation](https://pinia.esm.dev/)\\n\\nI hope you find this useful, cheers!\\n\\nFull source code can be found from the [repository](https://github.com/carlomigueldy/vue-3-pinia-grocery-app)\\n\",\"timestamp\":1636676699,\"title\":\"Getting started with Vue 3 + Pinia Store + TypeScript by building a Grocery List App\"},\"digest\":\"C1vjz8F1HFfE-tdbJqFl0kZ-4uKMmGMBPcv3IQYX9kk\",\"authorship\":{\"contributor\":\"0x3E8c686F499C877D8f4aFB1215b6f0935796b986\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"XNAfCibxrmGjSr-VHADLIVoKcpjQ6AvgUiRVqATl37k\\\",\\\"y\\\":\\\"3RuY7Uw61mZNEnJyyzr7ObM928gt-QoWvGAdLDb2gy4\\\"}\",\"signature\":\"Q2oS5z5fFtFTD0ZuTpmRWiIWqJcRPwqsTB8anlmj6E1tFOXfLfygp_IsyZT59VcazlcYFY7tShpEBIYHZR22bg\",\"signingKeySignature\":\"0xc823d2ab2ee5864fc5495382efb960b4461c3fb598b3be4e5e068c6312ab60ce014c7378c1f02beed8fce37236dc1e3eb8dd28a6f911b33ec4172a1fa8b17f101b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"XNAfCibxrmGjSr-VHADLIVoKcpjQ6AvgUiRVqATl37k\\\",\\\"y\\\":\\\"3RuY7Uw61mZNEnJyyzr7ObM928gt-QoWvGAdLDb2gy4\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"C1vjz8F1HFfE-tdbJqFl0kZ-4uKMmGMBPcv3IQYX9kk\"}"