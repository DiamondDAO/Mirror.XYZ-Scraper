"{\"content\":{\"body\":\"CSS-in-JS是组织CSS代码的方式，代表库有styled-component和emotion\\n\\n传统CSS的缺陷\\n\\n1. 缺乏模块组织\\n   传统的JS和CSS都没有模块的概念，后来在JS界陆续有了 CommonJS 和 ECMAScript Module，CSS-in-JS可以用模块化的方式组织CSS，依托于JS的模块化方案，比如：\\n\\n```\\n// button1.ts\\nimport styled from '@emotion/styled'\\n\\nexport const Button = styled.button  color: turquoise;\\n// button2.ts\\nimport styled from '@emotion/styled'\\n\\nexport const Button = styled.button  font-size: 16px;\\n```\\n\\n\\n两个文件的两个同名元素的CSS不会互相影响\\n2\\\\. 缺乏作用域\\n传统的CSS只有一个全局作用域，比如说一个class可以匹配全局的任意元素。随着项目成长，CSS会变得越来越难以组织，最终导致失控。CSS-in-JS可以通过生成独特的选择符，来实现作用域的效果\\n\\n![](https://images.mirror-media.xyz/publication-images/mYrIPhl2ZXC0dF24lDV2d.png?height=120&width=570)\\n\\n```\\nconst css = styleBlock => {\\nconst className = Hash(styleBlock);\\nconst styleEl = document.createElement('style');\\nstyleEl.textContent =     .${className} {       ${styleBlock}     }  ;\\ndocument.head.appendChild(styleEl);\\nreturn className;\\n};\\nconst className = css(  color: red;   padding: 20px;); // 'c23j4'\\n```\\n\\n\\n3\\\\. 隐式依赖，让样式难以追踪\\n比如这个CSS样式：\\n\\n```\\n.target .name h1 {\\ncolor: red\\n}\\n\\nbody #container h1 {\\ncolor: green\\n}\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<body>\\n<div id='container'>\\n<div class='target'>\\n<div class='name'>\\n<h1>颜色？</h1>\\n</div>\\n</div>\\n</div>\\n</body>\\n</html>\\n```\\n\\n\\n比较麻烦判断h1元素最终显式为什么颜色，DOM树越复杂越难追踪\\n\\n而CSS-in-JS的方案就简单直接、易于追踪\\n\\n```\\nexport const Title = styled.h1  color: green;\\n<Title>\\n颜色？\\n</Title>\\n```\\n\\n\\n4\\\\. 没有变量\\n传统的CSS规则里没有变量，但是在 CSS-in-JS 中可以方便地控制变量\\n\\n```\\nconst Container = styled.div(props => ({\\ndisplay: 'flex',\\nflexDirection: props.column && 'column'//加入条件判断或变量计算\\n}))\\n```\\n\\n\\n5\\\\. CSS选择器与HTML元素耦合\\n\\n```\\n\\n.target .name h1 {\\ncolor: red\\n}\\n\\nbody #container h1 {\\ncolor: green\\n}\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<body>\\n<div id='container'>\\n<div class='target'>\\n<div class='name'>\\n<h1>我是啥颜色？</h1>\\n</div>\\n</div>\\n</div>\\n</body>\\n</html>\\n```\\n\\n\\n如果想把 h1 改成h2，必须要同时改动 CSS 和 HTML。而在CSS-in-JS中，HTML和CSS是结合在一起的，易于修改\\n\\nEmotion 介绍\\nlibrary： <https://github.com/emotion-js/emotion>\\n\\ndocs： <https://emotion.sh/docs/introduction>\\n\\nemotion是一个JavaScript库，使用emotion可以用写js的方式写css代码。在react中安装emotion后，可以很方便进行css的封装，复用。使用emotion后，浏览器渲染出来的标签是会加上一个css开头的标识。\\n\\n```\\n/** @jsx jsx */\\nimport { jsx } from '@emotion/react'\\n\\nrender(\\n<div\\ncss={\\nbackgroundColor: 'hotpink',\\n'&:hover': {\\ncolor: 'lightgreen'\\n  }\\n}\\n >\\n    This has a hotpink background.\\n  </div>\\n)\\n```\\n\\n  这种写法比起React自带的style的写法功能更强大，比如可以处理级联、伪类等style处理的不了的情况\\n\\n```\\n<span style=>{keyword}</span>\\n```\\n\\n## \\nJSS\\n\\n\\n<https://cssinjs.org/?v=v10.6.0>\\n\\n阮一峰 <https://www.ruanyifeng.com/blog/2017/04/css_in_js.html> <https://polished.js.org/>\",\"timestamp\":1636378225,\"title\":\"CSS-in-JS\"},\"digest\":\"f8rllC55GDkzTt2iDTN64KebTazP47WNGp2PHjnGHZY\",\"authorship\":{\"contributor\":\"0x8152E74b2cD6ac2FF783816C30Ea66CeFA5efc8d\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"bKXHM3zBxU7_y6aTfRnaXBvnkU073NbIQhC6tjqQiW8\\\",\\\"y\\\":\\\"r452PlQ2cq8Rkd_Bj1CqEKz59PK7DRG3bFVFw0ZZS6s\\\"}\",\"signature\":\"pCnhRG-fDDl2DWkLJ1TN4m8EeVfMOpHcmH2t8KU_sQ3NsOyZMulLbf5rHfVQ2tZl7bsgQb-0HFfdyhbZMeJ0-w\",\"signingKeySignature\":\"0xd450e4cebdb26579b8cf45f9624b5234e483983895eda72bda2a36bac92ae65a40fcbdf80ea16f5cb64b58226267a8df2d7febda1ef82a9ac72449a3462e15191b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"bKXHM3zBxU7_y6aTfRnaXBvnkU073NbIQhC6tjqQiW8\\\",\\\"y\\\":\\\"r452PlQ2cq8Rkd_Bj1CqEKz59PK7DRG3bFVFw0ZZS6s\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"f8rllC55GDkzTt2iDTN64KebTazP47WNGp2PHjnGHZY\"}"