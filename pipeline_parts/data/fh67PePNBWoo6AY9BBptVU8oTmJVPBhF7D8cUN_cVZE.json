"{\"content\":{\"body\":\"*üëã Note: Originally published in June 2016 on [Coindesk](https://www.coindesk.com/markets/2016/06/04/making-sense-of-blockchain-smart-contracts/) and [Medium](https://jjmstark.medium.com/part-2-making-sense-of-smart-contracts-dfef850f049c).*\\n\\n\\n---\\n\\nThe term [‚Äúsmart contract‚Äù](http://www.coindesk.com/research/smart-contracts-report/) has no clear and settled definition. The idea has long been hyped to the public as a central component of next-generation blockchain platforms, and as a key capability for any practical enterprise application.\\n\\nThey are defined variously as [‚Äúautonomous machines‚Äù](http://motherboard.vice.com/read/smart-contracts-sound-boring-but-theyre-more-disruptive-than-bitcoin), [‚Äúcontracts between parties stored on a blockchain‚Äù](http://en.finance.sia-partners.com/impact-blockchains-smart-contracts-insurance) or [‚Äúany computation that takes place on a blockchain‚Äù](http://www.multichain.com/blog/2015/11/smart-contracts-good-bad-lazy/). Many [debates about the nature of smart contracts](https://www.reddit.com/r/Bitcoin/comments/300yez/if_it_doesnt_escrow_value_its_not_a_smart_contract/) are really just contests between competing terminology.\\n\\nThe different definitions usually fall into one of two categories. Sometimes the term is used to identify a specific technology ‚Äî code that is stored, verified and executed on a blockchain. Let‚Äôs call this type of definition ‚Äúsmart contract code‚Äù.\\n\\nOther times, the term is used to refer to a specific *application* of that technology: as a complement, or substitute, for legal contracts. Let‚Äôs name these ‚Äúsmart legal contracts‚Äù.\\n\\nUsing the same term to refer to distinct concepts makes answering even simple questions impossible. For instance, one question I‚Äôm often asked is simply: what are the capabilities of a smart contract?\\n\\nIf we are talking about *smart contract code*, then the answer depends on the capabilities of the language used to express the contract and the technical features of the blockchain on which it operates.\\n\\nBut if we are asking about using that technology to create a binding legal agreement, or an effective substitute *for* a binding legal agreement, the answer depends on far more than the technology. This answer depends on existing legal doctrine and how our legal, political and commercial institutions decide to treat the technology. If businesspeople don‚Äôt trust it, the legislature doesn‚Äôt recognize it and the courts can‚Äôt interpret it, then it won‚Äôt be a very practically useful ‚Äúcontract‚Äù.\\n\\nIt would be futile to try and change the way people use the term already. Practically speaking, we are probably stuck using ‚Äî or at least reading ‚Äî the term ‚Äúsmart contract‚Äù for now. This makes it essential for anyone interested in this space to understand the different ways the term is used and be able to distinguish clearly between them.\\n\\n## Smart contracts as smart contract code\\n\\nBlockchains can run code. While the first blockchains were designed to perform a small set of simple operations ‚Äî mainly, transactions of a currency-like token ‚Äî techniques have been developed to allow blockchains to perform more complex operations, defined in full-fledged programming languages.\\n\\nBecause these programs are run on a blockchain, they have unique characteristics compared to other types of software. First, the program itself is recorded *on* the blockchain, which gives it a blockchain‚Äôs characteristic permanence and censorship resistance. Second, the program can *itself* control blockchain assets ‚Äî i.e., it can store and transfer amounts of cryptocurrency. Third, the program is executed *by* the blockchain, meaning it will always execute as written and no one can interfere with its operation.\\n\\nTo developers and others working directly with blockchain technology, the term ‚Äúsmart contracts‚Äù is most often used to refer to this blockchain code. You‚Äôll see this use of the term in the [Ethereum documentation](https://ethereum-homestead.readthedocs.io/en/latest/), on[ stackexchange](http://ethereum.stackexchange.com/questions/607/how-to-unit-test-smart-contracts) and in [technically minded articles](http://www.coindesk.com/three-smart-contract-misconceptions/). The term has been particularly associated with the Ethereum project, whose primary purpose is to be a platform for smart contract code. But today, the term is used generically [across](http://www.coindesk.com/smart-contract-1-million-bitcoin-rootstock/) [the](https://docs.erisindustries.com/explainers/smart_contracts/)[ community](https://medium.com/@tjayrush/smart-contracts-are-immutable-thats-amazing-and-it-sucks-e0fbc7b0ec16#.sl3xvhf0w) to refer to any complex program that is stored and executed on a blockchain.\\n\\nCalling these programs *contracts* is helpful in that this code is governing something important or valuable. We only go to the trouble of creating a binding contract when it‚Äôs important that we be able to enforce the terms. Similarly, we only use smart contract code when the code controls something important, like money or identity.\\n\\nThat said, smart contract code need not resemble anything we would ordinarily think of as a ‚Äúcontract‚Äù. While the code could articulate a conditional financial transaction (‚Äúsend 1 BTC from Alice to Bob on July 1, 2016‚Äù), it could also be a governance application that controls account permissions (‚Äúif Alice has voted yes, remove Bob‚Äôs voting rights over Application X and notify the following accounts‚Ä¶‚Äù).\\n\\nIn many cases, smart contract code is not used in isolation but as a small piece in a larger application. Every DApp, DAO, or other blockchain-based application is built using smart contract code to perform operations on their chosen blockchain. Any Ethereum application that you‚Äôve read about ‚Äî like [Augur](http://augur.net/), [Slock.it](http://slock.it/), or [Boardroom](http://boardroom.to/) ‚Äî is made out of smart contract code.\\n\\n## Imperfect, misleading, and someday outdated\\n\\nThe term receives a lot of valid criticism. Relying on the metaphor of a ‚Äúcontract‚Äù is misleading because it emphasizes a single narrow use case. The term fails to capture one of the key capabilities of blockchain programs: that they have a kind of independent agency.\\n\\nSmart contract programs can *themselves* hold balances of cryptocurrency, or even control other smart contract programs. Once they are created, they can act autonomously when called to perform an action. For this reason, many prefer the term ‚Äúsmart agent‚Äù, analogous to the more general concept of a [software agent](https://en.wikipedia.org/wiki/Software_agent).\\n\\nEventually, this use of the term may simply fade from use as blockchain technology matures.\\n\\nDevelopers will be more likely to refer to a specific language (‚ÄúLet‚Äôs look at your [Solidity code](https://solidity.readthedocs.io/en/latest/)‚Äù) or platform (‚ÄúOur application runs on [Eris.db](https://erisindustries.com/components/erisdb/)‚Äù) that they are working with, as opposed to a generic term that could describe any complex operation on a blockchain.\\n\\nThe capabilities and purpose of smart contract code as distinct from *other* code may simply become clear from context, without requiring the use of a clumsy analogy like ‚Äúcontract‚Äù. It might end up being more similar to how we speak of HTML and JavaScript today, without having to think about how the former is a ‚Äúmarkup‚Äù language, playing a distinct role from JavaScript in the overall web application.\\n\\n## Smart contracts as smart legal contracts\\n\\nAmong those who work in finance or law, the term ‚Äúsmart contract‚Äù is often read quite differently than the definition above.\\n\\n‚ÄúSmart contract‚Äù here refers to a specific *use case of smart-contract code* ‚Äî a way of using blockchain technology to complement, or replace, existing legal contracts. This is the definition of the term I considered in [my last piece](https://stark.mirror.xyz/IUqivJ5jeQiCRnwlwkAhGSJtT5pSAPpqbBJvyUN0nCg): the use of code to articulate, verify, and enforce an agreement between parties. A smart *legal* contract.\\n\\nThese smart legal contracts would most likely be a combination of smart contract code and more traditional legal language. For instance, imagine a supplier of goods enters into a smart legal contract with a retailer. The payment terms could be defined in code and executed[ automatically when delivery is made](https://www.loaddelivered.com/blog/why-blockchain-is-a-game-changer-for-supply-chain-management/). But the retailer would likely insist the contract include an [indemnity clause](https://en.wikipedia.org/wiki/Indemnity), whereby the supplier agrees to indemnify the retailer against claims flowing from a defective product. There would be no point representing this clause in code, since it is not something that can self-execute ‚Äî it exists to be interpreted and enforced by a court in the case of litigation.\\n\\nCommercial agreements are full of boilerplate clauses that protect parties from various edge-case liabilities, and these are not always suitable for representation and execution through code, meaning that smart legal contracts will require (at least for the foreseeable future) a blend between code and natural language.\\n\\nThis is the basic idea behind Eris Industries‚Äô [dual integration](https://erisindustries.com/components/erislegal/) system, Primavera de Fillipi‚Äôs proposed [Legal Framework for Crypto-Ledger Transactions](http://p2pfoundation.net/Legal_Framework_For_Crypto-Ledger_Transactions), and R3‚Äôs Corda [smart contracts system](http://www.coindesk.com/barclays-smart-contracts-templates-demo-r3-corda/).\\n\\nCould smart legal contracts ever be considered legally enforceable? Probably. Despite what many think, the conditions under which an agreement becomes a legally enforceable contract are flexible and attuned to the underlying relationship between the parties, rather than dependent on the form the contract takes. Anything from a verbal agreement to an email conversation can become a contract at law, if the [basic elements of a contract can be found](https://medium.com/@ConsenSys/unpacking-the-term-smart-contract-e63238f7db65#.nak50tdkj).\\n\\n## Many contracts, many use cases\\n\\nThe category of smart legal contracts is complicated by the fact that there are many different types of contracts in the world, only some of which are obvious candidates for use as ‚Äúsmart contracts‚Äù. A legal contract could be anything from a verbal agreement for someone to paint your house to a derivative traded electronically in financial markets.\\n\\nSince early 2015, the use cases attracting the most attention are [smart legal contracts as smart ](https://www.dlapiper.com/en/us/insights/publications/2016/04/the-blockchain-revolution/)*[financial instruments](https://www.dlapiper.com/en/us/insights/publications/2016/04/the-blockchain-revolution/)* like shares, bonds, or derivatives contracts. Articulating these contracts in code could allow financial markets to become more automated and simplify many process-intensive systems related to trading and servicing of financial instruments.\\n\\nThese ‚Äúsmart financial instruments‚Äù do not exist at scale today, although many people are working to build them. R3‚Äôs recently announced [Corda platform](http://www.coindesk.com/9-takeaways-r3s-new-distributed-ledger-tech/) is designed to facilitate this type of smart-contract. Digital Asset Holdings [recently acqui-hired Elevance](http://www.coindesk.com/digital-asset-acquires-elevence/), a Swiss firm that has developed a way to model financial agreements in code. In April, Barclays‚Äô [revealed details of a scheme](http://www.cnbc.com/2016/04/19/barclays-used-blockchain-tech-to-trade-derivatives.html), in cooperation with R3, to represent ISDA agreements in smart contract code.\\n\\nFinancial instruments are just one type of contract that could benefit from blockchain code. As the technology matures, other assets ‚Äî e.g. real estate, or intellectual property ‚Äî may be stored and traded over blockchain systems. As new asset types go ‚Äúon-chain‚Äù, the agreements used to govern those assets in the world today (like a mortgage or licensing agreement) may benefit from blockchain-based analogs.\\n\\n## Alternatives to traditional legal agreements\\n\\nMany advocates for blockchain technology see larger possibilities. Rather than merely imitate or complement the legal contracts we use today, perhaps smart contract code could be used to facilitate new types of commercial arrangements.\\n\\nWe might even call this a third definition of the term: using smart contract code to create novel, alternative forms of agreements that are nonetheless commercially useful. Let‚Äôs call these ‚Äúsmart *alternative* contracts‚Äù.\\n\\nThis approach takes a broader view of the real-world problem solved by contracts. Commerce depends on individuals being able to form stable, predictable agreements with one another. Contracts, along with a strong legal system, are the primary mechanisms we use to shape each party‚Äôs incentives to the point where they have sufficient confidence in their relationship to engage in the risky business of trade.\\n\\nBut perhaps legal agreements are not the only solution to this general problem. Smart contract code offers a new set of tools to articulate and enforce terms, and they can be used to create systems of incentives that may be sufficient to make commercial relationships possible.\\n\\nThe most widely discussed opportunity of this type is machine-to-machine commerce. The growing ecosystem of smart devices ‚Äî particularly those that are in some fashion autonomous ‚Äî will eventually need a way to engage in basic commercial interactions with one another. For instance, a washer that [buys its own detergent](http://www.coindesk.com/ibm-reveals-proof-concept-blockchain-powered-internet-things) or a [car that can pay to recharge itself](http://www.coindesk.com/german-utility-company-turns-to-blockchain-amid-shifting-energy-landscape/).\\n\\nThese transactions still require a minimum level of trust to be commercially viable, but are ill-suited for legal contracts, which are comparatively expensive and require the involvement of legal persons like a corporation or human. Smart alternative contracts might enable an entirely new type of commerce carried out between our computers, cars, phones, and appliances.\\n\\nThere probably are ‚Äî or will be ‚Äî other types of commercial interaction that aren‚Äôt well suited to traditional legal contracts. New markets, suddenly made possible by technology, but which are underserved by legal tools that are slow to innovate and adapt.\\n\\nSmart alternative contracts might let us stretch the web of trust out a little further, a little faster, beyond the reach of the legal system, where they can enable new forms of commerce not possible today.\\n\\n## Conclusion\\n\\nThe lack of clear terminology in this field is an unfortunate reality. Those of us who work in the blockchain space should be mindful of how the term is being used in different communities, and be prepared to ask a series of annoying, though necessary, clarifying questions when asked about the nature and potential of ‚Äúsmart contracts‚Äù.\\n\\nThe different uses of the term illustrate a broader challenge in our industry. The interdisciplinary nature of blockchain technology, and ‚Äúsmart contracts‚Äù in particular, lead people to see the technology as primarily belonging to their own discipline, at the expense of the others.Lawyers often look at smart contracts and see marginally improved legal agreements, without appreciating the fuller potential of blockchain-code to extend beyond law‚Äôs reach.\\n\\nDevelopers, on the other hand, consider smart contracts and see the limitless possibilities of software, without appreciating the subtleties and commercial realities reflected in traditional legal agreements.\\n\\nAs with any interdisciplinary field, both must learn from the other.\",\"timestamp\":1631898299,\"title\":\"Making Sense of Smart Contracts\",\"publication\":\"stark\"},\"digest\":\"SQlpFv_9dtYqY9xaHBiFgf_K_fstp3uechj9zfNdDXk\",\"authorship\":{\"contributor\":\"0x4aa9C5546BE68486c4eF264a230D25674a1A728e\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"wK13VdJCIe1wloDWo15jqrCP-pXcaxAHoUWpDMtiZNc\\\",\\\"y\\\":\\\"o-bOA4mWjHEqpB5Rn-z9bYJHjgmF7Hn3WdmgjBSlvrk\\\"}\",\"signature\":\"rDJiTD7aaQWBsgi8Cvo6HvwH7CCIOOt3qYdd1qlKFD8hzl63xot3ZoB-1WSE4jIaZ2LvFcjpvwF7ZzO-6PR4_g\",\"signingKeySignature\":\"0xbed4620751c6f3999af8ef8f13bec6d6039e15f5a85ebb3589b9c832f7041e8054706ebffd8d3287e8bf5490805d90dac88ade6491b63a291c52c20c2e599dce1b\",\"signingKeyMessage\":\"I authorize the publication of articles on stark.mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"wK13VdJCIe1wloDWo15jqrCP-pXcaxAHoUWpDMtiZNc\\\",\\\"y\\\":\\\"o-bOA4mWjHEqpB5Rn-z9bYJHjgmF7Hn3WdmgjBSlvrk\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"7g0Bmjw8uJKCBvUKBPcfAN50eXDrvvgHdOqdQ1Eko3Y\"}"