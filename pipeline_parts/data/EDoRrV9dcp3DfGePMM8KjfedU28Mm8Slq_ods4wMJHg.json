"{\"content\":{\"body\":\"## 什么是geth\\n\\nGeth是由以太坊基金会提供的官方客户端软件，用Go编程语言编写的。Geth提供了一个交互式命令控制台，通过命令控制台中包含了以太坊的各种功能（API）。全名go-ethereum，github地址[go-ethereum](https://github.com/ethereum/go-ethereum)。wiki里为[使用文档](https://github.com/ethereum/go-ethereum/wiki)。\\n\\n## 安装GETH（MAC）\\n\\n```\\nbrew tap ethereum/ethereum\\nbrew install ethereum\\n```\\n\\ntip: 如遇安装报错--No such file or directory  *@*  *dir_chdir* -  */usr/local/Cellar*\\n\\n手动创建/usr/local/Cellar文件，并添加权限即可解决\\n\\n## 使用GETH搭建私链\\n\\n1、初始化配置文件,工程根目录添加文件genesis.json\\n\\n```\\n{\\n  \\\"config\\\": {\\n    \\\"chainId\\\": 123,\\n    \\\"homesteadBlock\\\": 0,\\n    \\\"eip150Block\\\": 0,\\n    \\\"eip155Block\\\": 0,\\n    \\\"eip158Block\\\": 0,\\n    \\\"byzantiumBlock\\\": 0,\\n    \\\"constantinopleBlock\\\": 0,\\n    \\\"petersburgBlock\\\": 0,\\n    \\\"istanbulBlock\\\": 0\\n  },\\n  \\\"alloc\\\": {},\\n  \\\"coinbase\\\": \\\"0x0000000000000000000000000000000000000000\\\",\\n  \\\"difficulty\\\": \\\"0x2000\\\",\\n  \\\"extraData\\\": \\\"\\\",\\n  \\\"gasLimit\\\": \\\"0x2fefd8\\\",\\n  \\\"nonce\\\": \\\"0x0000000000000042\\\",\\n  \\\"mixhash\\\": \\\"0x0000000000000000000000000000000000000000000000000000000000000000\\\",\\n  \\\"parentHash\\\": \\\"0x0000000000000000000000000000000000000000000000000000000000000000\\\",\\n  \\\"timestamp\\\": \\\"0x00\\\"\\n}\\n\\n复制代码\\n```\\n\\n2、工程目录下初始化私链\\n\\n```\\ngeth --datadir \\\"chain\\\" init genesis.json\\n```\\n\\n3、启动私链\\n\\n```\\n geth --datadir \\\"chain\\\" --http --http.api personal,eth,net,web3 console --allow-insecure-unlock\\n```\\n\\ngeth 参数通过geth help查看\\n\\nconsole配置是打开js交互控制台，进入控制台后，命令参考[web3js.readthedocs.io/en/v1.5.2/](https://link.juejin.cn?target=https%3A%2F%2Fweb3js.readthedocs.io%2Fen%2Fv1.5.2%2F) 此时会启动web服务，默认端口为8545\\n\\n常用命令\\n\\n* 命令含义eth.blockNumber\\n* 区块数量eth.accounts\\n* 区块账户信息miner.start(1)开始挖矿,参数为挖矿线程数\\n* eth.mining挖矿状态\\n* personal.newAccount()新建账户\\n\\n测试新建账户, 123456为密码\\n\\n```\\npersonal.newAccount('123456')\\n```\\n\\n查看账户\\n\\n```\\neth.accounts\\n```\\n\\n此时命令行会输出一个账号\\n\\n完成上面的基本操作，开始尝试通过geth完成两个账户之间的转账。\\n\\n## 基于geth链，完成一笔交易\\n\\n再添加一个账户\\n\\n```\\npersonal.newAccount('123456')\\n```\\n\\n默认挖矿的收益都归属于第一个账户，也可以手动配置\\n\\n```\\nminer.setEtherbase(eth.accounts[0])\\n```\\n\\n设置完成后，查看\\n\\n```\\neth.coinbase\\n```\\n\\n会输出我们刚刚设置的账户地址。\\n\\n接下来开始挖矿，挖一个区块就停止。\\n\\n```\\nminer.start(1);admin.sleepBlocks(1);miner.stop();\\n```\\n\\n等待完成后，通过`eth.blockNumber`查询区块数量；通过`web3.fromWei(eth.getBalance(eth.accounts[0]),\\\"ether\\\")`查看挖矿收益。eth.getBalance(addr)会返回账户的余额，余额以wei为单位，传入的参数是账户的公钥，web3.fromWei单位转换，在这个例子中是将wei转换成ether。\\n\\n### 解锁账户\\n\\n在发送转账交易之前我们需要先解锁账户，否则会报错。执行以下命令解锁账户：\\n\\n```\\npersonal.unlockAccount(eth.accounts[0], \\\"123456\\\")\\n```\\n\\npersonal.unlockAccount(addr, passwd, duration)命令用来解锁账户，第一个参数传入需要解锁的账户地址，第二参数传入账户密码，第三个参数传入账户解锁状态持续时间，单位是秒。\\n\\n如果之前的命令行中没有--allow-insecure-unlock，会报错`account unlock with HTTP access is forbidden`。\\n\\n使用最新版本geth客户端，当执行personal.unlockAccount()或在程序中调用personal_unlockAccount接口时，会出现：account unlock with HTTP access is forbidden异常。 异常原因: 新版本geth，出于安全考虑，默认禁止了HTTP通道解锁账户。\\n\\n### 开始交易\\n\\n```\\neth.sendTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(1,'ether')})\\n```\\n\\neth.sendTransaction(transactionObject)用来向区块链网络中发送一笔转账交易。当交易发送到区块链后，会返回一个交易hash，此时的交易正在矿工的交易池中等待被打包。\\n\\n### 查看交易池等待被打包的交易\\n\\n`txpool.status`返回正在等待打包的交易。其中有一条pending的交易，pending表示已提交但未被处理的交易。\\n\\n![查看状态](https://images.mirror-media.xyz/publication-images/sy06vuayrebXcfZVURbcF.png?height=69&width=104)\\n\\n### 查看pending交易的详情\\n\\n`txpool.inspect.pending`返回pending交易的详细信息。\\n\\n要想交易被处理，必须要挖矿。这里启动挖一个区块；\\n\\n```\\nminer.start(1);admin.sleepBlocks(1);miner.stop();\\n```\\n\\n挖到矿后，现在交易已经被成功打包了，可以通过账户查看账户余额时候变动\",\"timestamp\":1641384905,\"title\":\"开发DAPP(1) - geth篇\"},\"digest\":\"I7pZICnwnaJborsgdRq7s4erXR9fMfDM1vrDzNzuUfk\",\"authorship\":{\"contributor\":\"0x36d3A7C6AbEa02f762192e9bb714AEf65ae2834b\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"2nmNBYI86MzjQZC56sRJTmQeojSSGMr4lWm5PaY1sgo\\\",\\\"y\\\":\\\"P29_N8a51_t0ZQjGAKjk5a0_g1TBcz9lukch9mKk_IA\\\"}\",\"signature\":\"ZrdruSa8tCdqAYk5zHcXLqv_5lyQRjZl9ieBCaz_3HTZJUCbbJUjjqlz_dLzGnB_JjduAwBBgJt8bsKk_8RURA\",\"signingKeySignature\":\"0xaeb03c82696f1f834ab19ae9008d04cf6e57c59d278ce1123bc9b3753f0c62731c14e68c6e065c35f65cac4eb6764557289d0b71eb2af2ad81c66c8f9950b7f01b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"2nmNBYI86MzjQZC56sRJTmQeojSSGMr4lWm5PaY1sgo\\\",\\\"y\\\":\\\"P29_N8a51_t0ZQjGAKjk5a0_g1TBcz9lukch9mKk_IA\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"I7pZICnwnaJborsgdRq7s4erXR9fMfDM1vrDzNzuUfk\"}"