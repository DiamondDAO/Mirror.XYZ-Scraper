"{\"content\":{\"body\":\"So lately I‚Äôve been tasked to integrate the Solana Program I‚Äôm working on with Mango.\\nI want to gather the knowledge and tidbits that I find valuable in case that can be of use. \\n  \\n *Sky Burial #2 by Wayne Haag, space derelicts are cool*\\n\\n\\n______\\n\\nMango is a decentralised exchange (DEX) that offer leverage and perpetuals.Mango is also controlled by a DAO and to me it seems like a great example of decentralised governance!\\n\\nAnd the most important, it‚Äôs a neat product I use since months, my main DEX. Good feature and UI, neat UX.\\n\\n\\n_____\\n\\n## Localnet dev environment with --clone\\n\\nIn order to be productive, I want to iterate quickly.\\n\\nMango is currently accessible on `devnet` and `main-net` clusters, but my anchor workspace contains several projects, that I modify often, so I don‚Äôt feel like using `devnet`.\\n\\nI want to be able to have my usual `anchor test` speed, not sure what happen behind the curtain but the deployments to `localnet` don‚Äôt event appear in the prompt, making it ideal for iterating fast.\\n\\nIn order to use Mango on `localnet` I found this neat option for `solana-test-validator` (the program running `localnet` coming with the Solana cli) :\\n\\n`--clone <account>`  (credits to dvcrn#7961 on the Anchor discord)\\n\\nIt copies accounts from another cluster into the starting `localnet` instance, and note that once you run the `solana-local-validator` once, it create a `test-ledger` folder that store its state. So `--clone` only have effect when this `test-ledger` is not there, of if you use `--reset` to start fresh.\\n\\nThis is how I use it :\\n\\n```\\n#!/bin/bash\\n\\n# Reset then configure the local validator to mimic the mango accounts on devnet\\nsolana-test-validator \\\\\\n --reset                                                `: # Reset the test-ledger` \\\\\\n --url https://mango.devnet.rpcpool.com                 `: # Cluster from which the below program will be cloned` \\\\\\n --clone Ec2enZyoC4nGpEfu2sUNAa2nUGJHWxoUWYSEJ2hNTWTA   `: # MANGO starts - devnet.2 cluster `\\\\\\n --clone 4skJ85cdxQAFVKbcGgfun8iZPL7BadVYXG3kGEGkufqA   `: # mangoProgramId `\\\\\\n --clone 6eadH6vSsEk5bPiXWPYRq5KRSjohfYd6Ug5HjGbxaWce \\\\\\n --clone DESVgJVGajEgKGXhb6XmqDHGz3VjdgP7rEVESBgxmroY   `: # serumProgramId`\\\\\\n --clone AvKzLiE8ezzp6kLVw49nq8drycE89NS1RQaBWjBNeUoF \\\\\\n --clone 8FRFC6MoGGkMFQwngccyu69VnYbzykGeez7ignHVAFSN   `: # USDC Mango test Token mint`\\\\\\n --clone 3UNBZ6o52WTWwjac2kPUb4FyodhU1vFkRJheu1Sh2TvU   `: # BTC Token mint`\\\\\\n --clone HovQMDrbAgAYPCmHVSrezcSmkMtXSSUsLDFANExrZh2J   `: # BTC oracle `\\\\\\n --clone BeEoyDq1v2DYJCoXDQAJKfmrsoRRvfmV856f2ijkXbtp   `: # BTC rootKey `\\\\\\n --clone 4X3nP921qyh6BKJSAohKGNCykSXahFFwg1LxtC993Fai   `: # BTC nodeKey `\\\\\\n --clone J83w4HKfqxwcq3BEMMkPFSppX3gqekLyLJBexebFVkix   `: # SOL oracle `\\\\\\n --clone 8GC81raaLjhTx3yedctxCJW46qdmmSRybH2s1eFYFFxT   `: # SOL rootKey `\\\\\\n --clone 7mYqCavd1K24fnL3oKTpX3YM66W5gfikmVHJWM3nrWKe   `: # SOL nodeKey `\\\\\\n --clone FHQtNjRHA9U5ahrH7mWky3gamouhesyQ5QvpeGKrTh2z   `: # BTC Perp market `\\\\\\n --clone F1Dcnq6F8NXR3gXADdsYqrXYBUUwoT7pfCtRuQWSyQFd   `: ## bidsKey `\\\\\\n --clone BFEBZsLYmEhj4quWDRKbyMKhW1Q9c7gu3LqsnipNGTVn   `: ## asksKey `\\\\\\n --clone Bu17U2YdBM9gRrqQ1zD6MpngQBb71RRAAn8dbxoFDSkU   `: ## eventsKey `\\\\\\n --clone 58vac8i9QXStG1hpaa4ouwE1X7ngeDjY9oY7R15hcbKJ   `: # SOL Perp market `\\\\\\n --clone 7HRgm8iXEDx2TmSETo3Lq9SXkF954HMVKNiq8t5sKvQS   `: ## bidsKey `\\\\\\n --clone 4oNxXQv1Rx3h7aNWjhTs3PWBoXdoPZjCaikSThV4yGb8   `: ## asksKey `\\\\\\n --clone CZ5MCRvkN38d5pnZDDEEyMiED3drgDUVpEUjkuJq31Kf   `: ## eventsKey `\\n#  > /dev/null 2>&1 & \\n```\\n\\nI run that script once to configure my `localnet`, or to reset it.\\n\\nYou can then start you `solana-local-validator` the usual way, or run the above script each time if you want to have a deterministic environment.\\n\\nYou then call `anchor test --skip-local-validator` to ran your test suit against it (at first I though Anchor would pick up the local `test-ledger` but it doesn‚Äôt)\\n\\nAll the accounts come from the mango `ids.rs`\\n\\n[https://github.com/blockworks-foundation/mango-client-v3/blob/main/src/ids.json](https://github.com/blockworks-foundation/mango-client-v3/blob/main/src/ids.json)\\n\\n\\n______\\n\\nOne neat additional thing you can do, is to also copy your wallets from the devnet in order to have the right tokens and balances :\\n\\n```\\n--clone aca3VWxwBeu8FTZowJ9hfSKGzntjX68EXh1N9xpE1PC    `: # my wallet account (and its assoc token ones below, add yours too)` \\\\\\n --clone 8FRFC6MoGGkMFQwngccyu69VnYbzykGeez7ignHVAFSN   `: ## USDC` \\\\\\n --clone 9KBGW5bbfdLA4zKAXPETwjR5Ub7BR2Zh9gKHsPnrUkUg   `: ## BTC` \\\\\\n```\\n\\nYou can easily follow Mango tutorial to get Devnet tokens, then go trade these on the devnet Mango for other Sol, BTC and the like (That‚Äôs a good way to avoid the devnet sol airdrop limitation ü§´)\\n\\n[https://docs.mango.markets/tutorials/how-to-receive-dev-net-tokens](https://docs.mango.markets/tutorials/how-to-receive-dev-net-tokens)\\n\\nThis allows me to send Mango instructions like `InitMangoAccount` successfully.\\n\\nOne thing that I loose using `anchor test --skip-local-validator` compared to just running `anchor test` is that the deployment does prompt now, not as fast. Will look into that later to understand what‚Äôs the diff.\\n\\n\\n__________\\n\\n## Anchor and CPI to Mango\\n\\nMango is not Anchor friendly, seems normal as the project is big and complex, and has been started from before Anchor. Also they probably don‚Äôt want to rely on a WIP framework.\\n\\nMost of the ‚Äúissues‚Äù here, are not really issues‚Ä¶ Just sugar and QoL stuff, subjective. \\n  \\n First issues is that you cannot use the idiomatic Anchor stuff like `Program<‚Äòinfo, Mango>` as mango did not have a declare_id required by Anchor. \\n  \\n Did a smol PR about it : \\n\\n[https://github.com/blockworks-foundation/mango-v3/pull/67](https://github.com/blockworks-foundation/mango-v3/pull/67)\\n\\n_____\\n\\n### Creating and initialising the MangoAccount\\n\\nThe next thing is that the `mango::state::MangoAccount` has a span of 28912 bytes if I‚Äôm not mistaken, preventing you to use the Anchor IDL account creation : \\n \\n\\n```\\n    #[account(\\n        init,\\n        seeds = [MANGO_SEED, mint.key().as_ref()],\\n        bump,\\n        payer = authority,\\n        owner = mango::mango_program::Mango::id(), // This is my custom stuff added with the PR above\\n        space = MANGO_ACCOUNT_SPAN, // 28912\\n    )]\\n    pub mango_account: AccountInfo<'info>,\\n```\\n\\n \\n Results in this error : \\n `Account data size realloc limited to 10240 in inner instructions`\\n\\nSo I fall back on the associated instruction init as follows :\\n\\n```\\n// In the Solana program, signer cause it's required later for the CPI initialization \\n#[account(mut, signer)] // CPI initialization\\npub mango_account: AccountInfo<'info>,\\n```\\n\\n \\n and in the typescript code\\n\\n```\\n   const mangoAccount = new Keypair(); \\n   const createMangoAccountIx = SystemProgram.createAccount({\\n      programId: MANGO_PROGRAM_ID,\\n      space: MangoAccountLayout.span,\\n      lamports: await getRentExemption(MangoAccountLayout.span),\\n      fromPubkey: admin.wallet.publicKey,\\n      newAccountPubkey: mangoAccount.publicKey, \\n    });\\n    // Then call your program instruction and don't forget the IX + the mangoAccount.secretKey in the signers.\\n    // instructions: [createMangoAccountIx],\\n    // signers: [mangoAccount.secretKey],\\n```\\n\\n_____\\n\\n### Depositing fund to the account\\n\\n \\n  \\n  \\n  \\n  \\n  \\n \\n\\nI‚Äôll update this article with the next part as I advance.\",\"timestamp\":1634264487,\"title\":\"Mango integration, localnet testing and Anchor CPI to non Anchor programs\"},\"digest\":\"pgYpSIV2-0vZt1VZmcWlRxxGEuGV0IHDSfkDpIZnSEk\",\"authorship\":{\"contributor\":\"0x9fEcc73Da3f8bd2aC436547a72f8Dd32326D90dc\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"HQpc6cr_wO6ZJUUn7LGOZOxDRpLH9v-NAZv2XrK8l5c\\\",\\\"y\\\":\\\"U68BcmwUO82Vc9LlAElRF0NNFpvjFv2BYxZ95bBzZWc\\\"}\",\"signature\":\"DnnKTACt2O-asOHvtAcKj6IoJgcevfeEdDSW_QPOikxBF30N9cuORHmXbtSImYuZ0uygE_YukZTBHuWoU-FSNA\",\"signingKeySignature\":\"0x9b50f510baa6a60bd0e4375cb0e2184df3409d2356250380a1f7907fb34f3d96578218d3043a45a235ef283863f218d142f8ac090191411bcfb1333043f980a41b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"HQpc6cr_wO6ZJUUn7LGOZOxDRpLH9v-NAZv2XrK8l5c\\\",\\\"y\\\":\\\"U68BcmwUO82Vc9LlAElRF0NNFpvjFv2BYxZ95bBzZWc\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"u05KU4oE4tnlI4Z5Yj-TAQSq8bgZuu4Mv2s3wblpkTs\"}"