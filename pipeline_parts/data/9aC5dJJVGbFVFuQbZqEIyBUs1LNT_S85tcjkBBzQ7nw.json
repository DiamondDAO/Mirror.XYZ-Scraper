"{\"content\":{\"body\":\"你好，我是币同学。这是我分享学习的第163天，每天学习进步一点点。\\n\\n关键词：**北大肖臻老师的公开课，关于以太坊的挖矿算法。**\\n\\n \\n\\n1\\\\. 比特币系统中使用的挖矿算法,挖矿这一过程，虽然并没有创造什么实际价值，但挖矿本身维持了比特币系统的稳定。【Block chain is secured by mining】\\n\\n对于基于区块链证明的区块链系统来说，**挖矿是保障区块链安全的重要手段**。\\n\\n总体来说，比特币系统中的挖矿算法较为成功，并未发现大的漏洞。\\n\\n \\n\\n当然，比特币系统的挖矿算法也存在一定问题，其中最为突出的就是导致了挖矿设备的专业化，普通计算机用户难以参与进去，导致了挖矿中心化的局面产生，而这与“去中心化”这一理念相违背。 【中本聪最早期的论文，one cpu one vote】\\n\\n \\n\\n所以，在比特币之后包括以太坊在内的许多加密货币针对该缺陷进行改进，希图做到ASIC Resistance(抗拒ASIC专用矿机)。\\n\\n由于ASIC芯片相对普通计算机来说，算力强但访问内存性能上没有多大优势。因此常用的方法为Memory Hard Mining Puzzle，即增加对内存访问的需求。\\n\\n \\n\\n2\\\\. LiteCoin(莱特币)\\n\\n莱特币曾一度成为市值仅次于比特币的第二大加密货币，其基本设计大体上和比特币一致，但针对挖矿Scrypt进行了修改。\\n\\n莱特币的puzzle基于Scrypt。Scrypt为一个对内存性能要求较高的哈希函数，之前多用于计算机安全密码学领域。\\n\\n \\n\\n莱特币挖矿算法基本思想\\n\\n2\\\\.1设置一个很大的数组，按照顺序填充伪随机数。\\n\\n因为哈希函数的输出我们并不能提前预料，所以看上去就像是一大堆随机的数据，因此称其为“**伪随机数**”。\\n\\n \\n\\nSeed为种子节点，通过Seed进行一些运算获得第一个数，之后每个数字都是通过前一个位置的值取哈希得到的。\\n\\n可以看到，这样的数组中取值存在前后依赖关系。\\n\\n![](https://images.mirror-media.xyz/publication-images/vGjzG4p4OdUC60Rt0qGME.png?height=112&width=547)\\n\\n2\\\\.2在需要求解Puzzle的时候，按照伪随机顺序，从数组中读取一些数，每次读取位置与前一个数相关。\\n\\n \\n\\n伪随机数的好处：如果数组足够大，对于挖矿矿工来说，必须保存该数组以便查询，否则每次不仅计算位置，还要根据Seed计算整个数组数据，才能查询到对应位置的数据。这对于矿工来说，计算复杂度大幅度上升。\\n\\n当然，矿工可以选择只保存一部分数据，例如：只保存奇数位置数据，偶数位置需要时再根据前一个奇数位置数据计算即可，从而对内存空间大小减少了一半(计算复杂度提高一点，但内存减少一半)————time-memory trade off。\\n\\n【核心思想：挖矿不能仅仅进行运算，增加其对内存的访问，从而实现对ASIC芯片不友好，普通计算机都可参与。】\\n\\n这个设计有问题吗？\\n\\n看似蛮不错的，使得ASIC矿机挖矿变得不友好，但该方法对Puzzle验证并不是很友好。想要验证该Puzzle，也需要存储该数组，因此对于轻节点来说，并不友好(系统中绝大多数节点为轻节点)。\\n\\n因此，莱特币真正应用来说，数组大小不敢设置太大。\\n\\n例如：对于计算机而言，1G毫无压力，而对于手机APP来说，1G占据空间就过大了。\\n\\n所以，实际中，莱特币系统设计的数组大小仅仅**128K**大小。\\n\\n起初莱特币发行时，不仅希望能够**抗拒ASIC**，还希望能**抗拒GPU**。但实际中，后来慢慢出现了GPU挖矿，再后来，ASIC芯片挖矿也出现了。实际应用中，莱特币的设计并未起到预期作用，也就是说，128k对于ASIC Resistance来说过小了。\\n\\n莱特币的这一设计是好事还是坏事？ 从其并未起到预期作用来看，当然是一件坏事，但换个角度来思考，早期通过宣传这一设计目标，有效吸引了大批矿工参与，解决了莱特币“能启动”问题，因此目前莱特币仍然是一个较为主流的加密货币。 \\n\\n此外，莱特币和比特币另一区别为出块时间，莱特币为2.5分钟，为比特币的1/4。除了这些不同外，这两种货币基本一样。\\n\\n3\\\\.以太坊\\n\\n以太坊与莱特币都是Memory Hard Mining Puzzle，但具体设计上与莱特币不同。\\n\\n以太坊挖矿算法基本思想： \\n 以太坊中，设计了两个数据集，一大一小。小的为16MB的cache，大的数据集为1G的dataset(DAG)。其关系为，1G的数据集是通过16MB数据集生成而来的。\\n\\n为何要设计一大一小两个数据集？\\n\\n为了便于进行验证，轻节点保存16MB的Cache进行验证即可，而矿工为了挖矿更快，减少重复计算则需要存储1GB大小的大数据集。\\n\\n16MB的小Cache数据生成方式与莱特币中生成方式较为类似\\n\\n1\\\\.通过Seed进行一些运算获得第一个数，之后每个数字都是通过前一个位置的值取哈希获得的。\\n\\n2\\\\.(不同)：\\n\\n莱特币：直接从数组中按照伪随机顺序读取一些数据进行运算。\\n\\n以太坊：先生成一个更大的数组(注：以太坊中这两个数组大小并不固定，因为考虑到计算机内存不断增大，因此该两个数组需要定期增大)。\\n\\n![](https://images.mirror-media.xyz/publication-images/fYxlNjCEyYW_qSCZITHQR.png?height=219&width=473)\\n\\n大的DAG生成方式：\\n\\n大的数组中每个元素，都是从小数组中按照伪随机顺序读取一些元素，方法同莱特币中求解Puzzle的过程是类似的。\\n\\n如第一次读取A位置数据，对当前哈希值更新迭代算出下一次读取位置B，再进行哈希值更新迭代计算出C位置元素。\\n\\n如此来回迭代读取256次，最终算出一个数作为DAG中第一个元素，如此类推，DAG中每个元素生成方式都依次类推。\\n\\n![](https://images.mirror-media.xyz/publication-images/-g1I01mZqoZcFEp-89mPA.png?height=143&width=836)\\n\\n轻节点只保存小的cache，验证时进行计算即可。但对于挖矿来说，如果这样则大部分算力都花费在了通过Cache计算DAG上面，因此，其必须保存大的数组DAG以便于更快挖矿。\\n\\n \\n\\n以太坊挖矿过程： 根据区块块头（block header）和其中的Nonce值计算一个初始哈希，根据其映射到某个初始位置A，读取A位置的数及其相邻的后一个位置A’上的数,根据该两个数进行运算，算得下一个位置B，读取B和B’位置上的数，依次类推，迭代读取64次，共读取128个数。\\n\\n![](https://images.mirror-media.xyz/publication-images/wfJ2ps8Ek-XXO5KiFgZI7.png?height=239&width=844)\\n\\n最后，计算出一个哈希值与挖矿难度目标阈值比较，若不符合就重新更换Nonce，重复以上操作直到最终计算哈希值符合难度要求或当前区块已经被挖出。\\n\\n \\n\\n4\\\\. 以太坊挖矿到目前为止，主要还是以GPU为主，用ASIC矿机的很少。\\n\\n矿工挖矿需要1G的内存，莱特币是128KB。\\n\\n以太坊：POW（工作量证明）→POS（proof of stake）（权益证明：按照所占的权益进行投票，来形成共识，不挖矿的，类似于股份制公司按照股票多少进行投票。） \\n\\n以太坊采用的是预挖矿（pre-mining）的过程：并不是说真的去挖矿，而是在当初发行货币的时候，预留一部分的货币给以太坊的开发者。\\n\\n今天就学习到这里，明天见。\",\"timestamp\":1642147605,\"title\":\"163期【币圈人物】 北大肖臻以太坊的挖矿算法\"},\"digest\":\"fuyBkrrWdjSsvDW-uEs4TPYORtJO4SBktbCLc-yEabE\",\"authorship\":{\"contributor\":\"0xfcd43340B9048700EcEF52A96A11e11A98Fc1eda\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"R2dzw4DiAawOj6hMZdSu0y-Hubf0NXhDr6txd_bioVY\\\",\\\"y\\\":\\\"9ACvq-WZ1SM8lAD2wShPTYjOm79xnwSHf2WNxZMKDIM\\\"}\",\"signature\":\"X3NVv6zbVPpPFAHnaeDhzYIvYZB-yalNuVtv3xpVDW7CwDZs0NgOF21oJ27hRtCWVwHByX0_zmjCs--maESzPQ\",\"signingKeySignature\":\"0x63a67dec9b322d139b02f6d81b4f86f1e368f2c74f5a0e840e0153f9bc0dce1f6e5b36419bfb259f691202c52296e9c4b8c165097800bde29c46aa6b96e36f351b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"R2dzw4DiAawOj6hMZdSu0y-Hubf0NXhDr6txd_bioVY\\\",\\\"y\\\":\\\"9ACvq-WZ1SM8lAD2wShPTYjOm79xnwSHf2WNxZMKDIM\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"fuyBkrrWdjSsvDW-uEs4TPYORtJO4SBktbCLc-yEabE\"}"