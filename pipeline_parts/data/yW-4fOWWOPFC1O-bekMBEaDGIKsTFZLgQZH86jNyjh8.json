"{\"content\":{\"body\":\"　　账本\\n\\n　　什么是账本\\n\\n　　提示：比特币，只是一种通过运用区块链技术对电子现金（数字货币）系统的实现。\\n\\n　　2008年11月1日，本聪发表论文日描述了一种全新的电子现金（数字货币）系统——比特币。去实现一个账本。简单的说，电子现金（数字货币）系统就是账本。\\n\\n　　实现账本的四大难点\\n\\n　　我们知道，人民币、美元这样的货币都在我们的国家机器背书，才被大众接受，并且在日常的生产生活中流通的。，比特币是没有任何国家或机构自己背书的。的，中本聪坚持的挑战就是如何利用技术手段给其发布的比特币进行背书。\\n\\n　　中本聪要实现比特币，或者说要\\\\*\\\\*实现一个电子现金系统（站在技术人员的角度，即要实现一个账本），需要解决以下四个难题：\\\\*\\\\*\\n\\n　　账本不能被篡改。\\n\\n　　账本不能丢失或损坏。\\n\\n　　证明你是你。\\n\\n　　同一份钱不能花出去2次或多次（即：不能有双花问题）。\\n\\n　　双花问题说明：对于一个硬币货币，当纸币从A到B时，整个交易就结束了；但是数字货币却有很多不同，假A有10个比特币，他选择全部复制给B，当网络交易在网络中执行但尚未确认完成时，他选择再给 C 转 10 个比特币，对于系统来说，这些笔交易都是合法的，可以通过验证广播到网络中，但实际上，这就是有问题的，这就是双花问题（双花攻击）。\\n\\n　　分布式账本解决难点1、难点2\\n\\n　　就是简单的，同时也可以同时使用本本，：账本让多个人记账，也就是本本保留一些备用。这样就不用账本丢失或损坏的问题，也不会再轻易被篡改账本，因为账本在多地租借，任何人能直接修改的本地只是的账本，在其他账本保存方不同意的情况下，改不了整体的账本，同意它的修改别人不承认。\\n\\n　　密码学解决难点3\\n\\n　　这句话的本意是你的账户余额是一个才管理，一个可以选择交易或其他交易，但是在做这些的时候必须，一个证明这个账户是他的。各国，采用密码学的知识，设计数字签名就可以做到。数字签名的细节要求有两点：\\n\\n　　第一，一个签名过的交易A不能抵赖，其他人可以验证\\n\\n　　第二，其他人不能通过签名后的交易模仿造出其他人的签名交易\\n\\n　　部分链数据结构解决难点 4\\n\\n　　我们常说的区块链技术是泛指数字货币技术，这里的区块链数据结构指的是具体的存储数据结构。\\n\\n　　注：指因为到2021-08-08，区块链技术仍然是已知的相对可靠的数字货币技术实现方式，所以，比特币区块链技术来代数字货币技术了，它包括了密码学技术、网络、数据结构等等。\\n\\n　　中本聪双花解决问题的简单，就是设计一种这种强办法，就是要实现一个数据结构（区块链结构）。攻击中的两个或多次交易在同一个块中时，该块块会被安全出不合法，最终笔交易中可能有一个被打包到块中。块在之前产生的块的挂链，这样就形成了一个表结构。问题，系统（在考虑前面的交易额的基础下）对当前的交易进行余额，若余额不足，则系统会认为当前交易为交易额。\\n\\n　　这些不停的收集交易打包成块，然后挂在之前的上形成的结构，被块的块链，后来大家把它统一叫作块链（区块链）。\\n\\n　　哈希函数(SHA-256)\\n\\n　　hash函数的特性\\n\\n　　SHA-256算法的哈希函数：y=hash(x)，对于不同的输入x，都可以得到一个固定长度（256bit）的二进制的y值。\\n\\n　　hash函数的特性：\\n\\n　　防攻击\\n\\n　　不是说哈希是绝对防攻击的，只是说必须的极低，所以认为h可以防的。\\n\\n　　举例：当hash得到的结果是22个字符长度时，300万亿次计算里，发生的演讲时100亿分之一。 256 的哈希值实际上是一个 64 位的字符串。因此采用 SHA-256 算法的哈希函数，我们认为它在这个记忆中是防鼠的。\\n\\n　　信息隐藏\\n\\n　　y=hash(x)中，你可以通过x得到y，但是你很难通过y得到x。\\n\\n　　记：在一段链网络中，每个用户在申请账户的时候都有一个了解和了解，用什么方法处理你这个账户的管理权，使用方法是通过不同的轮廓算法secp256k1经常手的比特币地址就是通过公钥经过2次哈希得到的一个字符串，也很好地保护了我们这样的信息。\\n\\n　　易出难题\\n\\n　　hash函数在一个区块链结构时的作用\\n\\n　　提示：在区块链领域所涉及的哈希函数是指特定的SHA-25算法支持的哈希函数。\\n\\n　　前文中我们讲述了一个区块链数据结构是一个区块的链表，也有一个区块链的形成是通过后一个区块挂到前一个区块块上形成的，但是怎么挂的却没有提，实际上，挂了这个动作是通过哈希函数实现的。\\n\\n　　每一个部分的这个都需要填写hash值，生成hash值的输入包括：\\n\\n　　部分编号\\n\\n　　数据（一条或多条交易信息）\\n\\n　　前一个区块的哈希值\\n\\n　　一个随机数\\n\\n　　P2P网络简介\\n\\n　　P2P网络，即为点对点网络。\\n\\n　　P2P网络不是来自Napster，为用户提供免费MP3下载的一个网络服务。Napster服务器上不存储MP3文件，但它有一个服务器，来记录各个用户拥有的MP3歌单，这样用户有需求下载时，可以直接找到对应的主机建立连接并下载文件。\\n\\n　　中本聪在发明比特币的时候，也是站在人的上面。每个新网络的节点，都通过节点加入了节点的DNS种子查询网络IP列表，部分衍生节点返回了一组可靠的前比特币节点IP，部分种子节点返回动态的比特币节点IP集。新节点选择8个节点进行连接，并相互比对，同步区块链数据。节点发送交易广播，同时继续向令居广播，直至全网均收到交易信息。\\n\\n　　思考算法\\n\\n　　什么是算法\\n\\n　　区块链系统采用去中心化的设计，网络节点分散且相互独立，因此由不同的节点组成的系统之间必须依赖一个系统来维护系统的数据节点，并同时提供区块链服务的节点，以及这个制度的需要依赖特定的方法和规则，即由取得一个谁的打包权（或称记账本权），并获取该地区的奖励或者谁来制定，让谁成为作恶者，让他会受到什么样的惩罚，惩罚方法和规则可能会发生。\\n\\n　　常用的算法\\n\\n　　PoW：工作量证明（Proof of Work）算法\\n\\n　　PoS：权益证明（Proof of Stake）算法\\n\\n　　DPoS：股份授权证明（Delegated Proof of Stake）算法\\n\\n　　PBFT：实用拜占庭容错（Practical Byzantine Fault Tolerance）算法\\n\\n　　RAFT：对象节点\\n\\n　　UTXO模型\\n\\n　　UTXO即Unspent Transaction Outpou，未花费的交易输出。\\n\\n　　比特币系统实际上并不存在“表面”，而“地址”。这个地址就是前文所说的，用知识2次哈希得到计算的地址。才可以动用这个地址里的“余额”。\\n\\n　　一个人的比特币余额其实就是看他所掌握的地址里面包含有多少比特币，而计算这个比特币数量的方式或者说它的数据结构就叫UTXO。\",\"timestamp\":1636031036,\"title\":\"区块链系统的基本原理\"},\"digest\":\"SSBnNoCv6AFKZXLP2c0SjRaeJwZIoexcEOciAlC2Gu0\",\"authorship\":{\"contributor\":\"0x00d278f3163Bf68E67b2Eb05Ef209E6F28bc7924\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"I-c_06Mf_phNVyc9TKEMijTINiQrFhphTA73gfePP5Y\\\",\\\"y\\\":\\\"-dA0-NRGctemyYkQyiCbnIJDx1mP_tkmjKQHfZpIFEA\\\"}\",\"signature\":\"9lWeEtPSJIq8y9kiQvhAynSwrqZinNEbVgZ-mddDrFEFj54rUbb6rBJz_fMD4B_fJBXzkqB6mlgl0hlWF3RBmw\",\"signingKeySignature\":\"0x2313d9d46da21f273a4763e189fc5d3e3679ed64626af9ef2149df3fbc1a7b795bfbc45eae25aaba770c1c140aaa31c8a9224d6c8b41982b899000b40cb3e9c01b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"I-c_06Mf_phNVyc9TKEMijTINiQrFhphTA73gfePP5Y\\\",\\\"y\\\":\\\"-dA0-NRGctemyYkQyiCbnIJDx1mP_tkmjKQHfZpIFEA\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"SSBnNoCv6AFKZXLP2c0SjRaeJwZIoexcEOciAlC2Gu0\"}"