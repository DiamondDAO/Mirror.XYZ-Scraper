"{\"content\":{\"body\":\"```\\n```\\n\\n![](https://images.mirror-media.xyz/publication-images/AiKAZeJIKgeX2DHinh6QB.png?height=546&width=960)\\n\\n \\n In order to use the Mina main network or participate in the test network, you first need to generate a key pair, which consists of a public key and a private key. Currently, two key pair generation tools are supported: mina-generate-keypair and ledger-app-mina. We also have a tool to verify that your private key was created correctly.\\n\\n\\n\\nNote that you may want to generate multiple key pairs. For example, if you want to run a block producer in the safest way, you will need to generate hot and cold wallets at the same time.\\n\\n\\n\\n\\n\\nmethod\\n\\n\\n\\nmina-generate-keypair\\n\\nWe have created a simple command line utility and called it mina-generate-keypair. This is the easiest method, and you can find instructions below.\\n\\n\\n\\nLedger hardware wallet\\n\\nYou can use your Ledger Nano S hardware wallet to safely store your Mina private keys. We are conducting an independent security audit, no loopholes have been found so far, and the development work is almost complete. Please refer to our ledger-app-mina documentation to start using this tool.\\n\\n \\n warn\\n\\nNever give out your private keys and make sure they are kept properly. If you lose your private key, or a malicious participant gains access to your private key, then you will lose access to your account and you will lose the funds in your account. Please use your public key, Mina will never ask for your private key.\\n\\n\\n\\n\\n\\nUse mina-generate-keypair\\n\\n\\n\\nTo simplify the process of creating a key pair, we created a simple command line utility called mina-generate-keypair. The mina-generate-Keypair tool is easy to use and you can create your own key pair to start participating in the Mina network. Please refer to the content below and learn how to install and use the key on your local system.\\n\\n\\n\\nInstall\\n\\n\\n\\nWe provide support for several different operating systems for the mina-generate-keypair tool. Please follow the instructions below to install the tool on your system.\\n\\n\\n\\nmacOS\\n\\nIf you are using macOS, install Docker and follow the basic Docker instructions below.\\n\\n\\n\\nUbuntu 18.04 / Debian 9\\n\\nAfter adding the Mina repo, you can simply run the following command.\\n\\nsudo apt-get install mina-generate-keypair=0.2.12-718eba4\\nCheck whether the keygen tool is installed correctly by running mina-generate-keypair -version. The output should be Commit \\\\[DIRTY\\\\]718eba4826794f83d51c0d8dcf538e78b0259528 on branch HEAD. \\n  \\n \\n\\nWindows / other platforms\\n\\nInstall Docker and follow the instructions for Docker in step 3b below.\\n\\nuse\\n\\nCreating a key pair is simple and can be completed in just a few steps.\\n\\n1\\\\.First, make sure that there is a folder in your system where you can store the key file. We recommend using the \\\\~/keys folder.\\n\\nmkdir \\\\~/keys\\n\\n2\\\\.Next, make sure to set the permissions of the folder correctly, which will prevent unwanted processes from accessing these files.\\n\\nchmod 700 \\\\~/keys\\n\\n3\\\\.Use step 3a on Debian/Ubuntu or step 3b on Docker to generate the key.\\n\\n```\\n3a. In Ubuntu/Debian: Use the mina-generate-keypair command to generate the key. When prompted, enter the password used to protect this key. If set, the tool will use the password from the CODA_PRIVKEY_PASS environment variable instead of prompting. Please don't forget this password.\\n\\nmina-generate-keypair -privkey-path ~/keys/my-wallet\\n\\n\\n3b. In Docker on Windows/MacOS/Linux: use minaprotocol/generate-keypair docker image to generate keys. When prompted, enter the password used to protect this key. Please don't forget this password.\\n\\ncd ~\\ndocker run --interactive --tty --rm --volume $(pwd)/keys:/keys minaprotocol/generate-keypair:0.2.12-718eba4 -privkey-path /keys/my-wallet\\nThis will create two files on your system containing the encrypted private key ~/keys/my-wallet and the pub~/keys/my-wallet containing the public key in clear text. Please store the private key file and password in a safe place, such as a password manager.\\n```\\n\\n```\\n4. Finally, make sure that the permissions of the private key file are set correctly, which will prevent unwanted processes from accessing it.\\n\\nchmod 600 ~/keys/my-wallet\\n\\n\\n\\n\\nVerify your private key\\n\\n\\n\\nNow you have created the key-you need to verify that it is valid. It is sufficient to verify whether the transaction can be signed. You can use the mina-validate-keypair tool to verify.\\n\\n\\n\\nUnder Linux system, execute the following command:\\n\\nmina-validate-keypair -privkey-path <path-to-the-private-key-file>\\n\\n\\nIf using Docker, execute the following command:\\n\\ndocker run --interactive --tty --rm --entrypoint=mina-validate-keypair --volume $(pwd)/keys:/keys minaprotocol/generate-keypair:0.2.12-718eba4 -privkey-path /keys/ my-wallet\\n\\n\\n\\n\\nNext step\\n\\n\\n\\nNow that we have created a key pair, we can finally connect to the network or share your public key.\\n```\\n\\n \\n \",\"timestamp\":1639317054,\"title\":\"Mina Docsï½œGenerate a key pair\"},\"digest\":\"bcJqBhGX7c3p7NzS0VW7XsQNCaEF2H4OImeZMno9yRY\",\"authorship\":{\"contributor\":\"0xe22cbcAA0324DfA1d83cB939239e11C306c9A03f\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"amBt_wohYAdH2f8eLZiUfK6TO18ka0eiE2VlhKy_Z78\\\",\\\"y\\\":\\\"SgtL63YeKkPZ2jOqF07SXB5nvjXiyP2cXFDzht1NSIA\\\"}\",\"signature\":\"ThM1SsPHNkb_f7vlmtiP0l6gtlvd-C2csVB90kvcvW3P41ifjIPTHVVZkQ55r6PS9dq_lbHkH6YNulofOWq0hg\",\"signingKeySignature\":\"0x85189da7075d676c0a7629bb286aca46d47a91aeaf831b635c915a2df22b359a33daaf630e6935327953a216f291885badc011d73e16af632d9d13e02fe1fd061c\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"amBt_wohYAdH2f8eLZiUfK6TO18ka0eiE2VlhKy_Z78\\\",\\\"y\\\":\\\"SgtL63YeKkPZ2jOqF07SXB5nvjXiyP2cXFDzht1NSIA\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"bcJqBhGX7c3p7NzS0VW7XsQNCaEF2H4OImeZMno9yRY\"}"