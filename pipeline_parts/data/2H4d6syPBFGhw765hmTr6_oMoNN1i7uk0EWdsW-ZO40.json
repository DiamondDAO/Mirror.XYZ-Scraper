"{\"content\":{\"body\":\"Thirdweb is one of the web3 startups that I am most excited about. Their platform is now in closed beta and everyone I know that has used it has loved it. In this post I cover what thirdweb does, why it is important, and what are some cool things that they can do in the future. It's a bit of a long read so feel free to skip around.\\n\\n![Thirdweb's early access NFT. It ran out very quickly.](https://images.mirror-media.xyz/publication-images/AkpLQwBJwRx9kivbul4zJ.png?height=612&width=795)\\n\\nI use some web3 specific terminology. If you are not familiar with what web3 is, I highly recommend listening to [this podcast episode](https://tim.blog/2021/10/28/chris-dixon-naval-ravikant/) or going through [this Twitter thread](https://twitter.com/cdixon/status/1442201621266534402?lang=en).\\n\\nLet’s dive in.\\n\\n## Abstractions all the way down\\n\\n**Abstracting away complexity is one of the most consistent trends in human history.** You don’t need to know what [differentials](https://en.wikipedia.org/wiki/Differential_(mechanical_device)) are, or even how engines work, to drive your car. This pattern is especially prevalent in the tech industry. Billions of people use the internet every day, a tiny percentage of which knows how a webpage appears after you enter a URL. You can be a power user- download files, upload videos, play games, and even build websites without really knowing what’s going on behind the scenes. All the compute, storage and networking complexities have been hidden away behind a simple web browser.\\n\\nThese abstractions also translate to building software.\\n\\n### The evolution of building AI models\\n\\nWhen I first got interested in machine learning (around 2015), basic object detection was quite tedious. Python had emerged as the language of choice for ML, and there were some Data Science libraries in place, but the overall experience of building a basic Deep Learning model was terrible.\\n\\n* You had to manually define the CNN's architecture. CNNs, ie. convolutional neural networks, are a type of neural network used in machine learning.\\n* You had to train the model and bear the compute costs\\n* You had to write functions for softmax, backpropagation, gradient descent, etc. which are building blocks for every CNN\\n* Since your data and compute resources were limited, your model's performance was usually suboptimal\\n\\n*PS. You can ignore the content in the long code snippets. They are only to illustrate number of lines of code as a proxy for effort/complexity..*\\n\\n![MNIST numeric digit classification, which is the hello world of computer vision, written in Python (with numpy and scipy). 221 lines of code.](https://images.mirror-media.xyz/publication-images/e5Fa7Q5Qff4yVIUiKjp29.png?height=8602&width=1970)\\n\\nSoon a project called Pytorch made all this much easier. Pytorch is an open-source machine learning framework that was developed and launched by Meta(then Facebook). **Code you had to copy-paste into each program was now available in the Pytorch library.** This greatly reduced the number of lines of code you had to write. Moreover, since the predefined functions were expertly written and followed best practices, building on Pytorch often resulted in better models. You still had to define and train your model, but the developer experience was much better.\\n\\n![MNIST numeric digit classification with Pytorch. 137 lines of code.](https://images.mirror-media.xyz/publication-images/h136LcJWQvh2G1WBlEpbH.png?height=5463&width=2000)\\n\\nPytorch then launched Pytorch Hub. This was a collection of SOTA(State of the Art) models in every category. These models came pre-trained. You could further finetune the model on your data, or use it as it is. **Suddenly everyone had access to world-class AI models.** [Fast.ai](http://fast.ai/) built a framework on top of Pytorch that made it extremely easy for anyone with basic ML knowledge to write deep learning applications. You no longer had to deal with tensors. Just specify some parameters, and fast.ai took care of the rest.\\n\\n![MNIST numeric digit classification with fast.ai. More than 10x reduction in the lines of code. ](https://images.mirror-media.xyz/publication-images/0a4JktllEDdzsNOkBpx5t.png?height=968&width=1522)\\n\\nAround the same time, cloud service providers started offering **AI as a Service**. You could now integrate AI into your application with almost no understanding of how it actually worked. For generic tasks, you simply needed to know what you wanted to accomplish and there was probably a service for it. All the heavy lifting could be outsourced.\\n\\n![](https://images.mirror-media.xyz/publication-images/t2mBzdFRhetG1ZCwbPoLd.png?height=872&width=840)\\n\\nAlong the way, complexity in AI got abstracted to the point where Google made **Teachable machine**, a **drag-and-drop builder** to create deep learning models.\\n\\n![](https://images.mirror-media.xyz/publication-images/51b84j1PY3uA92ICwi5mj.png?height=770&width=1622)\\n\\nThere is definitely nuance to this. With each level of abstraction you lose some flexibility as abstractions assume useful defaults. To finetune models well you need to understand their underlying architecture. Most of the work Data Science teams do is around getting good, clean data and not just building models. However, **there is no denying the massive unlock that abstracting complexity in AI has had**. Thanks to this democratization of AI, a cutting edge PhD research project from 2011 can be easily outperformed by a high school student in 2021.\\n\\n![Evolution of the developer experience in AI. Several other industries also follow similar patterns](https://images.mirror-media.xyz/publication-images/6evClxzOBHM9zNoK91ttw.png?height=531&width=563)\\n\\n**Looking at how the developer experience evolved in AI is a good way to build what's missing in web3.** Although they have significant differences, AI (like crypto) started out as a niche thing among computer nerds. Then for a few years, it completely engulfed the tech scene's imagination (similar to the crypto bull run of the past 2 years). AI has now reached a place where we are seeing very real use-cases implemented in products that we use every day. Today almost every popular consumer-facing app has AI components in it. A big reason for this is that the developer experience has become so much better. If you have an app that data flows through, you can probably do some AI stuff without too much extra effort.\\n\\n![It's still early days for AI but the ecosystem has matured a lot](https://images.mirror-media.xyz/publication-images/fGBbUAX4s35nQxpbC_DZd.png?height=1125&width=1224)\\n\\n## Web3 devs need better tools\\n\\nIt is common knowledge that the **developer experience in web3 kinda sucks right now**. Let's say you are a full-stack dev in web2 that sees the promise of web3 and wants to switch over. To get started, you first need to get comfortable with web3 concepts like wallets, gas fees, smart contracts and the overall [architecture of a web3 app](https://www.preethikasireddy.com/post/the-architecture-of-a-web-3-0-application). These are fair asks. You choose to build on Solana since it is cheap and fast. You then find out that to actually build something, you need to get comfortable with a whole new language called Rust. Rust is not a very welcoming language. You also have to navigate the intricacies of Solana's architecture([programs don't store state lol](https://docs.solana.com/developing/programming-model/accounts)). Since the space is so new, there aren't a lot of tutorials to help you out if you get stuck(although the community is very helpful). Many lose interest or give up during this long road to shipping a working product. Having high switching costs locks out a lot of talent.\\n\\nEthereum development has similar problems, although Solidity is much more welcoming to Javascript devs.\\n\\nThis is getting better very quickly. Web3.js was one of the first big upgrades. Armani Ferrante is hailed as a hero by the Solana community for having developed [Anchor](https://project-serum.github.io/anchor/getting-started/introduction.html), a framework for Solana development on Rust similar to Next.js for web development. Truffle and Hardhat have greatly improved the developer experience in Ethereum. Remix is an online IDE that lets you develop for [EVM ](https://coinmarketcap.com/alexandria/glossary/ethereum-virtual-machine-evm)without even installing anything. However, there is still a lot left to be desired. **Smart contracts are at the core of web3. Integrating smart contracts into your application still often requires getting your hands dirty with Solidity/Rust.**\\n\\n## Thirdweb\\n\\nSimply put, thirdweb makes it **easy to build for web3.** They do this by providing smart contracts, [SDKs](https://www.redhat.com/en/topics/cloud-native-apps/what-is-SDK) and UI components that make it easy to handle the blockchain stuff so that you as an app developer can **focus on what is important- utility and usability.**\\n\\n![](https://images.mirror-media.xyz/publication-images/XUkOj-zktZt4OqkVzsyOM.png?height=1200&width=962)\\n\\n### Product\\n\\n**Current functionality**\\n\\nThirdweb provides **smart contract templates** for a wide variety of use cases. You just need to fill in your details and the smart contract will be deployed from your wallet. You have full ownership over it.\\n\\n![](https://images.mirror-media.xyz/publication-images/WDFsQwyKW5TCgVHcYZBTY.png?height=767&width=1458)\\n\\nThe smart contract templates can be modified using code or through the dashboard itself.\\n\\n![Customizing smart contracts through the dashboard](https://images.mirror-media.xyz/publication-images/05eho82yjCePmtXtjGxMP.png?height=707&width=1136)\\n\\n![Customizing smart contracts through the SDK](https://images.mirror-media.xyz/publication-images/OrCBVhODipwKsHWlSmMIq.png?height=1304&width=1396)\\n\\nThere’s no Solidity involved. Since the smart contract is deployed from your wallet address, you have full ownership over it(ie. admin privileges). Once your contract has been deployed, you can use the thirdweb SDK to integrate it into your app.\\n\\n**Ease of use**\\n\\nIf you know the basics of web3, you should be able to navigate through the thirdweb dashboard fairly easily, even if you don’t have a background in coding/computer science. I highly recommend trying to create a new token by yourself. Seeing $YOURTOKEN show up in your Metamask is a great first aha moment. You just need to **click through a couple of steps and suddenly you have deployed a smart contract** that will live forever on the blockchain! You can find a tutorial on how to do that [here](https://mirror.xyz/nonem.eth/HGL6XOknXUyENNxABa_5S-6zBXBEf5iYGDoC-l-tht4).\\n\\n**Pricing**\\n\\nThirdweb does a great job of aligning incentives. **They make money only when you make money.**\\n\\n![](https://images.mirror-media.xyz/publication-images/m8gr_HFYdbTWtslYUWYP-.png?height=580&width=1197)\\n\\nThirdweb has currently only monetized their NFT smart contracts. Smart contracts are free to create and deploy(you have to pay the gas costs). If you aren’t taking royalties from your project it is free forever. If your project has royalties, thirdweb takes a flat **5% cut.** The SDK is fully [open source.](https://github.com/nftlabs/nftlabs-sdk-ts)\\n\\n![Thirdweb's NFT monetization approach is very similar to that used by payment gateways like Stripe](https://images.mirror-media.xyz/publication-images/RGCGSbENlXa8ak0gRoou9.png?height=724&width=688)\\n\\n**Potential future functionality**\\n\\nThirdweb chose NFTs as their [wedge](https://www.lennysnewsletter.com/p/wedge). However, their mission statement is to make it easier to build web3 apps, making their [TAM](https://en.wikipedia.org/wiki/Total_addressable_market) pretty much all of web3. The problem space being this vast is a great opportunity, but it can also be confusing when deciding what to build. If thirdweb spreads itself too thin too fast it will be disrupted by others that are focused on a more specific problem statement. If it moves too slow someone else might choose a different wedge and capture market share.\\n\\n> To decide what features to build, thirdweb can assign a score based on how common the feature is and how complex it is to build without thirdweb.\\n>\\n> **impact = (frequency x loc)**\\n>\\n> **priority = impact/effort**\\n>\\n> *where frequency is the number of projects that currently exist that would benefit from this feature(as a proxy for reach), loc is the number of lines of code that will be reduced(as a proxy for complexity), and effort is the time (in weeks) it will take to build the feature. This is a modification of the [RICE](https://www.productplan.com/glossary/rice-scoring-model/) model. This formula works as a good starting point but should not be the only decision making factor.*\\n\\nAt least externally, it looks like thirdweb has product-market-fit for their existing NFT products. Everyone I know that has used it has loved it. Now, thirdweb can expand the breadth of their products while simultaneously diving deeper into NFTs. Going by impact, **DeFi** is the obvious choice. Some other areas thirdweb could potentially expand into are **DeSo**(Decentralized Social) and **DAOs**(Decentralized Autonomous Organizations).\\n\\nThirdweb has already rolled out some features for DAOs. Plug-and-play UI components for common web3 features could also be a nice addition.\\n\\n**Multichain maxi**\\n\\n![](https://images.mirror-media.xyz/publication-images/gxDOReaxk2tdWwZGeaOoS.png?height=316&width=1323)\\n\\nThirdweb takes a **blockchain-agnostic, write-once-run-anywhere approach to smart contracts.** Once you define your smart contract, you can easily deploy it to different chains without any extra effort. Thirdweb currently supports many EVM compatible chains and has plans to add support for more L1s soon.\\n\\n![Ask for cookies in the thirdweb Discord for a chance to play with the platform](https://images.mirror-media.xyz/publication-images/6-1B2u5kuzpnMTKSWrjTG.png?height=501&width=532)\\n\\n## Team and traction\\n\\nThirdweb started out as NFTlabs. It was started by [Steven Bartlett](https://en.wikipedia.org/wiki/Steven_Bartlett_(businessman)) and [Furqan Rydhan](https://furqan.sh/) in 2020 to make it easier to onboard developers, creators and entrepreneurs onto the world of NFTs\\n\\n![More on Steven and Furqan](https://images.mirror-media.xyz/publication-images/nWV71AXkf67oi-4ZwnUYp.png?height=748&width=725)\\n\\n![The founding team](https://images.mirror-media.xyz/publication-images/a13wXA4bbt0DRwgdubdfv.png?height=251&width=531)\\n\\nThirdweb recently closed a $5M round. They raised it from individual creators, operators, and investors as opposed to the VC route that most startups take. They do not have a token yet.\\n\\n![Lot of big names in their (seed?) round. Mark Cuban is also an investor.](https://images.mirror-media.xyz/publication-images/kqzo5V-qQJUM16U_Ou1tM.png?height=325&width=949)\\n\\nOver 500 unique projects have already integrated the thirdweb SDK. Thirdweb has also built a vibrant community around their products. Their Discord has over 13,300 members and is quite active. They have over 18,400 followers on Twitter. They were [Product Hunt’s Product of the Month for December 2021.](https://www.producthunt.com/posts/thirdweb)\\n\\nOne of the coolest things about thirdweb is their growth strategy. They have partnered with [Buildspace](https://buildspace.so/) for a great course on how to launch a DAO. Buildspace is the most popular onramp for web2 devs into web3. As these devs join companies or start web3 projects of their own, they will probably use thirdweb due to familiarity and ease of use. Thirdweb can then grow along with them. Stripe, AWS, and Slack used similar techniques early on; they convinced [YC](https://www.ycombinator.com/) companies to use their products and grew with them.\\n\\n## Opportunities\\n\\n**Smart Contracts as a Service** **(SCaaS?)**\\n\\nIntegrating a smart contract into your app is hard.\\n\\n* It needs to be written in a different language from the rest of your app. (Solidity if you are building on EVM, Rust if you are building on Solana, and Haskell for the legends building on Cardano).\\n* You need to be familiar with the intricacies of the blockchain you are building on.\\n* You need to make sure your smart contracts are secure before going into production\\n\\nThirdweb changes this by providing **modularized smart contract templates.** Creating, deploying and integrating smart contracts becomes super easy. Since thirdweb’s whole focus is on smart contracts, chances are that their smart contracts will be more efficient and have fewer chances of breaking than smart contracts that you write yourself.\\n\\nHowever, thirdweb has the opportunity to go one step further here. Auditing is one of the biggest time and money sinks in web3 development. Using unaudited smart contracts in your app is a major red flag. In its current form, when you use a thirdweb contract template you are deploying a fresh contract from your wallet. This means you will need to get it audited if you want customers to trust your app. If thirdweb deploys **reusable, audited smart contracts** that customers can easily integrate into their app, they would remove a major pain-point in web3 dev. You would not own the smart contract, but the added security you get would make the tradeoff worth it for many cases. [OpenZeppelin](https://openzeppelin.com/) does something similar.\\n\\n**Shorter feedback loops**\\n\\nSpeed is vital to startups. Shipping fast and iterating quickly is the most tried and true way of achieving product-market fit. You need to get your product in the hands of customers as soon as possible and tweak your product based on usage/feedback. Web2 dev has a lot of tools that help you go fast, but touching the blockchain currently slows you down quite a lot. There aren’t a lot of plug-and-play components available to quickly hack together an MVP. Thirdweb makes product development much faster by making it very easy to interface with the blockchain. The extra hurdle is removed, you can go as fast as any web2 startup.\\n\\n**Everything legos**\\n\\nOne of the big promises of web3 is composability. Since code and assets are open-source, you can glue different assets and protocols together and create unique experiences. This is why [DeFi is often referred to as money legos](https://defipulse.com/blog/what-is-defi/). Similarly, NFTs can be thought of as media [legos](https://en.wikipedia.org/wiki/Lego), and DAOs can be thought of as organization legos. Thirdweb can package protocols in a way that makes it easy for developers to combine and integrate.\\n\\n![](https://images.mirror-media.xyz/publication-images/rkzZl5NA_uTAwE624Mlz_.png?height=1099&width=1400)\\n\\n**Crypto stack**\\n\\nOne of the greatest Indian innovations in the past decade has been the India stack.\\n\\n![](https://images.mirror-media.xyz/publication-images/tqdBvSbcs4tR-VfXIq3n8.png?height=736&width=1399)\\n\\nIndia Stack is a set of APIs that abstract away a lot of complexity and bureaucracy. Processes that had a lot of red tape surrounding it could now be done by anyone with a couple of API calls. This led to a huge boom in Indian startups, particularly in fintech.\\n\\nIt is very likely that some sort of Crypto stack will eventually emerge for web3. These are a set of standards/protocols that govern core components like identity, ownership, etc. Thirdweb has the opportunity to be at the forefront of building tools that make it easy for apps to use them.\\n\\n![Parallels between India stack and crypto tools](https://images.mirror-media.xyz/publication-images/pBxiYIX8PeUucwQOLnUhu.png?height=663&width=563)\\n\\n**People want abstraction**\\n\\nCompanies that make stuff easier have been some of the biggest winners of the past two decades. XaaS (Platform, Infrastructure, Software, etc. as a Service ) is one of the most successful business models in web2.\\n\\n![](https://images.mirror-media.xyz/publication-images/CdgSVEXKFEnMy37zC0nTz.png?height=606&width=563)\\n\\nCapturing a portion of the revenue aligns incentives very well, greatly increasing the chances of good outcomes. Customers of thirdweb are incentivized to increase their revenue, which directly increases thirdweb’s revenue.\\n\\n![](https://images.mirror-media.xyz/publication-images/oaZ2RwF70nQSsZZIbgfjf.png?height=272&width=475)\\n\\nCompanies want to focus on their core value prop and will happily outsource ancillary tasks to external services. Thirdweb makes it easy to build non-core blockchain features. Moreover, thirdweb is very flexible. It takes care of the backend while giving you full control over the look and feel of your product.\\n\\n![](https://images.mirror-media.xyz/publication-images/c7OoVmHtr2wqwrk7B-bIL.png?height=508&width=736)\\n\\n## Risks\\n\\nAs with everything crypto and web3, there is always the looming threat of an extended **bear market**. Thirdweb needs projects to build on thirdweb. Thirdweb makes money only when projects make money. Bear markets typically see a huge downturn in the number and revenue of crypto projects, although the quality of the ecosystem tends to go up.\\n\\nThirdweb is susceptible to falling prey to the [law of leaky abstractions](https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/). Simply put, it means that sometimes abstractions fail. The **more layers of abstractions there are, the harder it is to diagnose the point of failure**. If a dev building on thirdweb gets an error it could be because of their code logic, some other library, thirdweb, or the blockchain they are building on. This can be reduced with good documentation and precise error messages.\\n\\n**Complexity is a moat** for thirdweb. The main reason why Stripe has very few competitors is because the payments industry is notoriously complex. There is a lot of red tape and negotiations involved. Stripe took a long time to build relationships with banks and payment providers. Companies that offer AI services have data and compute moats that make it hard for incumbents to compete. Crypto is a very level playing field. The open and permissionless nature of blockchains means that anyone can build on top of it. If the problems thirdweb is solving are not hard enough, others can quickly spin up similar products. This might even be in the form of open-source protocols funded by grants from the parent blockchain(such as [Metaplex](https://www.metaplex.com/)). That could start a race to zero fees, which is a very uncompetitive position for thirdweb.\\n\\nThere are also some companies doing similar things that could turn out to be **competitors**. Examples include [Moralis](https://moralis.io/) and [Biconomy](https://www.biconomy.io/).\\n\\n## Conclusion\\n\\nA lot of people call thirdweb the Stripe or Shopify for crypto([Shopify could very well be the Shopify for crypto](https://twitter.com/tobi/status/1471530952866340868), and [Stripe is building out a crypto team](https://twitter.com/gponcin/status/1447948308907913218)). It could actually be much bigger than that. Thirdweb could become the go-to framework for client-blockchain-client architectures. The easiest and most secure way for a dApp to interface with a blockchain could be through thirdweb.\\n\\n*Balaji alludes to something similar in his talk with Ryan Selkis from Messari. 12:06-15:12*\\n\\n[https://www.youtubetrimmer.com/view/?v=bUoY9z-BNbk&start=726&end=7354&loop=1](https://www.youtubetrimmer.com/view/?v=bUoY9z-BNbk&start=726&end=7354&loop=1)\\n\\nThirdweb has a solid team and a great first product. They have gotten a lot of love from the web3 community. They have bagged one of the most interesting domain names in web3. Bullish 🚀.\",\"timestamp\":1641066841,\"title\":\"Third web: tools to build the next evolution of the internet\"},\"digest\":\"k7KzN22cAkvS6yZAxnDfV5Cx_hv7CWsZuhJtKj0zoA4\",\"authorship\":{\"contributor\":\"0xDd3C87Cb8513812be41A8829b8af87577313484E\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"BmFGFmNtveytPBbs7ZYItH7PJ_JVeUHnW-zFc87-stU\\\",\\\"y\\\":\\\"v1sRjZwzb8h9Lfq4dO7s5zf8tn-ulwJ2f36tmLAXdEw\\\"}\",\"signature\":\"RiKIcCIr2Z6nA25RC83hrJQLaWJB0Q27ptWK-Nqa52ELfWD0k0FQL--zQKlyp13N5CyVsp7JzXutZe8YzDc3uQ\",\"signingKeySignature\":\"0xbf4bd43500ceb73ba820438ba4f93329213f60fa40d97295a05a55a05ade5fe92368a9fae1ab585fea05464b72e3795fa9b2b978401cd5aa7ad6358847082a501c\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"BmFGFmNtveytPBbs7ZYItH7PJ_JVeUHnW-zFc87-stU\\\",\\\"y\\\":\\\"v1sRjZwzb8h9Lfq4dO7s5zf8tn-ulwJ2f36tmLAXdEw\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"rqccWFmLyT49jXyf5U_YijiHT35lSZqrWKhG6gswpVA\"}"