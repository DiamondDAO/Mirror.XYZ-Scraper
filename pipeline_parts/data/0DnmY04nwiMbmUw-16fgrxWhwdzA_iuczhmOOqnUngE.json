"{\"content\":{\"body\":\"1、gRPC使用流程\\ngRPC使用流程如下：\\n（1）编写.proto描述文件。\\n（2）编译生成.pb.go文件。\\n（3）服务端实现约定的接口并提供服务。\\n（4）客户端按照约定调用方法请求服务。\\n\\n2、proto service定义\\n一个RPC service是一个能够通过参数和返回值进行远程调用的方法。由于gRPC通过将数据编码成Protocal Buffer来实现传输，因此，使用者可以通过Protocal Buffers interface definitioin language(IDL)来定义service method，同时将参数和返回值也定义成Protocal Buffer message类型。gRPC源码目录提供了多个使用示例，本文使用helloworld示例作为模板，[helloworld示例目录位于google.golang.org/grpc/examples/helloworld。](http://xn--helloworldgoogle-3k1zh2hw7az61sut9ettk.golang.org/grpc/examples/helloworld%E3%80%82)\\n在$GOPATH/src目录下创建helloworld目录，包含proto、server、client子目录。proto目录下创建helloworld.proto文件。\\nhelloworld.proto：\\n\\nsyntax = \\\"proto3\\\";\\n\\npackage helloworld;\\n\\n// The greeting service definition.\\nservice Greeter {\\n// Sends a greeting\\nrpc SayHello (HelloRequest) returns (HelloReply) {}\\n}\\n\\n// The request message containing the user's name.\\nmessage HelloRequest {\\nstring name = 1;\\n}\\n\\n// The response message containing the greetings message HelloReply { string message = 1;  helloworld.proto文件中定义了一个Greeter Service，服务包含一个SayHello方法，同时声明了HelloRequest和HelloReply消息结构用于请求和响应。客户端使用HelloRequest参数调用SayHello方法请求服务端，服务端响应HelloReply消息。\\n\\n3、生成Go代码\\n根据定义的RPC service，利用protocal buffer compiler，即protoc生成相应的服务器端和客户端的Go代码，生成的代码中包含了客户端能够进行RPC的方法以及服务器端需要进行实现的接口。\\n在$GOPATH/src/helloworld/proto目录下生成gRPC对应的Go代码的命令如下：\\nprotoc --go_out=plugins=grpc:. helloworld.proto\\n将在目录下生成helloworld.pb.go文件，内容如下：\\n\\n登录后复制\\n// Code generated by protoc-gen-go. DO NOT EDIT.\\n// source: helloworld.proto\\n\\npackage helloworld\\n\\nimport (\\ncontext \\\"context\\\"\\nfmt \\\"fmt\\\"\\nproto \\\"[github.com/golang/protobuf/proto](http://github.com/golang/protobuf/proto)\\\"\\ngrpc \\\"[google.golang.org/grpc](http://google.golang.org/grpc)\\\"\\nmath \\\"math\\\"\\n)\\n\\n// Reference imports to suppress errors if they are not otherwise used.\\nvar _ = proto.Marshal\\nvar _ = fmt.Errorf\\nvar _ = math.Inf\\n\\n// This is a compile-time assertion to ensure that this generated file\\n// is compatible with the proto package it is being compiled against.\\n// A compilation error at this line likely means your copy of the\\n// proto package needs to be updated.\\nconst _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package\\n\\n// The request message containing the user's name.\\ntype HelloRequest struct {\\nName                 string   `protobuf:\\\"bytes,1,opt,name=name,proto3\\\" json:\\\"name,omitempty\\\"`\\nXXX_NoUnkeyedLiteral struct{} `json:\\\"-\\\"`\\nXXX_unrecognized     \\\\[\\\\]byte   `json:\\\"-\\\"`\\nXXX_sizecache        int32    `json:\\\"-\\\"`\\n}\\n\\nfunc (m \\\\*HelloRequest) Reset()         { \\\\*m = HelloRequest{} }\\nfunc (m \\\\*HelloRequest) String() string { return proto.CompactTextString(m) }\\nfunc (\\\\*HelloRequest) ProtoMessage()    {}\\nfunc (\\\\*HelloRequest) Descriptor() (\\\\[\\\\]byte, \\\\[\\\\]int) {\\nreturn fileDescriptor_17b8c58d586b62f2, \\\\[\\\\]int{0}\\n}\\n\\nfunc (m \\\\*HelloRequest) XXX_Unmarshal(b \\\\[\\\\]byte) error {\\nreturn xxx_messageInfo_HelloRequest.Unmarshal(m, b)\\n}\\nfunc (m \\\\*HelloRequest) XXX_Marshal(b \\\\[\\\\]byte, deterministic bool) (\\\\[\\\\]byte, error) {\\nreturn xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)\\n}\\nfunc (m \\\\*HelloRequest) XXX_Merge(src proto.Message) {\\nxxx_messageInfo_HelloRequest.Merge(m, src)\\n}\\nfunc (m \\\\*HelloRequest) XXX_Size() int {\\nreturn xxx_messageInfo_HelloRequest.Size(m)\\n}\\nfunc (m \\\\*HelloRequest) XXX_DiscardUnknown() {\\nxxx_messageInfo_HelloRequest.DiscardUnknown(m)\\n}\\n\\nvar xxx_messageInfo_HelloRequest proto.InternalMessageInfo\\n\\nfunc (m \\\\*HelloRequest) GetName() string {\\nif m != nil {\\nreturn [m.Name](http://m.Name)\\n}\\nreturn \\\"\\\"\\n}\\n\\n// The response message containing the greetings\\ntype HelloReply struct {\\nMessage              string   `protobuf:\\\"bytes,1,opt,name=message,proto3\\\" json:\\\"message,omitempty\\\"`\\nXXX_NoUnkeyedLiteral struct{} `json:\\\"-\\\"`\\nXXX_unrecognized     \\\\[\\\\]byte   `json:\\\"-\\\"`\\nXXX_sizecache        int32    `json:\\\"-\\\"`\\n}\\n\\nfunc (m \\\\*HelloReply) Reset()         { \\\\*m = HelloReply{} }\\nfunc (m \\\\*HelloReply) String() string { return proto.CompactTextString(m) }\\nfunc (\\\\*HelloReply) ProtoMessage()    {}\\nfunc (\\\\*HelloReply) Descriptor() (\\\\[\\\\]byte, \\\\[\\\\]int) {\\nreturn fileDescriptor_17b8c58d586b62f2, \\\\[\\\\]int{1}\\n}\\n\\nfunc (m \\\\*HelloReply) XXX_Unmarshal(b \\\\[\\\\]byte) error {\\nreturn xxx_messageInfo_HelloReply.Unmarshal(m, b)\\n}\\nfunc (m \\\\*HelloReply) XXX_Marshal(b \\\\[\\\\]byte, deterministic bool) (\\\\[\\\\]byte, error) {\\nreturn xxx_messageInfo_HelloReply.Marshal(b, m, deterministic)\\n}\\nfunc (m \\\\*HelloReply) XXX_Merge(src proto.Message) {\\nxxx_messageInfo_HelloReply.Merge(m, src)\\n}\\nfunc (m \\\\*HelloReply) XXX_Size() int {\\nreturn xxx_messageInfo_HelloReply.Size(m)\\n}\\nfunc (m \\\\*HelloReply) XXX_DiscardUnknown() {\\nxxx_messageInfo_HelloReply.DiscardUnknown(m)\\n}\\n\\nvar xxx_messageInfo_HelloReply proto.InternalMessageInfo\\n\\nfunc (m \\\\*HelloReply) GetMessage() string {\\nif m != nil {\\nreturn m.Message\\n}\\nreturn \\\"\\\"\\n}\\n\\nfunc init() {\\nproto.RegisterType((\\\\*HelloRequest)(nil), \\\"helloworld.HelloRequest\\\")\\nproto.RegisterType((\\\\*HelloReply)(nil), \\\"helloworld.HelloReply\\\")\\n}\\n\\nfunc init() { proto.RegisterFile(\\\"helloworld.proto\\\", fileDescriptor_17b8c58d586b62f2) }\\n\\nvar fileDescriptor_17b8c58d586b62f2 = \\\\[\\\\]byte{\\n// 175 bytes of a gzipped FileDescriptorProto\\n0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc8, 0x48, 0xcd, 0xc9,\\n0xc9, 0x2f, 0xcf, 0x2f, 0xca, 0x49, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0x88,\\n0x28, 0x29, 0x71, 0xf1, 0x78, 0x80, 0x78, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x42,\\n0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x92,\\n0x1a, 0x17, 0x17, 0x54, 0x4d, 0x41, 0x4e, 0xa5, 0x90, 0x04, 0x17, 0x7b, 0x6e, 0x6a, 0x71, 0x71,\\n0x62, 0x3a, 0x4c, 0x11, 0x8c, 0x6b, 0xe4, 0xc9, 0xc5, 0xee, 0x5e, 0x94, 0x9a, 0x5a, 0x92, 0x5a,\\n0x24, 0x64, 0xc7, 0xc5, 0x11, 0x9c, 0x58, 0x09, 0xd6, 0x25, 0x24, 0xa1, 0x87, 0xe4, 0x02, 0x64,\\n0xcb, 0xa4, 0xc4, 0xb0, 0xc8, 0x14, 0xe4, 0x54, 0x2a, 0x31, 0x38, 0x19, 0x70, 0x49, 0x67, 0xe6,\\n0xeb, 0xa5, 0x17, 0x15, 0x24, 0xeb, 0xa5, 0x56, 0x24, 0xe6, 0x16, 0xe4, 0xa4, 0x16, 0x23, 0xa9,\\n0x75, 0xe2, 0x07, 0x2b, 0x0e, 0x07, 0xb1, 0x03, 0x40, 0x5e, 0x0a, 0x60, 0x4c, 0x62, 0x03, 0xfb,\\n0xcd, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x0f, 0xb7, 0xcd, 0xf2, 0xef, 0x00, 0x00, 0x00,\\n}\\n\\n// Reference imports to suppress errors if they are not otherwise used.\\nvar _ context.Context\\nvar _ grpc.ClientConn\\n\\n// This is a compile-time assertion to ensure that this generated file\\n// is compatible with the grpc package it is being compiled against.\\nconst _ = grpc.SupportPackageIsVersion4\\n\\n// GreeterClient is the client API for Greeter service.\\n//\\n// For semantics around ctx use and closing/ending streaming RPCs, please refer to <https://godoc.org/google.golang.org/grpc#ClientConn.NewStream>.\\ntype GreeterClient interface {\\n// Sends a greeting\\nSayHello(ctx context.Context, in \\\\*HelloRequest, opts ...grpc.CallOption) (\\\\*HelloReply, error)\\n}\\n\\ntype greeterClient struct {\\ncc \\\\*grpc.ClientConn\\n}\\n\\nfunc NewGreeterClient(cc \\\\*grpc.ClientConn) GreeterClient {\\nreturn &greeterClient{cc}\\n}\\n\\nfunc (c \\\\*greeterClient) SayHello(ctx context.Context, in \\\\*HelloRequest, opts ...grpc.CallOption) (\\\\*HelloReply, error) {\\nout := new(HelloReply)\\nerr := c.cc.Invoke(ctx, \\\"/helloworld.Greeter/SayHello\\\", in, out, opts...)\\nif err != nil {\\nreturn nil, err\\n}\\nreturn out, nil\\n}\\n\\n// GreeterServer is the server API for Greeter service.\\ntype GreeterServer interface {\\n// Sends a greeting\\nSayHello(context.Context, \\\\*HelloRequest) (\\\\*HelloReply, error)\\n}\\n\\nfunc RegisterGreeterServer(s \\\\*grpc.Server, srv GreeterServer) {\\ns.RegisterService(&_Greeter_serviceDesc, srv)\\n}\\n\\nfunc _Greeter_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\\nin := new(HelloRequest)\\nif err := dec(in); err != nil {\\nreturn nil, err\\n}\\nif interceptor == nil {\\nreturn srv.(GreeterServer).SayHello(ctx, in)\\n}\\ninfo := &grpc.UnaryServerInfo{\\nServer:     srv,\\nFullMethod: \\\"/helloworld.Greeter/SayHello\\\",\\n}\\nhandler := func(ctx context.Context, req interface{}) (interface{}, error) {\\nreturn srv.(GreeterServer).SayHello(ctx, req.(\\\\*HelloRequest))\\n}\\nreturn interceptor(ctx, in, info, handler)\\n} \",\"timestamp\":1637677597,\"title\":\"gRPC\"},\"digest\":\"nJOJO6NfUyYKyPpe4RUaJ4LjjH-Fp8PsienqMWf37Fw\",\"authorship\":{\"contributor\":\"0x42B124F63475D8b3792c150e4d13D0F4E4630a8F\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"2UMd86izd95p5cWS5O3xWIz8oekY8J7gV7H5vIi3aws\\\",\\\"y\\\":\\\"kaq4cZeCdrJSCpiUrLBsZqGOchFWVMIflgXk8fuo7Rk\\\"}\",\"signature\":\"LdWPiQ9opkya1iFq8JBuXxc2-J95JPkms5cHXimx57sm3LovGR0_GGnvHqsAhvJ3KczLn8k_zcl7l64cYwbz6Q\",\"signingKeySignature\":\"0xb949e7518fd3bff4a64305b1aa9c26a93912786258bb044b56c6eab03269b61468fd3155606217b4be7b60199cd6be9592545680fdcee4575deebff026c1f0f91c\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"2UMd86izd95p5cWS5O3xWIz8oekY8J7gV7H5vIi3aws\\\",\\\"y\\\":\\\"kaq4cZeCdrJSCpiUrLBsZqGOchFWVMIflgXk8fuo7Rk\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"nJOJO6NfUyYKyPpe4RUaJ4LjjH-Fp8PsienqMWf37Fw\"}"