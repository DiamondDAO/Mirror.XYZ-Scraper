"{\"content\":{\"body\":\"*This post was originally published March 1, 2019 on [Medium](https://trentv.medium.com/zero-knowledge-x-danny-ryan-e3526cf61210).*\\n\\n\\n---\\n\\n*Quick summary of key takeaways from Episode 66.*\\n\\nThe [Zero Knowledge podcast](https://www.zeroknowledge.fm/66) consistently puts out fantastic content and I recommend checking out their archive. Episode 66 featured [Danny Ryan](https://twitter.com/dannyryan) of the Ethereum Foundation and focused mainly what ETH 2.0 will look like and the process to get it to where it is today. If you are able, take the time and listen to the full thing.\\n\\nI pulled out things I found interesting for others to reference. This writeup assumes general knowledge of the Ethereum ecosystem and blockchains in general. Some of it paraphrases Danny’s words and some is my own commentary. Let’s jump right in!\\n\\n## **GUEST BACKGROUND**\\n\\n* Danny Ryan is from Louisiana.\\n* He fell into the coordination role somewhat by chance because people found he was the only one to respond to their questions.\\n* ETH 2.0 is acknowledgement that while Ethereum in general is awesome, there is a ton to learn from recent research. Evolution is necessary to remain a viable, system built on best practices.\\n\\n## ETH 1.X\\n\\n* Whether ETH 1.x becomes a shard is really a community question, a research question. Though there are some technical challenges depending on the option.\\n* Option 1: Roll ETH 1.0 into 2.0 once it reached an acceptable stability. (but how?)\\n* Option 1A: 1.x as exceptional shard construction — however, separate rules from other shards and a legacy code base is really bad combination. Also wouldn’t be compatible with forecasted need for state fees.\\n* Option 1B (favored by danny): write EVM interpreter in WASM. deploy as contract on ETH2.0— fork state root into contract and ether balances, then users can interact with 1.0 state by providing “merkel witnesses.” The community could then deprecate maintenance for ETH 1.0 but still interact with the historic state. Stateless nature means there wouldn’t be any issues with state fees.\\n* Option 2: allow legacy chain to operate in perpetuity. At this point there is potential to use ETH 2.0 to finalise 1.0, allowing mining rewards to decrease further.\\n* Option 3: Have mining rewards be a function of how much ETH is left on ETH 1.0\\n* Generally, he thinks there are “promises” that need to be upheld, like an Augur market related to Mars that expires in many years.\\n\\n## ETH 2.0 PREHISTORY\\n\\n* At the beginning of 2018 there were two parallel upgrades under development: Casper FFG and a sharding manager contract. Both would have “enshrined contracts” within the existing ethereum state to manage the complexity of POS logic and maintaining shards.\\n* A lot of work was done on both options, Danny wrote EIP 1011. However, there were serious limitations to making both work on the existing chain. IE rate limiting (tx / sec) >> highly inefficient to process shards >> # of validators is limited >> in turn limits scalability and decentralisation.\\n* The research team also realised that these two “foundational games” might compete with each other for blockspace and economic inputs. There were also roadblocks with EVM inefficiency. In May 2018, there was a turning point.\\n* Some researchers took inspiration from other next efforts, including Dfinity. They needed to “break out of the EVM”, with benefits from more radical decisions.\\n* This blank slate decision allows both the community and economic weight to seed the new chain. The research team can move faster, unencumbered — it’s incredibly difficult to engineer a new design onto a plane in flight.\\n\\n## ETH 2.0 ARCHITECTURE\\n\\n* Existing ETH chain will seed new POS chain that lives and exists in parallel. 1.0 will have a deposit contract (essentially a burn address). This emits a receipt that allows entrance to the beacon chain.\\n* The Beacon chain is the core of ETH 2.0, where: validators exist, rewards and penalties happen, blocks are finalised, shard crosslinks occur, RNG (random number generator) mechanisms live. Danny terms it a “[spinechain](https://observablehq.com/@cdetrio/shasper-viz-0-4)” User accounts don’t live there, doesn’t have a virtual machine. (here’s an awesome [simulation / visualisation](https://observablehq.com/@cdetrio/shasper-viz-0-4) I came across!)\\n* Anna asked how close it is to Polkadot’s relay chain. Danny says it is similar: It’s natural in POS systems for validators to congregate. This is where Casper and POS occurs, block justification and finalisation. POW doesn’t need this because RNG happens “extraprotocol”.\\n\\n## SHARD CHAINS\\n\\n* Shards exist outside of the beacon chain. Analogous to ETH 1.0 but there will be 1024 of them running concurrently.\\n* Think of it like a growing tree, starting with the beacon chain as the trunk. Branches growing out are shards, sending water and energy (communications / txs) produced to the other branches via the central trunk. Leaves are addresses. (this seems like a really obvious analogy but I like how intuitive it is. Tell me where it breaks)\\n* Shard chains host accounts, contracts, state and state execution.\\n* Validators (on the beacon chain) are assigned to validate on a specific shard but also provide crosslinking between shards, approximately every 6 minutes. (spider webs or vines transferring kinetic energy?) They sit in small committees, ensuring that data is available between shards and helping to finalise points of the shard chain.\\n* The number of crosslinks you can fit per block is dynamic, depending on the number of validators. With 4 million validators, the expectation is that all shards will be crosslinked to each other every epoch. (every 64 slots, about 6 minutes).\\n* This method of communicating is asynchronous: meaning not occurring at the same time. It’s baked into the base layer. Synchronous calls cannot be included because it “explodes the complexity” in making ETH 2.0 work. Reorganisations on one shard could then lead to cascading reorgs on others. This would increase shard dependencies and increase system fragility.\\n* Alternatives include: synchronous L2 proposals or encumbrances (contracts on different shards both enabled to signal promises that allow an actor to claim an asset once the beacon chain catches up — lol someone audit this explanation).\\n\\n## INTEROPERABILITY\\n\\n* Danny believes that interoperability is inevitable but cannot make a guess as to how many chains will exist. There might be long power tail of chains depending on their usage.\\n* Fredrik asks where interoperability lives within ETH 2.0: would Polkadot link into the Beacon chain or one parachain per shard?\\n\\n## PHASE 1\\n\\n* This phase is where the system adds shard chains and data consensus.\\n* There is also the possibility of finalising the ETH 1.0 chain via ETH 2.0. Requires 1.0 clients to be light clients of 2.0 — this allows the most recent state root to be exposed. That way, clients on 1.0 can make claims about 2.0 data via Layer 2 mechanisms.\\n* There is also a concept of “economic load balancing”, simply meaning that contracts / accounts on expensive shards will eventually self-distribute to less populated shards. This doesn’t guarantee complete homogeneity in shard traffic but will be a strong influence.\\n* [“Yanking”](https://ethresear.ch/t/cross-shard-contract-yanking/1450) might be used to move correctly enabled contracts between shards.\\n* Phase 1 research (shard consensus) is happening concurrent to the regular Phase 0 spec releases.\\n\\n## SPEC EVOLUTION\\n\\n* About 6 months ago the spec transitioned from a research to engineering project.\\n* Research out in the open is a little different — feedback comes earlier in the process and more frequently.\\n* After Casper deprecation it has settled into an iterative process, making things more elegant. Since September the focus has been on fitting together research components in a sane way.\\n* There have been too many teams jumping in last fall — Danny suspects he may have been a little early to signal that. Either way he is very proud of attaining a concrete Phase 0.\\n* Overall, the process was “mild chaos”. Working in isolation at the beginning (on a private document) meant that big decisions could be made quickly. Operating on Github, teams are now been able to dialogue with research as it happens — hardens up the protocol.\\n* Bikeshedding has been an issue (see serialisation discussions). EF does have a leadership position, can make strong suggestions. Danny is beginning to err to ship mode, even though there are smaller optimisations still being suggested by client implementers.\\n* Over time they may introduce a more formalised EIP process for 2.0 development.\\n\\n## CLIENT DEV TEAMS\\n\\n* There is a lot of excitement from the teams. Competition exists where devs are able to optimise for specific user groups (miners, archive nodes, resource constrained devices), API buildouts, validators interfaces, multiple node connections, languages, additional baked in tools.\\n\\n## LOOKING FORWARD\\n\\n* Putting hard release dates are dangerous. Danny expects Beacon Chain to launch in 2019.\\n* Within the next two months there will be viable beacon clients and short-lived testnets. Hopefully this leads to longer-lived testnets. Appreciates the structure of Cosmos’ Game of Stakes. Might be valuable to set up similar adversarial environments and attempt to collude.\\n* Phase 1 is not too complex / difficult. Should follow shortly after, a lot of these efforts are moving in parallel. Working with EWASM team for Phase 2 spec.\\n* Important to note — there is a lot of concrete gains at each Phase / iteration. But it’s equally important to remember that ETH 1.x still exists.\\n\\n\\n---\\n\\nThanks for reading through, hope you found this rough transcript useful! If you find any inaccuracies shoot me a message here or twitter and I’ll fix it.\\n\\nIf you want to get involved in the Ethereum 2.0 efforts, please check out [ethresearch](https://ethresear.ch/), the [sharding gitter room](https://gitter.im/ethereum/sharding). You can find the hosts [Anna](https://twitter.com/AnnaRRose) and [Fredrik](https://twitter.com/fredhrson) on Twitter. ✌️ 🙏\",\"timestamp\":1632627059,\"title\":\"Zero Knowledge X Danny Ryan\",\"publication\":\"trent\"},\"digest\":\"2hVtiqPUPL-DMIDAo1RGmIm33Pt8_dhBsgqTnELxIfo\",\"authorship\":{\"contributor\":\"0x4C0a466DF0628FE8699051b3Ac6506653191cc21\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"FaggmySWmxMOpjsAfoYTethf_ADgXzieaPjX8yB3wkE\\\",\\\"y\\\":\\\"fvqw5kCn0zT3rC0oevHu8o4RDX0bca8s4EVI4INP5Yo\\\"}\",\"signature\":\"cEiaq1fT3Y0nKSIhVe0Na98MB0lMwY-CkJ_tZPVpAxP8KHystr-bR-8hJvvslJmqTGZPYU5lZr9x2mr5YANwZQ\",\"signingKeySignature\":\"0x55ee1e3e39dbb98d83dd8af98b152438a1a67645ff93af2b0202fb2f34e7877c6a45f9b9aa25e6ecaf09bb434ee32c4b90969c17b8fc2353f68c4d8c6eebce781c\",\"signingKeyMessage\":\"I authorize the publication of articles on trent.mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"FaggmySWmxMOpjsAfoYTethf_ADgXzieaPjX8yB3wkE\\\",\\\"y\\\":\\\"fvqw5kCn0zT3rC0oevHu8o4RDX0bca8s4EVI4INP5Yo\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"tf4QHdobSrC-bF092GBLDDO8ymjd_Oeu1s8ynRBe2pY\"}"