"{\"content\":{\"body\":\"上一篇关于[Render Network的学习记录](https://mirror.xyz/0x8eC46A6d1AFda45f5A334Fe85016FB39D9D8Caee/JmSGCuIwrxmCUQ5gNSsFHk2_qsWxfi6VE0-VZOZ5UG8)分享，被很多人转发点赞，也让我这个nobody涨粉接近1000，也激发了我今天在遛娃完之后，继续给大家分享我的这篇学习记录。\\n\\n学习一个项目比较快就可以完成，但是把学习内容分享给大家需要花费不少时间梳理，大家的关注给了我继续分享的动力，这里谢谢各位。\\n\\n惯例申明，本文只是本人的学习记录分享，不构成任何投资建议。\\n\\n## SOS项目简介\\n\\n这个[项目](https://www.theopendao.com/)很真诚，没有一些高大上概念的包装。目的也很明确，感谢OpenSea的用户对NFT行业的支持，所以给OpenSea的用户空投 $SOS 币，同时会用$SOS币为NFT事业的发展贡献力量。\\n\\n### $SOS的分配\\n\\n* **发行总量：100 trillion**\\n\\n  100,000,000,000,000，这个是我手打的数字。大家数下多少0，又是一场消零运动\\n* **50%分配给空投用户**\\n\\n  如何分配参考下文的空投规则\\n* **20%作为质押激励**\\n\\n  参考下文的合约分析\\n* **20%留给OpenDAO**\\n\\n  这部分$SOS会用作：\\n  * 补偿在OpenSea上被诈骗的用户\\n  * 支持创作者\\n  * 支持NFT社区\\n  * 支持艺术保护\\n  * 授予参与$SOS生态的开发者\\n* **10%作为流动性提供者的激励**\\n\\n  参考下文的合约分析\\n\\n### 空投规则\\n\\n该项目同步了OpenSea的链上交易记录，用户连接钱包之后，会根据用户在OpenSea的交易数据计算出可以领到（claim）的$SOS。大概的计算原则如下：\\n\\n花费的钱（ETH、DAI、USDC）占70%的权重；产生的交易次数占30%的权重。\\n\\n由于本人比较穷，没在opensea上买过NFT，所以无法计算具体最终可以拿到的$SOS个数。空投代币领取数量的具体计算公式在[官网](https://www.theopendao.com/)和[合约](https://etherscan.io/address/0x3b484b82567a09e2588a13d54d032153f0c0aee0#code)中也都未找到（参考下文的合约分析），不过总的原则是在OpenSea上交易的金额及次数越多，拿到的$SOS代币奖励也就越多。\\n\\n## 合约分析\\n\\n该[项目合约](https://etherscan.io/address/0x3b484b82567a09e2588a13d54d032153f0c0aee0#code)比较简单明了，就是ERC20的token合约加了一个claim（领取空投）的方法。\\n\\n```jsx\\ncontract OpenDAO is ERC20, EIP712 {\\n    uint256 public constant MAX_SUPPLY = uint248(1e14 ether);\\n\\n    // for DAO.\\n    uint256 public constant AMOUNT_DAO = MAX_SUPPLY / 100 * 20;\\n    address public constant ADDR_DAO = 0x06bB1467b38d726b3eb39eB2FBAE6021feAE935F;\\n\\n    // for staking\\n    uint256 public constant AMOUNT_STAKING = MAX_SUPPLY / 100 * 20;\\n    address public constant ADDR_STAKING = 0x7d28988391034A4C756f0c3E1A3E033175B04C77;\\n\\n    // for liquidity providers\\n    uint256 public constant AMOUNT_LP = MAX_SUPPLY / 100 * 10;\\n    address public constant ADDR_LP = 0x709CD2aAAe592930616720115b6a3Dbdf1407664;\\n\\n    // for airdrop\\n    uint256 public constant AMOUNT_AIREDROP = MAX_SUPPLY - (AMOUNT_DAO + AMOUNT_STAKING + AMOUNT_LP);\\n\\n    constructor(string memory _name, string memory _symbol, address _signer) ERC20(_name, _symbol) EIP712(\\\"OpenDAO\\\", \\\"1\\\") {\\n        _mint(ADDR_DAO, AMOUNT_DAO);\\n        _mint(ADDR_STAKING, AMOUNT_STAKING);\\n        _mint(ADDR_LP, AMOUNT_LP);\\n        _totalSupply = AMOUNT_DAO + AMOUNT_STAKING + AMOUNT_LP;\\n        cSigner = _signer;\\n    }\\n\\n    bytes32 constant public MINT_CALL_HASH_TYPE = keccak256(\\\"mint(address receiver,uint256 amount)\\\");\\n\\n    address public immutable cSigner;\\n\\n    function claim(uint256 amountV, bytes32 r, bytes32 s) external {\\n        uint256 amount = uint248(amountV);\\n        uint8 v = uint8(amountV >> 248);\\n        uint256 total = _totalSupply + amount;\\n        require(total <= MAX_SUPPLY, \\\"OpenDAO: Exceed max supply\\\");\\n        require(minted(msg.sender) == 0, \\\"OpenDAO: Claimed\\\");\\n        bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", \\n            ECDSA.toTypedDataHash(_domainSeparatorV4(),\\n                keccak256(abi.encode(MINT_CALL_HASH_TYPE, msg.sender, amount))\\n        )));\\n        require(ecrecover(digest, v, r, s) == cSigner, \\\"OpenDAO: Invalid signer\\\");\\n        _totalSupply = total;\\n        _mint(msg.sender, amount);\\n    }\\n}\\n```\\n\\n可以看到合约初始化的时候，就按照上述的分配比例对总数100 trillion的代币进行分发。**需要注意两个部分：**\\n\\n* **初始分配**\\n\\n  官网对$SOS的分配比例中，20%作为质押的激励，10%作为流动性提供者的激励。在上述合约初始化的时候这两部分的$SOS分别进入了两个钱包地址[0x7d28988391034A4C756f0c3E1A3E033175B04C77](https://etherscan.io/address/0x7d28988391034A4C756f0c3E1A3E033175B04C77)和[0x709CD2aAAe592930616720115b6a3Dbdf1407664](https://etherscan.io/address/0x709CD2aAAe592930616720115b6a3Dbdf1407664)。加上OpenDAO自己保留的20%比例，相当于目前**OpenDAO保管了50%总发行量的代币**。\\n* **奖励代币数量计算**\\n\\n  合约中**claim()**方法就是用户去领取空投所调用的方法。这个方法需要传入领取空投的数量，以及项目方的签名信息。签名信息通过项目方地址（cSigner）校验通过后，就能够给用户发送$SOS空投奖励。上文说到用户能够领取多少$SOS的空投，具体的计算方法并没有公开。所以**理论上**，保管cSigner这个地址私钥的人可以向任何人空投任意数量的$SOS。**注意我说的是理论上！**\\n\\n## 项目特色\\n\\n这个项目最巧妙的一点就是吸引了OpenSea上的大量优质客户。要知道能得到$SOS越多的用户，都是在OpenSea上挥金如土的大佬（顺便说一句本人的梦想就是可以买个CryptoPunk），这些大佬会给OpenDAO带来不少资源，例如市场推广、上交易所等等，相当于项目启动就把大佬们的资源整合到一块了，含着金钥匙出生。\",\"timestamp\":1640448003,\"title\":\"SOS项目学习记录\"},\"digest\":\"eBWOsbAqp1MqhlLrLfRrGznkbcofjv_H-tTn_zUrP3c\",\"authorship\":{\"contributor\":\"0x8eC46A6d1AFda45f5A334Fe85016FB39D9D8Caee\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"eW8ZIuZiph-QcAzvdDCyPE0mcKfSjsJGbZY9-_K8Yp8\\\",\\\"y\\\":\\\"mLeHp6V8OVnVZqQfYuuc1hk1oSYeuCmnYdEVZ4TxyKI\\\"}\",\"signature\":\"1VAE5ESBMBSXtzYuzmlrPrmtQri5YEN8Sozc_j8qqgLnmz4dtuiHAC_PnWHc3hs6MyYhfXb-zO8HnnjXFRenJw\",\"signingKeySignature\":\"0xb2dd52f778a609691aa6d9e24bdaf279a65ada15dc1d97df11855e5d82a24a0229bcc0cf42041c07f7a81e29bfb4d9b1c934f6609faedb7feb4bb882328835191b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"eW8ZIuZiph-QcAzvdDCyPE0mcKfSjsJGbZY9-_K8Yp8\\\",\\\"y\\\":\\\"mLeHp6V8OVnVZqQfYuuc1hk1oSYeuCmnYdEVZ4TxyKI\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"eBWOsbAqp1MqhlLrLfRrGznkbcofjv_H-tTn_zUrP3c\"}"