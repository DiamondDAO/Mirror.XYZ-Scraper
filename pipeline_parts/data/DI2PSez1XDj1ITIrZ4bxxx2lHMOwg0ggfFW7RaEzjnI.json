"{\"content\":{\"body\":\"## TimeZone\\n\\n💡 没有时区信息时，默认是本地时区。基本原则：外部参数用本地时区，存储和一般流程用 UTC。\\n\\n* `pytz`\\n  * `pytz.timezone('Asia/Shanghai')`\\n  * `pytz.utc`\\n* `datetime` 对象\\n  * 默认时区信息为`None`，但一些日期操作会默认使用系统的时区，比较保险的是调用一次`astimezone()`显示加上本地时区。\\n  * `replace(tzinfo=)`：不改变具体时间，只替换时区。\\n  * `astimezone(tz=)`：改变时区，同时改变到对应时区的时间，不加参数转为本地时区。\\n* `pandas.Timestamp`\\n  * 不带时区信息，不会使用默认时区\\n  * 用`tz_localize('UTC')`加上时区 (replace)\\n  * 用`tz_convert('UTC')`转换时区 (astimezone)\\n  * 过滤时间问题（`df[df[\\\"candle_begin_time\\\"] > date]`）\\n    * 两边都没有时区信息时，会出现用 UTC 时间跟 UTC+8 进行对比的情况。\\n    * 其中一个有时区信息时，会报错。\\n    * df 用 `df[\\\"candle_begin_time\\\"].dt.tz_localize('UTC')` 加上对应时区（抓取的数据一般都是 UTC 时间），date 用 `astimezone()`显式加上本地时区。再进行对比，最准确。\\n* String → `datetime`\\n\\n  不带时区信息，隐式使用系统时区\\n* Pymongo / Pymodm 读取日期数据\\n\\n  [Pymodm](https://www.notion.so/Pymodm-e4bf769b8dc64f029d621876c416cbc7)\\n\\n  默认不带时区信息，`astimezone()`会处理成本地时区，但时间不变。加上`CodecOptions`会读取时区信息。\\n\\n## ISO 8601\\n\\n### from\\n\\n```python\\nimport dateutil.parser\\ndateutil.parser.parse('')\\n```\\n\\n### to\\n\\n```python\\nLocal to ISO 8601:\\nimport datetime\\ndatetime.datetime.now().isoformat()\\n>>> 2020-03-20T14:28:23.382748\\n\\nUTC to ISO 8601:\\nimport datetime\\ndatetime.datetime.utcnow().isoformat()\\n>>> 2020-03-20T01:30:08.180856\\n\\nLocal to ISO 8601 without microsecond:\\nimport datetime\\ndatetime.datetime.now().replace(microsecond=0).isoformat()\\n>>> 2020-03-20T14:30:43\\n\\nUTC to ISO 8601 with TimeZone information (Python 3):\\nimport datetime\\nimport pytz\\ndatetime.datetime.utcnow().replace(tzinfo=datetime.timezone.utc).isoformat()\\n>>> 2020-03-20T01:31:12.467113+00:00\\ndatetime.datetime.now().astimezone(pytz.UTC).isoformat()\\n>>> 2020-07-04T07:02:31.932029+00:00\\n\\nUTC to ISO 8601 with Local TimeZone information without microsecond (Python 3):\\nimport datetime\\ndatetime.datetime.now().astimezone().replace(microsecond=0).isoformat()\\n>>> 2020-03-20T14:31:43+13:00\\n\\nLocal to ISO 8601 with TimeZone information (Python 3):\\nimport datetime\\ndatetime.datetime.now().astimezone().isoformat()\\n>>> 2020-03-20T14:32:16.458361+13:00\\n\\nNotice there is a bug when using astimezone() on utc time. This gives an incorrect result:\\ndatetime.datetime.utcnow().astimezone().isoformat() #Incorrect resul\\n```\",\"timestamp\":1636266497,\"title\":\"Date in Python\"},\"digest\":\"1ZTRv1IpXHwizr8dNMGg28e3snS63qW4JtgG476KJZM\",\"authorship\":{\"contributor\":\"0xb896cADE2604ac1A4B656B01C8019D20E3D1A319\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"jZwsChHuaDGLRTLhxKscYs59TV5ltaag74Y7fLM0Wbw\\\",\\\"y\\\":\\\"TJ-JAlaoLQGjIEHBXFKtoMEouFRz61BvaaVDt3Q_OXo\\\"}\",\"signature\":\"C_yLaPPxpCPuCbDnnWNwxYFUJI9F-pVlP0sDV0bNkpaNA-kRYgHUyz8FRXRB5GFG4pnn79WvAWvbJU65B3_1OQ\",\"signingKeySignature\":\"0xe8bada9e65079d4d778071abaf4c5eeecc4b75e5ab8cfcf10bb6548ab18831427a9db5d9fd824dc19f5e530d35e7835483e30a61419624bbcf1bdea3ded2c4931b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"jZwsChHuaDGLRTLhxKscYs59TV5ltaag74Y7fLM0Wbw\\\",\\\"y\\\":\\\"TJ-JAlaoLQGjIEHBXFKtoMEouFRz61BvaaVDt3Q_OXo\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"1ZTRv1IpXHwizr8dNMGg28e3snS63qW4JtgG476KJZM\"}"