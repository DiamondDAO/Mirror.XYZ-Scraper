"{\"content\":{\"body\":\"continued from:\\n\\n[https://mirror.xyz/0x6e2fBc139e37b43f4F29cC10B7BeDe36587f7306/M3hVZ864pYz8aGGQvd2KUXRLkr-VPFVAqklrGaQQQzQ](https://mirror.xyz/0x6e2fBc139e37b43f4F29cC10B7BeDe36587f7306/M3hVZ864pYz8aGGQvd2KUXRLkr-VPFVAqklrGaQQQzQ)\\n\\n## 6.3 The Halting Problem and the Limits of Logic\\n\\n**“As far as the laws of mathematics refer to reality, they are not certain; and as far as they are certain, they do not refer to reality.”**\\n\\n(*Albert Einstein*)[\\\\[1\\\\]](#_ftn1)\\n\\nLogic is just another language, with all of the inherent issues that arise when we mistake usefulness and consistency for the deeper ‘truths’ about reality.\\n\\nIn the world of computing, the logic behind [the ‘halting problem](https://en.wikipedia.org/wiki/Halting_problem)’ was developed — at the same time but in quite different ways — by Alonzo Church and Alan Turing in 1936.\\n\\nThis was part of a much wider scientific debate that had been running in earnest since 1900 relating to the issue of whether mathematics is always internally consistent and self-evident — that is, whether all truth statements (axioms) are provable logically or whether there will always be some assumptions or external understanding needed to be brought into the proofs.\\n\\nKurt Gödel proved that mathematics has a degree of irreducible incompleteness,[\\\\[2\\\\]](#_ftn2) and the work of Church, Turing and others in computing logic was to map the incompleteness of logic to the concept of practical calculation engines (algorithms run by humans or machines).\\n\\n**“If I were to tell you that the next thing I say would be true, but the last thing I said was a lie, would you believe me?”**\\n\\n(*Dr Who*)[\\\\[3\\\\]](#_ftn3)\\n\\nFor non-mathematicians, simpler analogies to Gödel’s theories, which are close to expressing the point, are the ‘liar’s paradox’ statements, such as “This statement is not true (A)”. The problem is that a sentence can be constructed to be grammatically and semantically correct (i.e., in what it is intending to say) without giving rise to any real ‘truth’ value.\\n\\nIf statement (A) is neither true nor false, then it must be ‘not true’. Since this is what (A) itself states, it means that (A) must be true. Since initially (A) was not true and is now true, another paradox arises. There are many variations on this word game, but the long and short of it is that you can keep going through increasingly complex constructions that cannot be verified just on their own terms.\\n\\nGödel proposed two main theorems most relevant here in respect of the problem of pure logical incompleteness.\\n\\n1. No consistent system of axioms[\\\\[4\\\\]](#_ftn4) whose theorems can be specified in an algorithm can prove all truths about the arithmetic of natural numbers.[\\\\[5\\\\]](#_ftn5) There will always be statements about natural numbers that are true but unprovable within the system used.\\n2. Any system of axioms cannot therefore demonstrate its own consistency; this means the system cannot evidence its own truthfulness entirely self-referentially.\\n\\nGödel also contributed substantially to thinking on the continuum hypothesis (the size of infinities) using set theories, with his work helping to lead to the conclusion that it is not possible to decide (pre-determine) whether a computing process fed with a random input will run forever or eventually halt (the ‘halting problem’). Gödel’s insights apply to logic, mathematics, physics, computing and life.\\n\\n**“To prove the first incompleteness theorem, Gödel represented [statements by numbers](https://en.wikipedia.org/wiki/G%C3%B6del_numbering). Questions about the provability of statements are represented as questions about the properties of numbers, which would be decidable by the theory if it were complete … the Gödel sentence states that no natural number exists with a certain, strange property. A number with this property would encode a proof of the inconsistency of the theory. If there were such a number then the theory would be inconsistent, contrary to the consistency hypothesis. So, under the assumption that the theory is consistent, there is no such number.”**[\\\\[6\\\\]](#_ftn6)\\n\\nGödel went further than the ‘liar’s paradox’ and effectively proved that the statement “this statement is not provable (G)” was true, whilst not being provable from the logic used to construct it (named T)[\\\\[7\\\\]](#_ftn7) — hence the notion of logical incompleteness.\\n\\n![](https://images.mirror-media.xyz/publication-images/zNfsnk0g4ajJutWPihssQ.png?height=422&width=422)\\n\\nAs we considered earlier regarding the limits of language, it is not surprising that Gödel discovered a proof of logical incompleteness; wise people have been saying the same for thousands of years.\\n\\nGödel brought us a logical proof of the same within this particular language. In computing, this incompleteness means that for certain calculations it is not possible beforehand to know whether the algorithm will ever finish the steps required to conclude an answer.\\n\\nTo start off simply, take the example of π (pi), being the ratio given by dividing a circle’s circumference by its diameter. It has been proven that this decimal expansion never completes and continues to ∞.[\\\\[8\\\\]](#_ftn8)\\n\\n![German, “PI constant”, Wikipedia, 2007 CE, public domain. \\\\[9\\\\]](https://images.mirror-media.xyz/publication-images/Q5gRcVLR_rTHnxm0iOIUs.png?height=256&width=1280&&size=medium)\\n\\nπ is a finite number between 3 and 4 (so it is determinable to any arbitrary decimal place, even though it does not terminate) with infinite expression. It also has no repeating patterns. Infinitely expressed numbers like this are called ‘irrational’, which means that they are real numbers that cannot be expressed by a simple fraction. π is also a transcendental number, since it is not algebraic.[\\\\[10\\\\]](#_ftn10)\\n\\nIf we were to ask an algorithm to calculate the ‘final’ decimal expansion of π, we know that its calculations could not be completed. It would therefore be a process that would — theoretically — not stop (halt) at any point before the end of our universe.\\n\\nThis is a simple example of the halting problem, whereby a computer program is given a calculation that cannot be determined or decided. In this case, as π is an irrational number, we already know not to run the program looking for the last decimal place. However, if we were to ask a suitably powerful computer to calculate the thousand-trillionth decimal place, it could do it eventually.\\n\\nIt is obviously extraordinarily wasteful to run a computer program with a calculation process that is potentially infinitely long (albeit actual computers have limits in time, memory, energy and entropy). However, and unlike with π, there are many problems in mathematics and physics for which we do not know if their answers are infinite in expansion or non-determinable.\\n\\nIt would be helpful to have a program or computer to tell us which ones are, and which ones are not before any calculation is operated. In practice, programmers will normally specify a point at which a program should arbitrarily stop; for example, when calculating π a specified number of decimal points is determined, after which the computer program will stop.[\\\\[11\\\\]](#_ftn11)\\n\\nAny algorithm (including those of a human mind) that aims to calculate something complex needs to break it down into discrete operational steps. For π this can be done in many ways, such as through the Nilakantha series.[\\\\[12\\\\]](#_ftn12)\\n\\n![Nilakantha series.\\\\[12\\\\]](https://miro.medium.com/max/1400/1\\\\*SGHMlOfbBAf7Bm6qo8G6ng.png)\\n\\n**“By the 5th century CE, *π* was known to about seven digits in Chinese mathematics, and to about five in Indian mathematics. Further progress was not made for nearly a millennium, until the 14th century, when Indian mathematician and astronomer [Madhava of Sangamagrama](https://www.wikiwand.com/en/Madhava_of_Sangamagrama), founder of the [Kerala school of astronomy and mathematics](https://www.wikiwand.com/en/Kerala_school_of_astronomy_and_mathematics), discovered the [infinite series](https://www.wikiwand.com/en/Series_(mathematics)) for *π*, now known as the [Madhava–Leibniz series](https://www.wikiwand.com/en/Leibniz_formula_for_pi)”. One of these methods is to obtain a rapidly converging series by transforming the original [infinite series](https://www.wikiwand.com/en/Series_(mathematics)) of *π*. By doing so, he obtained the infinite series and used the first 21 terms to compute an approximation of *π* correct to 11 decimal places as 3.14159265359.”**[\\\\[13\\\\]](#_ftn13)\\n\\n![](https://miro.medium.com/max/1400/1\\\\*LgFX4mKL_R-wFlqLUghdUw.png)\\n\\n![Wolfgang Beyer, “Mandel zoom 00 mandelbrot set”, Wikipedia,  Attribution-Share Alike 3.0 Unported \\\\[14\\\\]](https://miro.medium.com/max/1400/1\\\\*VNmVMK1oEulT8IGYgFxQIA.jpeg)\\n\\nπ was recently calculated to 50 trillion digits over 303 days.[\\\\[15\\\\]](#_ftn15)\\n\\nIt is a quirk of language that the name for π and other non-determinable fractions is ‘irrational’, given the alternative and wider meaning of that term as being ‘unreasonable’ — though here it just means not expressible as a ratio of two integers.\\n\\nIn 1936,[\\\\[16\\\\]](#_ftn16) Alan Turing proved that there is no general algorithm (whether a process, computer program or machine) that can determine whether any specific calculation process will need to run forever or if it will halt given an arbitrary input (i.e., any potential input).\\n\\nTuring proved this using the logic of contradiction, in that he proved that any such algorithm that did try to determine it could be made to contradict itself. Turing used a thought experiment of a machine that has unlimited resources and magically always knows the answer.\\n\\nLet us imagine a ‘halt machine’ or ‘halt program’ that could always tell us whether an arbitrary algorithm stops when given an arbitrary input. The halt program has to stop whatever the answer is (we assume for the sake of the thought experiment that such a magical machine is possible).\\n\\n*The halt program always stops when providing the answer, since if it did not stop then all we would know is that it has not stopped yet — but how would we know whether the halt program would stop in the future? We could not know. So, the halt program must work by always stopping with a true or false answer.*[\\\\[17\\\\]](#_ftn17)\\n\\nUnsurprisingly, Turing showed that no such machine can exist. He proved that any such infinitely powerful halt program would not be able to determine the answer if instructed to run a variation of the operation on itself.\\n\\nThe hypothetical process can be thought of as follows.\\n\\n**Halt Program (HP): Process 1**\\n\\n![](https://miro.medium.com/max/2000/1\\\\*3yrDoiwsmAyDsS3ewzl4kA.png?&size=medium)\\n\\nLet us imagine another computer process (‘Tricksy’) that takes the output of the halt program (HP; True or False) and reverses the action.\\n\\nIf HP output = True, then Tricksy halts; if HP output = False, then Tricksy loops forever.\\n\\n**Tricksy Program (TP): Process 2**\\n\\n![](https://miro.medium.com/max/2000/1\\\\*Apsmy_PQ0tKhVT3FXZvoLg.png?&size=medium)\\n\\nNow for the head-hurting part. The halt program (HP) is asked whether the Tricksy Program (TP) would stop, or loop forever given process 2 as an input. The output (O) in the previous table then becomes the input (I) for the next iteration below.\\n\\n**Tricksy Program + Halt Program: Process 3**\\n\\n![](https://miro.medium.com/max/2000/1\\\\*4y7n6Reo5KY4yEWloSECsw.png?&size=medium)\\n\\n*The question for the halt program is: does process 3 stop if given each input I (that is, the outputs from process 2)?*\\n\\n1. HP says Tricksy stops (True or ‘1’) but Tricksy does not stop (action of Tricksy = loop forever).\\n2. HP says Tricksy does not stop (False or ‘0’) but Tricksy does stop.\\n\\nSo, in this case this special operation of the halt program tells us that Tricksy halts when in fact Tricksy does not and tells us that Tricksy does not halt when in fact Tricksy halts. This contradiction means the halting problem is undecidable in principle — that is to say that it proves that it is impossible to construct any algorithm, process or computer that will always give a reliable yes-or-no answer. Clearly, this is a useful variation to the incompleteness principles discovered by Gödel.\\n\\nIn the section on the limits of language, we noted a major difficulty related to sets of things such as those having the property of ‘tableness’. It is noteworthy, and not incidental, that the use of sets and the idea of contradictory statements about sets also play a crucial role in determining the limits or completeness of logic for Gödel and Turing. Sets help show that there is a fundamental impossibility of bridging between the finite (calculable information) and the infinite.\\n\\nThe use of sets is often an attempt to break down infinity into discrete quantities. The point is not that we cannot have finite sets; we can. It is just that we cannot always know, without doing work, which sets are finite and which are infinite.\\n\\nIf we could know all answers, without doing specific work, then we would have no issues of indeterminacy or information entropy; we could effectively cheat the universe by knowing all of its secrets for free. If we imagine a universe where we could get answers to all questions without doing the work (let’s call it a cheat’s universe), then any such universe will not give rise to the need for intelligent life-forms.\\n\\nLife arises and evolves from the interaction of positive information (always changing but potentially knowable facts or factual backgrounds) and negative capability and freedom of action (statistical deviance from the norm). If everything could be predetermined (known beforehand) then there would be no need for negative capability or freedom to deviate (including with intelligence).\\n\\nDeviancy is an elegant and natural algorithm for a world in which, in practice, it is not possible to know all facts without doing work on each problem, or even to know which solutions will turn out to be better or worse than other solutions at solving problems in the specific factual landscape that applies.\\n\\nIn an infinite and changing universe, actual work to solve problems will always be required. We will be looking at the issue of completeness and computability in the later sections on entropy and cryptography.\\n\\n**“But an inner voice tells me that it is not yet the real thing. The theory says a lot, but it does not really bring us any closer to the secrets of the Old One. I, at any rate, am convinced that He does not play dice.”**\\n\\n(*Albert Einstein*)[\\\\[19\\\\]](#_ftn19)\\n\\nI agree with Einstein; God (or nature) does not play dice. I prefer the card game example, used later in this book. Nature is the dealer of hands in a card game with an infinite number of cards.\\n\\nNature may know all hands but makes universal rules to ensure that everyone else must play with only their hand and the cards they see as they are dealt. This ‘truth’ must therefore show up in every field of action and information. It is the basis for ethics, evolution, freedom, logic, entropy, information theory and cryptography. Life and intelligence arise and evolves in the gaps between causality and chaos, between usable energy and entropy.\\n\\nRecognising the undecidability, incompleteness or indeterminacy that exists in the universe is not the same as stating that the universe operates on randomness or chance.\\n\\nWe can find answers to many questions, but there will always be a cost involved. The work required (input) for the payoff of obtaining a solution (output) is how the universe keeps all participants honest and ensures that no life-forms have an absolute vantage point (since that is God’s or the universe’s sole preserve). The uncountable configurations of information and matter (microstates) — total entropy — is how the universe achieves this and is why all attempts to reduce or quantify the infinite must ultimately fail to be truthful.\\n\\nThe science of physics creates useful constructs to make sense of endlessly interacting bubbles or quanta of possibility.[\\\\[20\\\\]](#_ftn20) Yet, we should be careful to understand the nature of the questions that we ask; to consider which questions may not be askable or answerable using signs. The deepest questions require signless silence.\\n\\n![(Douglas Adams)\\\\[21\\\\]](https://miro.medium.com/max/2000/1\\\\*QjOu0zsFG9Hn1aZUBlNakg.png?&size=medium)\\n\\n![“lionfish”, pxhere.com, public domain.](https://images.mirror-media.xyz/publication-images/mZOjwHumuoaCTah8J05Nm.png?height=1600&width=2400&&size=medium)\\n\\n![W. H. Auden \\\\[22\\\\]](https://miro.medium.com/max/2000/1\\\\*Sg6nHmnz6MZd0_1_9EoDYA.png?&size=medium)\\n\\n\\\\*\\\\*\\\\*\\n\\ncontinued in:\\n\\n[https://mirror.xyz/0x6e2fBc139e37b43f4F29cC10B7BeDe36587f7306/WUDEJaoE5EWxNxAsjtu9h_lT2MjriW944_ARoeF2bnU](https://mirror.xyz/0x6e2fBc139e37b43f4F29cC10B7BeDe36587f7306/WUDEJaoE5EWxNxAsjtu9h_lT2MjriW944_ARoeF2bnU)\\n\\n\\\\*\\\\*\\\\*\\n\\n[\\\\[1\\\\]](#_ftnref1) Albert Einstein, “[Geometry and Experience](https://mathshistory.st-andrews.ac.uk/Extras/Einstein_geometry/)”, address to the Prussian Academy of Sciences in Berlin, 1921 CE.\\n\\n[\\\\[2\\\\]](#_ftnref2) Kurt Gödel, “Incompleteness Theorems”, *[On Formally Undecidable Propositions of Principia Mathematica and Related Systems](https://monoskop.org/File:Kurt_G%C3%B6del_On_Formally_Undecidable_Propositions_of_Principia_Mathematica_and_Related_Systems_1992.pdf)*, 1931 CE.\\n\\n[\\\\[3\\\\]](#_ftnref3) Wikipedia, “1973 *[Doctor Who](https://en.wikipedia.org/wiki/Doctor_Who)* serial *[The Green Death](https://en.wikipedia.org/wiki/The_Green_Death)*”.\\n\\n[\\\\[4\\\\]](#_ftnref4) As a reminder, an axiom is a self-evident assumption or proposition that is taken to be true and that serves as a premise or starting point for further reasoning. Philosophers going back to Euclid have relied upon them heavily.\\n\\n[\\\\[5\\\\]](#_ftnref5) Positive integers: 1, 2, 3, 4, 5…∞.\\n\\n[\\\\[6\\\\]](#_ftnref6) Wikipedia, “[Liar paradox](https://en.wikipedia.org/wiki/Liar_paradox)”.\\n\\n[\\\\[7\\\\]](#_ftnref7) Natalie Wolchover, “[How Gödel’s Incompleteness Theorems Work](https://www.quantamagazine.org/how-godels-incompleteness-theorems-work-20200714/)”, *Quanta* *Magazine*, 14 July 2020 CE.\\n\\n[\\\\[8\\\\]](#_ftnref8) Proven by [Johann Lambert](https://en.wikipedia.org/wiki/Proof_that_%CF%80_is_irrational) in 1760 CE.\\n\\n[\\\\[9\\\\]](#_ftnref9) “[PI constant](https://en.wikipedia.org/wiki/File:PI_constant.svg)”, Wikipedia, [German](https://commons.wikimedia.org/wiki/User:German), 2007 CE, public domain.\\n\\n[\\\\[10\\\\]](#_ftnref10) Apparently defined as “Not the [root](https://www.wikiwand.com/en/Zero_of_a_function) of a non-zero [polynomial](https://www.wikiwand.com/en/Polynomial) with [rational](https://www.wikiwand.com/en/Rational_number) [coefficients](https://www.wikiwand.com/en/Coefficient)”, “[Transcendental number](https://en.wikipedia.org/wiki/Transcendental_number)”, Wikipedia\\n\\n[\\\\[11\\\\]](#_ftnref11) NASA apparently stops at around 15 decimal points when sending rockets into space; Timothy Revell, “[Celebrate pi day with 9 trillion more digits than ever before](https://www.newscientist.com/article/2124418-celebrate-pi-day-with-9-trillion-more-digits-than-ever-before/)”, *New Scientist*, 14 March 2017 CE.\\n\\n[\\\\[12\\\\]](#_ftnref12) See also the Monte Carlo method, which uses probability and the gap between a square and a circle (by the way, this is also where the term ‘[squaring the circle](https://www.wikiwand.com/en/Squaring_the_circle)’ comes from); “[How do you calculate Pi without a calculator?](https://www.quora.com/How-do-you-calculate-Pi-without-a-calculator/answer/Killian-OSullivan?ch=3&share=95dc3770&srid=H3mH)”, Quora.\\n\\n[\\\\[13\\\\]](#_ftnref13) Wikipedia, “[Approximations of π](https://en.wikipedia.org/wiki/Approximations_of_%CF%80)”.\\n\\n[\\\\[14\\\\]](#_ftnref14) “π can be computed from the [Mandelbrot set](https://www.wikiwand.com/en/Mandelbrot_set), by counting the number of iterations required before point (−0.75, ε) diverges.” Image: “[Mandel zoom 00 mandelbrot set](https://commons.wikimedia.org/wiki/File:Mandel_zoom_00_mandelbrot_set.jpg)”, Wikipedia, [Wolfgang Beyer](https://commons.wikimedia.org/wiki/User:Wolfgangbeyer), [Attribution-Share Alike 3.0 Unported](https://creativecommons.org/licenses/by-sa/3.0/deed.en).\\n\\n[\\\\[15\\\\]](#_ftnref15) Timothy Mullican, “[Calculating Pi: My attempt at breaking the Pi World Record](https://blog.timothymullican.com/calculating-pi-my-attempt-breaking-pi-record)”, 26 June 2019 CE.\\n\\n[\\\\[16\\\\]](#_ftnref16) Alan Turing, “O[n Computable Numbers, with an Application to the Entscheidungsproblem](https://www.cs.virginia.edu/\\\\~robins/Turing_Paper_1936.pdf)”, 1936 CE.\\n\\n[\\\\[17\\\\]](#_ftnref17) There are numerous articles on this topic, but most are surprisingly difficult to understand. Alan Turing’s 1936 paper is much too difficult to read for the average non-specialist reader (like me). I recommend another article and the video referenced in it as a good means to approach this issue: Richard Cocks, “[The Halting Problem](https://voegelinview.com/the-halting-problem/)”, VoegelinView, 19 November 2019 CE. Get out a pencil and piece of paper to try to make sense of it.\\n\\n[\\\\[18\\\\]](#_ftnref18) In mathematics, ‘X’ or ‘x’ is the symbol for an unknown quantity and is a very powerful way of resolving calculations where X is not known or where the general, rather than only a specific, case of mathematical ‘truth’ or logic is required.\\n\\n[\\\\[19\\\\]](#_ftnref19) Albert Einstein, letter to Max Born, 1926 CE.\\n\\n[\\\\[20\\\\]](#_ftnref20) David Layzer, “*[Cosmology, initial conditions, and the measurement problem](https://www.informationphilosopher.com/solutions/scientists/layzer/1008.1229v1.pdf)*”, 2010 CE:\\n\\n“Every macroscopic system and its surroundings are characterized by probability distributions of microstate\\\\[s\\\\].”\\n\\n[\\\\[21\\\\]](#_ftnref21) “\\\\[7.5 millions years later\\\\] … ‘Seventy-five thousand generations ago, our ancestors set this program in motion,’ the second man said, ‘and in all that time we will be the first to hear the computer speak.’ … ‘All right,’ said Deep Thought. ‘The Answer to the Great Question…’ ‘Yes…!’ ‘Of Life, the Universe and Everything…’ said Deep Thought.\\n\\nYes…!’ ‘Is…’ said Deep Thought, and paused. ‘Yes…!’ ‘Is…’ ‘Yes…!!!…?’ ‘Forty-two,’ said Deep Thought, with infinite majesty and calm.\\n\\n… It was a long time before anyone spoke. Out of the corner of his eye Phouchg could see the sea of tense expectant faces down in the square outside. ‘We’re going to get lynched, aren’t we?’ he whispered. ‘It was a tough assignment,’ said Deep Thought mildly. ‘Forty-two!’ yelled Loonquawl. ‘Is that all you’ve got to show for seven and a half million years’ work?’\\n\\n‘I checked it very thoroughly,’ said the computer, ‘and that quite definitely is the answer. I think the problem, to be quite honest with you, is that you’ve never actually known what the question is.’”\\n\\nDouglas Adams, *The Hitchhiker’s Guide to the Galaxy*, 1979 CE.\\n\\n[\\\\[22\\\\]](#_ftnref22) “To ask the hard question is simple: / Asking at meeting / With the simple glance of acquaintance / To what these go / And how these do; / To ask the hard question is simple, / The simple act of the confused will.\\n\\nBut the answer / Is hard and hard to remember: / On steps or on shore / The ears listening / To words at meeting, / The eyes looking / At the hands helping, / Are never sure / Of what they learn / From how these things are done, / And forgetting to listen or see / Makes forgetting easy, / Only remembering the method of remembering,\\n\\nRemembering only in another way, / Only the strangely exciting lie, / Afraid To remember what the fish ignored, / How the bird escaped, or if the sheep obeyed. / Till, losing memory, / Bird, fish, and sheep are ghostly, / And ghosts must do again / What gives them pain.\\n\\nCowardice cries / For windy skies, / Coldness for water, / Obedience for a master. / Shall memory restore / The steps and the shore, / The face and the meeting place; / Shall the bird live, / Shall the fish dive, / And sheep obey In a sheep’s way; / Can love remember / The question and the answer,\\n\\nFor love recover / What has been dark and rich and warm all over?”\\n\\nW. H. Auden, “*The Hard Question*”, 1933 CE. Image: “[lionfish](https://pxhere.com/en/photo/8951)”, pxhere.com, public domain.\",\"timestamp\":1639486044,\"title\":\"Ethics of Life — 6.3 the Limits of Logic \"},\"digest\":\"lgvgZkWAejRBRi0hCpyQE8FdvIPsxTmXs6KmB23-hf0\",\"authorship\":{\"contributor\":\"0x6e2fBc139e37b43f4F29cC10B7BeDe36587f7306\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"e4G9o3wQEalHCyu1nrx43_XLj33NkkbtPU9zhgLpEoc\\\",\\\"y\\\":\\\"SMfJ8rbTNB0Nm4Wk9iL9Uo7u3NH1MHQMvR-AC5DuNdw\\\"}\",\"signature\":\"FwSsKio_fo5csT1iC8dyw1WAkA-gBco3ABHp3ph0da6vFGjwXmB4hwL0OO4umcYKaxRyAIZErhX3FsgjmUlXTQ\",\"signingKeySignature\":\"0xdf71867d6a93a9e9fc97739057d22cb3e7a0c04250c4da3797e334eba75e19656b925c0d134918e43f95fa27b290bd5caa4e20826faad966e713ce681d9f182d01\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"e4G9o3wQEalHCyu1nrx43_XLj33NkkbtPU9zhgLpEoc\\\",\\\"y\\\":\\\"SMfJ8rbTNB0Nm4Wk9iL9Uo7u3NH1MHQMvR-AC5DuNdw\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"VwCvimwGYdVDaBqa-ZniyA5-hEDDWmrxfxB9oH0lzHk\"}"