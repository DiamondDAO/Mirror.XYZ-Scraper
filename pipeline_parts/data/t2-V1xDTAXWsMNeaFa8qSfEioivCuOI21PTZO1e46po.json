"{\"content\":{\"body\":\"## ERC-20 Tokens\\n\\nA token on Ethereum is a type of [smart contract](https://ethereum.org/en/developers/docs/smart-contracts/) that acts as an automated balance sheet. For a smart contract to be recognized on the Ethereum blockchain as a token, it must follow [certain standards](https://eips.ethereum.org/EIPS/eip-20). The core functionality for a contract to be considered a token include:\\n\\n* A way to keep track of each addresses balance\\n* A variable that holds the total supply of the token\\n* A function to “transfer” tokens between addresses\\n\\nFollowing the “automated balance sheet” paradigm, all these standards can be met by simply moving numbers around on a balance sheet.\\n\\n### Create the balance sheet\\n\\nFirst, we will start with an empty balance sheet and the equivalent smart contract form\\n\\n![](https://images.mirror-media.xyz/publication-images/KpefCzOrUpc-KQDXWhk9G.png?height=650&width=1000)\\n\\n### Keeping track of balances\\n\\nOur balance sheet only needs two columns, one to store a user’s address and one to keep track of how many tokens that balance user owns. Inside the smart contract, all we need is a “*mapping*”, which is a data structure that maps a key (address) to a value (token balance). We call the mapping `balances`\\n\\n![](https://images.mirror-media.xyz/publication-images/rs8fcoqmvBUcpAP5iEoxB.png?height=650&width=1500)\\n\\n### Adding rows to the balance sheet\\n\\nNow we need to add rows that contain an address and a balance. In the smart contract, to add a new row, the mapping is updated like this: `balances[address] = balance`. This functionality is wrapped inside a function called `mint(address, amount)`. The mint function is then called in the `constructor`. Code inside here gets executed when the contract is deployed to the blockchain. Here we add 3 rows\\n\\n![](https://images.mirror-media.xyz/publication-images/L8kJN0CzRnofzfJURVkX4.png?height=650&width=1500)\\n\\n### Total Supply\\n\\nThe total supply is simply the sum of all the balances in the mapping. First a `totalSupply` variable is created. Since we are using our `mint` function to add new rows, we can keep track of the total supply by adding the `amount` to `totalSupply` each time the function is called\\n\\n![](https://images.mirror-media.xyz/publication-images/x3TEZY5jhJhFRZHgyU0Ru.png?height=750&width=2000)\\n\\n### Transferring Tokens\\n\\nWhen an address sends `x` tokens to another address, the sender is subtracting `x` from their balance and adding `x` to the recipients balance. This means all we have to do to “transfer” a token is to add and subtract existing values from the `balances` mapping. `msg.sender` is the address that is calling the function (the person who is sending tokens). So we access their balance, and subtract `amount` from it. Lastly, `to` (receiver) balance is accessed and `amount` is added to it.\\n\\n![ ](https://images.mirror-media.xyz/publication-images/fmUWHCcvhg1JCTS5Bz_cg.png?height=516&width=958)\\n\\nYou now have a fully functional token on Ethereum, and this is really all there is to a basic token. Whenever you see tokens in a wallet like MetaMask, the wallet is simply reading in a value from a mapping inside a smart contract at some address on the blockchain. When you press the “send” button on MetaMask, you are just calling a function like the `transfer` function above, and after the balances are changed inside the function, your wallet will read in the new value of the mapping and at your address and the recipients, effectively giving off the illusion that you are transferring tokens around. In reality, your magic internet money is just numbers being automatically updated on a balance sheet.\",\"timestamp\":1636936282,\"title\":\"Ethereum Tokens (ERC-20) Explained\"},\"digest\":\"AYti2bybEisA64eVAN-462bEymaBUkLURlaPvN7yV3k\",\"authorship\":{\"contributor\":\"0xA0c60A3Bf0934869f03955f3431E044059B03E62\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"E-yYmBD-E3adXG9pNFebXfxv7yIPAzpwFyj3d4ryWXA\\\",\\\"y\\\":\\\"fOLz8GIwVdaUWUMCH5b7Wu7t5cBcRfU8C7wAsDntYxM\\\"}\",\"signature\":\"kdwVbpISMRe6Z4NMe9hKU4nmnQT-p8DqL_hkPqiPzj-s9IW8FBBtfwO4nWMRnb-ZscX7geeGPcqealtoNI9WkQ\",\"signingKeySignature\":\"0x799b24d6f049b2cb7565fd9e0edf453354fd8a3bfa77d4b2273dfdb3681e619b617a2cb6f5215b401fa403f89c4c0e41a44388f8f66a489cd06e025eb4ad25bb1b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"E-yYmBD-E3adXG9pNFebXfxv7yIPAzpwFyj3d4ryWXA\\\",\\\"y\\\":\\\"fOLz8GIwVdaUWUMCH5b7Wu7t5cBcRfU8C7wAsDntYxM\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"AYti2bybEisA64eVAN-462bEymaBUkLURlaPvN7yV3k\"}"