"{\"content\":{\"body\":\"Ethereum is a protocol undergoing significant changes. In the medium term, we are pushing to upgrade the protocol so it can scale to meet global demand, while also improving security and decentralization. It’s a long and winding road to get there, but our [bazaar](https://en.wikipedia.org/wiki/The_Cathedral_and_the_Bazaar) of researchers and tinkerers is more active than it’s ever been.\\n\\nBefore starting, remember that this is not an “official” roadmap, and represents a limited, subjective view of where things stand.\\n\\n**👉 Note**: *If you need to get a better understanding of the technical terms used in this article, please reference the [Consensys Blockchain Glossary](https://consensys.net/knowledge-base/a-blockchain-glossary-for-beginners/).*\\n\\n## The Names have changed\\n\\n> ***Timeline*** *→ Ongoing*\\n\\nLet’s talk about what we call things. While it may seem strange to start here, remember that naming frameworks are informed by roadmaps. Below are two examples of recent changes to popular terminology, as well as the reasons for the change.\\n\\n### Execution and Consensus\\n\\nFor all intents and purposes, the terms “Eth1” and “Eth2” are no longer used in core development—see Tim Beiko’s [“Great Renaming”](https://notes.ethereum.org/@timbeiko/great-renaming) doc. \\n\\nThe old naming scheme suggested two issues, namely that “Eth1 comes first, and Eth2 only after” and that “Eth1 will cease to exist once Eth2 exists.” Danny Ryan has previously pointed out the issue, starting in [Oct. 2020](https://twitter.com/dannyryan/status/1317166485521854465). Even though the Beacon Chain has been running alongside mainnet since it launched, using Eth1 and Eth2 suggests that the earlier version goes away at some point. In reality, the chain-state will be seamlessly wedded to the Beacon Chain with the Merge.\\n\\nNo data will be lost, no migration is required.\\n\\nInstead of Eth1 or Eth2, we’ve shifted to “execution” and “consensus.” I recommend you read Danny’s in-depth [post here](https://blog.ethereum.org/2021/01/20/the-state-of-eth2-january-2021/). In short, execution refers to all things at the user layer: applications, account balances, tokens, etc. This can also be referred to as the “state.”\\n\\nConsensus is then the Proof of Stake mechanisms that bind everything together: finality, the fork choice rule, validators, and incentives.\\n\\nIn a post-merge environment, both of these layers coexist together.\\n\\n### Features, not Phases\\n\\nPhases are another term we’ve moved beyond. In the past, they referred to a specific protocol change, e.g. “Phase 0 is the Beacon Chain.” \\n\\nLate last year, there was an informal, gradual reframing of “phases” to “features.” To start, using “features” is more flexible. When designs are updated or scope expanded/reduced, it’s harder to communicate that the shorthand “Phase X” has changed instead of just calling it by the name of the feature proposal.\\n\\nSecond, and in keeping with the “Execution and Consensus” section above, it indicated sequentiality: that “Phase X” must be followed by “Phase X+1.” A good example of this not working in the current timeline is with The Merge *(previously “Phase 1.5”)* being prioritized ahead of Data Sharding *(previously “Phase 1”)*.\\n\\nBiasing towards “features” means names are atomic, easily reordered when needed, and more clearly communicate their ultimate impact.\\n\\n### Epistemic Flexibility\\n\\nMore abstractly, I like to think that both of the changes above are grounded in an epistemic flexibility—epistemic means “related to knowledge or knowing.” In other words, it’s a flexible mode of knowledge formation that allows our community to better comprehend the unstructured creativity produced by the [bazaar](https://en.wikipedia.org/wiki/The_Cathedral_and_the_Bazaar).\\n\\nWe are able to make adaptive decisions about a roadmap because we’re not locked into phases or sequentiality. There’s humility in acknowledging and internalizing that we don’t have complete maps of the territory. This is an important part of Ethereum philosophy, and I’m glad to see it put down stronger roots.\\n\\nIt may take a while for the broader community to adjust to new naming norms, but we’ll get there! Thanks in advance for helping us out with this important effort :)\\n\\n## The Merge\\n\\n> ***Timeline*** *→ 5-8 months*\\n\\nNow that we’ve addressed naming, let’s talk about the next exciting Ethereum feature: The Merge. This refers to Ethereum’s impending switch from Proof-of-Work (PoW) to [Proof-of-Stake (PoS)](https://shows.banklesshq.com/p/why-proof-of-stake-vitalik-buterin-7f4). \\n\\nIt’s one of the most widely anticipated protocol changes for both Ethereum as well as the broader crypto space. For much of our industry’s existence, PoW and its negative perceptions around energy consumption have dominated popular media. Ethereum will be the largest protocol ever to hot swap its consensus mechanism, and in turn, hopefully change the narrative.\\n\\n### Benefits to the Protocol\\n\\nThe Merge includes many major improvements to the protocol:\\n\\n* As soon as the upgrade goes live, the chain becomes more secure. Blocks become “finalized” after a certain point, introducing slashing disincentives for chain reorgs by validators—i.e. validators reorganizing blocks or their internal transactions. \\n* Second, PoS removes the immense energy consumption and hardware waste  associated with PoW. **Researchers estimate that Ethereum’s energy use will drop by [up to 99.95%](https://blog.ethereum.org/2021/05/18/country-power-no-more/)**. A tiny fraction of regular commodity hardware will replace the current set of ASICs and GPUs that currently run Ethereum consensus. These two effects will lead to a more energy-efficient, diverse, geographically distributed, and antifragile set of consensus participants.\\n* Third, Ethereum PoS sets the stage for sharding, a similarly significant protocol change that will separate the chain into many concurrent threads. Sharding supercharges L2 scaling efforts by increasing the blockspace available for data availability and settlement.\\n* Fourth, ETH priority fees that currently go to miners will instead go to a validator-controlled address on the execution layer. This means the ETH is immediately liquid. Given that full withdrawals of staked ETH will only go live in the Shanghai upgrade later next year, this is a significant improvement for validators with locked-up capital.\\n* Finally, the upgrade will reduce annual ETH issuance from the current [net-3.5% to roughly net-0%](https://www.ethmodel.io/).\\n\\n### The Path to the Merge\\n\\n![](https://images.mirror-media.xyz/publication-images/bJQgP5LT39dOGjaQFnUsl.png?height=1218&width=2152&size=large)\\n\\nThe first major event laying the foundation for the Merge was [Rayonism](https://rayonism.io/), a month-long hackathon earlier this year. This effort simulated what the chain would look like after the Merge happens as well as how consensus / execution clients will talk to each other.\\n\\nMore recently, we had the Amphora interop. This week-long event continued to build on the success of Rayonism, but adding the crucial moment of transition from PoW to PoS. 10 client teams contributed, and by the end of the week, a devnet modeling the transition had been successfully run!\\n\\n![https://twitter.com/benjaminion_xyz/status/1446516207159582743](https://images.mirror-media.xyz/publication-images/7bVnfvoantCpaM7oxCC2j.png?height=1015&width=1182)\\n\\nIf you’d like to learn more about both events, check out Tim Beiko’s post [“Amphora: A Major Merge Milestone.”](https://blog.ethereum.org/2021/10/15/amphora-merge-milestone/)\\n\\nThe learnings from that event have been incorporated into the latest release of the Merge specs, called “[Kintsugi](https://hackmd.io/@n0ble/kintsugi-spec).” Concurrently, there is a long-lived devnet called Pithos. This will restart a number of times throughout Q4’21-Q1’22 to retest the moment of transition from PoW to PoS with the updated spec. Once this transition is reasonably stable, existing testnets like Goerli can be upgraded to match the spec.\\n\\nInterested community members can follow along with [\\\"The Merge Mainnet Readiness Checklist](https://github.com/ethereum/pm/blob/master/Merge/mainnet-readiness.md), a comprehensive overview of the remaining tasks.\\n\\n## Shanghai Upgrade\\n\\n> ***Timeline*** *→ 10-12 months*\\n\\nOne of the interesting things about Ethereum post-Merge is that though the chain ends up merged, the clients remain independent. This includes how they are architected, as well the teams that work on them. For validators, this means an abundance of choice. Each execution client can be combined with each consensus client, and vice versa, in every permutation. For fun, I put together a list of possible names for these combo clients [here](https://twitter.com/trent_vanepps/status/1445008969756467203?s=20).\\n\\nIndependent execution and consensus layers also allow for uncoupled upgrade processes when needed. This nicely slots into the Ethereum philosophy of separation of concerns. In other words, several smaller changes are usually more manageable than one monolithic one.\\n\\nHowever, the Shanghai upgrade *will* couple changes to both layers in order to make validator withdrawals possible. This allows validators to exit their ETH from the consensus to the execution layer, binding them together even more closely. Once the ETH is exited from the Beacon Chain, then it can be used just how people use it today: as a store of value, to pay for NFTs, or pay transaction fees. There are many other proposals being considered for the execution layer, but nothing has been formally accepted into Shanghai.\\n\\nWe won’t know the acceptable scope until we get much closer to the Merge actually going live.\\n\\n## Ethereum Research\\n\\n> ***Timeline*** *→ Ongoing*\\n\\nWhile the above is being specified, implemented, and tested, there are other parallel research efforts pushing Ethereum forward.\\n\\n### Data Sharding\\n\\nAfter the switch to Proof of Stake, sharding is probably the most significant upcoming change to Ethereum. Note that current proposals are focused on data sharding, and not execution. This feature gives L2s much more blockspace to store data, but it wouldn’t support native user transaction execution like we’re familiar with on mainnet. Rollups today currently use Ethereum for this type of settlement operation. Foundational research for this type of sharding is less complex, meaning it can get to mainnet and supercharge L2s even faster.\\n\\n![Original diagram by Hsiao-wei Wang, design by Quantstamp](https://images.mirror-media.xyz/publication-images/xPOe1W2UvxzG3K5HA079L.png?height=687&width=1542&size=medium)\\n\\nPrioritizing data availability is in line with where scalability research and applications have already been moving over the past 18 months. A good crystallization of this possible future is spelled out in Vitalik’s Oct 2020 post [“A rollup centric ethereum roadmap”.](https://ethereum-magicians.org/t/a-rollup-centric-ethereum-roadmap/4698) This is a nice example of epistemic flexibility in the wild!\\n\\nAt some point in the future, the community may decide to add sharded execution.\\n\\nThis remains an open research question.\\n\\n### State Expiry & Weak Statelessness\\n\\nThis area of research will reform how the protocol handles state. State refers to all user records, including contracts, tokens, NFTs, and addresses. In Ethereum today, users incur a one-time cost per transaction to remain in the state indefinitely. Long term, this is not sustainable.\\n\\nSeveral proposals with different tradeoffs have been explored over the years, including things like state rent and ReGenesis.\\n\\nOne leading proposal is called “Weak Statelessness.” This changes the way Ethereum nodes hold and process state. Specifically, only block proposers would be required to store state, while all other nodes can verify blocks statelessly. Here’s how it would affect different user profiles:\\n\\n* **Users:** Can discard state, but need to submit a “witness” along with their transaction. Witnesses are proofs that are sent alongside a transaction to prove that it is valid\\n* **Non-Validator nodes**: Can discard state\\n* **Validators / block proposers**: Can discard state if relying on a third party for block production\\n* **Block Producers:** No change, still need all state. Uses witnesses from users to craft blocks that contain valid state changes\\n\\nThe companion proposal is called “State Expiry.” Here, state can become inactive, or ‘expire’ from the active state, if not accessed within a set period. This could be ETH in cold storage or abandoned ERC20s a community migrated away from. If a user wants to reactivate their state, any sent transaction needs to be accompanied by a witness. One benefit of limiting the active state size is that nodes should be more manageable to sync and maintain.\\n\\nBoth of these concepts are being actively researched, benchmarked, and implemented with Proof of Concepts. Dive deeper into current progress:\\n\\n* [Link roundup](https://notes.ethereum.org/@gballet/Sy-a6T5St) from Guillame Ballet\\n* [Links from the EthR&D Discord Guidebook](https://github.com/tvanepps/EthereumDiscordGuidebook#statelessness--state-expiry)\\n\\n## … and so much more\\n\\nThere’s so much more that I could write about, like EVM improvements and ways to harden consensus mechanisms, but we’ll save them for another post.\\n\\nIf you’re interested in working on these important problems, [DM me](https://twitter.com/trent_vanepps) for an invite to the Ethereum R&D Discord.\\n\\nOr, you can dive into the long-form [EthResearch forum](https://ethresear.ch/top).\\n\\n🙏 *Thanks for reading, and to Danny Ryan, Tim Beiko and Mario Havel for reviewing.*\",\"timestamp\":1637254370,\"title\":\"Ethereum Protocol Update - Nov 2021\\n\",\"publication\":\"trent\"},\"digest\":\"82eyq_NXZzzqFmCNXiKJgSdayf6omCW7BgDQIneyPoA\",\"authorship\":{\"contributor\":\"0x4C0a466DF0628FE8699051b3Ac6506653191cc21\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"z63Sn1nSE_uhRa8OGYkxTI_1pXYMPkE2VdKwcLqDu4I\\\",\\\"y\\\":\\\"ySBczM0106NKh8gRIZlHOhyN_m41tFtNOBr9Z3J7P9U\\\"}\",\"signature\":\"Mdb2Qylgl4EgjGtPuM-ikIE_MlVYxnz1hlD9ONjcSG00bNyAPF9yhTm5MJerzdociAA5Pr5IwYbuEZC9RPQwOQ\",\"signingKeySignature\":\"0x5430355a0bd7e0f1c3cc0cf233bd54aaea02a72ea42b33d44fcd6114ef2556af79420b2c3cff75eacee97fb0798c32ef31e4ac1befa2a346c8a787a79c64052f1c\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"z63Sn1nSE_uhRa8OGYkxTI_1pXYMPkE2VdKwcLqDu4I\\\",\\\"y\\\":\\\"ySBczM0106NKh8gRIZlHOhyN_m41tFtNOBr9Z3J7P9U\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"82eyq_NXZzzqFmCNXiKJgSdayf6omCW7BgDQIneyPoA\"}"