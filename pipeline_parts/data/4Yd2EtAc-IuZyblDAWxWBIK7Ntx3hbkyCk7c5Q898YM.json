"{\"content\":{\"body\":\"<http://www.postgres.cn/docs/14/index.html>\\n\\n## homebrew 安装\\n\\n### 安装命令\\n\\n> brew install postgresql\\n\\n```bash\\nTo migrate existing data from a previous major version of PostgreSQL run:\\n  brew postgresql-upgrade-database\\n\\nThis formula has created a default database cluster with:\\n  initdb --locale=C -E UTF-8 /opt/homebrew/var/postgres\\nFor more details, read:\\n  https://www.postgresql.org/docs/14/app-initdb.html\\n\\nTo restart postgresql after an upgrade:\\n  brew services restart postgresql\\nOr, if you don't want/need a background service you can just run:\\n  /opt/homebrew/opt/postgresql/bin/postgres -D /opt/homebrew/var/postgres\\n```\\n\\n## 启动和关闭 postgresql\\n\\n> brew services start postgresql\\n>\\n> brew services stop postgresql\\n\\n## 创建数据库和账户\\n\\n### 初始化数据库及登录\\n\\nmac安装PostgreSQL后不会创建用户名数据库，执行命令：\\n\\n> createdb\\n\\n如果不执行 createdb，会报错：psql: error: could not connect to server: FATAL: database \\\"用户名\\\" does not exist\\n\\n然后登录PostgreSQL控制台：\\n\\n> psql\\n>\\n> eternity=#\\n\\n`psql`连接数据库默认选用的是当前的系统用户\\n\\n使用`\\\\l`命令列出所有的数据库，看到已存在用户同名数据库、postgres数据库，但是postgres数据库的所有者是当前用户，没有postgres用户。\\n\\n### 创建用户及数据库\\n\\n①创建postgres用户\\n\\n```bash\\nCREATE USER postgres WITH PASSWORD '123456';\\n```\\n\\n②删除默认生成的postgres数据库\\n\\n```undefined\\nDROP DATABASE postgres;\\n```\\n\\n③创建属于postgres用户的postgres数据库\\n\\n```undefined\\nCREATE DATABASE postgres OWNER postgres;\\n```\\n\\n④将数据库所有权限赋予postgres用户\\n\\n```undefined\\nGRANT ALL PRIVILEGES ON DATABASE postgres to postgres;\\n```\\n\\n⑤给postgres用户添加创建数据库的属性\\n\\n```undefined\\nALTER ROLE postgres CREATEDB;\\n```\\n\\n这样就可以使用postgres作为数据库的登录用户了，并可以使用该用户管理数据库\\n\\n## 登陆控制台指令\\n\\n```css\\npsql -U [user] -d [database] -h [host] -p [port]\\n```\\n\\n\\\\-U指定用户，-d指定数据库，-h指定服务器，-p指定端口\\n完整的登录命令，比如使用postgres用户登录\\n\\n```bash\\npsql -U postgres -d postgres\\n```\\n\\n之前直接使用psql登录控制台，实际上使用的是缺省数据\\n\\n```undefined\\nuser：当前mac用户\\ndatabase：用户同名数据库\\n主机：localhost\\n端口号：5432，postgresql的默认端口是5432\\n```\\n\\n### 常用控制台指令\\n\\n```css\\n\\\\password：设置当前登录用户的密码\\n\\\\h：查看SQL命令的解释，比如\\\\h select。\\n\\\\?：查看psql命令列表。\\n\\\\l：列出所有数据库。\\n\\\\c [database_name]：连接其他数据库。\\n\\\\d：列出当前数据库的所有表格。\\n\\\\d [table_name]：列出某一张表格的结构。\\n\\\\du：列出所有用户。\\n\\\\e：打开文本编辑器。\\n\\\\conninfo：列出当前数据库和连接的信息。\\n\\\\password [user]: 修改用户密码\\n\\\\q：退出\\n```\\n\\n### 使用PostgreSQL\\n\\n现在来简单的学习一下使用PostgreSQL，以下命令都在postgres=# 环境下\\n修改用户密码\\n之前我们用命令CREATE USER postgres WITH PASSWORD 'XXXXXX';创建了postgres用户，现在我们来修改该用户的密码：\\n\\n```bash\\nALTER USER postgres WITH PASSWORD 'XXXXXX'\\n```\\n\\n出现ALTER ROLE, 代表修改角色成功\\n\\n### 创建和删除数据库用户\\n\\n创建user1用户：`CREATE USER user1 WITH PASSWORD 'XXXX'`\\n\\n查看数据库用户列表：`\\\\du`\\n\\n删除数据库用户：`drop user user1;`\\n\\n### 创建和删除数据库\\n\\n创建数据库：`create database testdb;`\\n\\n查看数据库列表：`\\\\l`\\n\\n删除数据库：`drop database db1;`\\n\\n### 创建和删除数据表\\n\\n选择数据库：`\\\\c DatabaseName`，比如`\\\\c testdb`\\n\\n创建数据库表：`CREATE TABLE COMPANY( ID INT PRIMARY KEY NOT NULL, NAME TEXT NOT NULL, AGE INT NOT NULL, ADDRESS CHAR(50), SALARY REAL);`\\n\\n删除数据库表： `drop table company;`\\n\\n查看数据库信息：`\\\\d`\\n\\n查询数据：`select * from company`\",\"timestamp\":1640592901,\"title\":\"Mac安装Postgresql\"},\"digest\":\"f2pC3bvz71Id13Q34GO1go1CgTUtNsm6HyF9m7x5QL4\",\"authorship\":{\"contributor\":\"0xeC1487AeAC4Ab76a766D82541e3F67DdDF4d8cEA\",\"signingKey\":\"{\\\"alg\\\":\\\"ES256\\\",\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"7ZEKXA-utAVjgO0wgPqL7USSnALQOlGjJ6z2xm1I6KQ\\\",\\\"y\\\":\\\"vU0QcG4SAWSPjVW-qRDqieqY_2llF2NsmyO5Rsv_gi8\\\"}\",\"signature\":\"xA6axPzhfez3Fb5KilxGOxuIXkFrN9JIRgcFAag1X0hOYaBlycbxE7Jc1txb8XMpjrpJx0kYVIGN3iX9jhyjHA\",\"signingKeySignature\":\"0x43a92b7aa784bb0540b0ed4b3db7f894f3cb86c3a072722ed3d129d7cfc7db1b4136cf26e306a7ab635381720f16ba5f242d9640944ccc9e36254841046ea6731b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"alg\\\":\\\"ES256\\\",\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"7ZEKXA-utAVjgO0wgPqL7USSnALQOlGjJ6z2xm1I6KQ\\\",\\\"y\\\":\\\"vU0QcG4SAWSPjVW-qRDqieqY_2llF2NsmyO5Rsv_gi8\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"f2pC3bvz71Id13Q34GO1go1CgTUtNsm6HyF9m7x5QL4\"}"