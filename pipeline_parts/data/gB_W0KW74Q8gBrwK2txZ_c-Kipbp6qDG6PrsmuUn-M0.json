"{\"content\":{\"body\":\"### PIPELINING, CLOUDBREAK & ARCHIVERS. Solana’s Sixth, Seventh, and Eighth of eight innovations pillars.\\n\\n# Sixth Innovation: PIPELINING\\n\\nLet’s use a metaphor to explain Pipelining.\\n\\nThere is a washer, a dryer and a folding machine. Guess what?! Wash/dry/fold several loads of laundry in sequence. Washing must occur before drying and drying before folding, but each of the three operations is performed by a separate unit.\\n\\nTo maximize efficiency, one creates a pipeline of stages. We’ll call the washer one stage, the dryer another, and the folding process a third. To run the pipeline, one adds a second load of laundry to the washer just after the first load is added to the dryer. Likewise, the third load is added to the washer after the second is in the dryer and the first is being folded. In this way, one can make progress on three loads of laundry simultaneously. Given infinite loads, the pipeline will consistently complete a load at the rate of the slowest stage in the pipeline.\\n\\nSo Pipelining is an appropriate process when there’s a stream of input data that needs to be processed by a sequence of steps and there’s different hardware responsible for each step.\\n\\n# Seventh Innovation: CLOUDBREAK\\n\\nCloudbreak in a nutshell is how SOLANA organizes its data in a particular structure to achieve concurrent read and write operations in an optimal way.\\n\\nImagine Lisa was asking for a long time the whole family to assemble a Washington Lego city replica with her. After postponing for a while, they finally decided to do it. Before they accepted the task, Homer asked Bart, Lisa, and Margie to organize all the pieces by color and shape.\\n\\nThis is a sequential writing example.\\n\\nNow instead of looking at a bunch of mixed pieces, they have small glass jars where they can easily pick the size and color needed.\\n\\nAlthough they can access the desired Lego piece in a random fashion among the jars (read), Bart, Lisa, and Margie will always store (write) using the separation approach explained above, ending up with a sequential organization.\\n\\nAnother benefit of this approach is that Homer has different shelves at home (types of storages, i.e. RAM, SSDs, etc.) to store these jars. Each shelf can be near or far from the kid’s dormitory, which can lead to a faster or slower access to the pieces when they need it later.\\n\\nKnowing that Bart usually accesses a group of Lego pieces with a specific shape and color, more often than the others, Homer then places that in a shelf (RAM) next to Bart’s room.\\n\\nIf the pieces weren’t organized sequentially and divided by importance, this would be impossible to achieve.\\n\\nThat’s an analogy of how SOLANA organizes the database of accounts (more important Lego pieces) such that concurrent read and write are possible.\\n\\n# Eighth Innovation: ARCHIVERS\\n\\nAs you can imagine, as a blockchain grows in usage, more and more data is created, thus the size of the ledger gets heavier to be stored by its nodes.\\n\\nTo solve this, SOLANA implements something called Archivers.\\n\\nImagine you must store a bunch of documents. You go to a storage facility and propose an agreement with all the unit owners. If they have available space, they need to contact you, then you will send documents to their units in a continuous manner up to their full capacity.\\n\\nWith some frequency, the unit owners (Archivers) will be challenged to prove they’re storing our documents (data), at which point they must complete a proof of storage (a proof of replication (PoRep) in SOLANA’s terms).\\n\\nThis allows validators not to have the obligation to have the full ledger stored but keep only a fraction of it, thus working with a “lighter ledger”.\\n\\nThat’s a high level of how archivers nodes work in SOLANA’s ecosystem.\\n\\n# About the Author\\n\\nHey, my name is Jonathan Ferreira, and I’m a software developer in constant evolution, seeking knowledge acquiring and sharing. Learning and implementing blockchain technology, and specially interested about Solana ecosystem.\\n\\nMy GitHub: [https://github.com/Jonathansoufer](https://https//github.com/Jonathansoufer)\\n\\nIn case you found any misinformation in the article or had any suggestions to improve the article please comment it or you can find me on Twitter: [@JSoufer](https://twitter.com/JSoufer).\\n\\n# Reference\\n\\nIf you want to learn more about blockchain, you can visit [https://learn.figment.io](https://learn.figment.io/tutorials/explaining-solana-with-the-simpsons).\\n\\nYou can read the full article on Figment (<https://learn.figment.io/tutorials/explaining-solana-with-the-simpsons>)\",\"timestamp\":1639418823,\"title\":\"6–8/8: Explaining Blockchain & Solana’s Innovation with The Simpsons\"},\"digest\":\"70GZ4J3TX0hDqEk79qnE4Ctu1PEgdsHtcwz8PT4FlRU\",\"authorship\":{\"contributor\":\"0x35143137f0E02E4FB6a9173Fff012B46078B9a1e\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"VM3qU9k0A5Nkznci2pHm_sjMOyueLyhOP4Uv-Uqin78\\\",\\\"y\\\":\\\"yPmUu6RdHya8XO9OOY-I7NOwcRw4YI9KqOfujrAzLIk\\\"}\",\"signature\":\"QzguU_frjUjDZEzfzov_jFTaj8pVoyhdLp9lAUdoucKtAKVpVle6oexidnnSRWzRnW1VZO__ZUAKnZd2lIHvaA\",\"signingKeySignature\":\"0x585f6a04abe0b3d6f3190ee4390819bc2bca6e409e53c7e75b2b8559e0af1dea6d4a90ddacf37fb73475a6e663bc2a9eb0684af1890c9b72dcfbc90e660efbb11c\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"VM3qU9k0A5Nkznci2pHm_sjMOyueLyhOP4Uv-Uqin78\\\",\\\"y\\\":\\\"yPmUu6RdHya8XO9OOY-I7NOwcRw4YI9KqOfujrAzLIk\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"70GZ4J3TX0hDqEk79qnE4Ctu1PEgdsHtcwz8PT4FlRU\"}"