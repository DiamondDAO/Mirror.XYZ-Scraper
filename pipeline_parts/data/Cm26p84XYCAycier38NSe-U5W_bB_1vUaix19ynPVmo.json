"{\"content\":{\"body\":\"### 步骤：\\n\\n**1、解锁钱包，RPC API：v1/wallet/unlock**\\n\\n**2、创建秘钥对，RPC API：v1/wallet/create_key**\\n\\n**3、获取区块链信息，RPC API：v1/chain/get_info，通过这一步得到两个数据：head_block_num、chain_id**\\n\\n**4、根据head_block_num获取区块数据，RPC API：v1/chain/get_block，通过这一步，主要得到三个数据：**\\n\\n**timestamp、block_num、ref_block_prefix**\\n\\n**以上是数据准备节点，接下来是重点。**\\n\\n**5、调用接口abi_json_to_bin编码**\\n\\n涉及到一个json字符串：\\n\\n```\\n{\\n  \\\"code\\\": \\\"%s\\\",\\n  \\\"action\\\": \\\"%s\\\",\\n  \\\"args\\\": {\\n    \\\"creator\\\": \\\"%s\\\",\\n    \\\"name\\\": \\\"%s\\\",\\n    \\\"owner\\\": {\\n      \\\"threshold\\\": 1,\\n      \\\"keys\\\": [\\n        {\\n          \\\"key\\\": \\\"%s\\\",\\n          \\\"weight\\\": 1\\n        }\\n      ],\\n      \\\"accounts\\\": [],   \\n      \\\"waits\\\": []      \\n    },\\n    \\\"active\\\": {\\n      \\\"threshold\\\": 1,\\n      \\\"keys\\\": [\\n        {\\n          \\\"key\\\": \\\"%s\\\",\\n          \\\"weight\\\": 1\\n        }\\n      ],\\n      \\\"accounts\\\": [],    \\n      \\\"waits\\\": []        \\n    }\\n  }\\n}\\n```\\n\\n格式化代码是：\\n\\n```\\nfmt.Sprintf(utils.ABI_JSON_TO_BIN,code,action,creator,name,owner_key,active_key)\\n```\\n\\n> 其中，code：eosio，action：newaccount，这两个是固定的。\\n>\\n> creator：创建者账号，eos新建账号必须用已经存在的账号\\n>\\n> name：要创建的账号名称\\n>\\n> owner_key：公钥\\n>\\n> active_key：公钥\\n>\\n> 通过第5步，可以得到一个json字符串，找到字符串中的字段binargs的值，第六步我们将会用到这个值\\n\\n**6、签名交易**\\n\\n涉及到的json字符串为：\\n\\n```\\n[\\n  {\\n    \\\"ref_block_num\\\": %d,\\n    \\\"ref_block_prefix\\\": %d,\\n    \\\"expiration\\\": \\\"%s\\\",\\n    \\\"actions\\\": [\\n      {\\n        \\\"account\\\": \\\"%s\\\",\\n        \\\"name\\\": \\\"%s\\\",\\n        \\\"authorization\\\": [\\n          {\\n            \\\"actor\\\": \\\"%s\\\",\\n            \\\"permission\\\": \\\"active\\\"\\n          }\\n        ],\\n        \\\"data\\\": \\\"%s\\\"\\n      }\\n    ],\\n    \\\"signatures\\\": []\\n  },\\n  [\\n    \\\"%s\\\"\\n  ],\\n  \\\"%s\\\"\\n]\\n```\\n\\n格式化代码如下：\\n\\n```\\nfmt.Sprintf(utils.SIGN_TRANSACTION,ref_block_num,ref_block_prefix,newTime,account,name,actor,data,public_key,chain_id)\\n```\\n\\n> 其中utils.SIGN_TRANSACTION是上面的json字符串，ref_block_num、ref_block_prefix、newTime是第四步得到的，其中newTime要比获取到的多加十几秒，主要用于交易时效，eos交易打包较快，多加10秒足以，我这边加的是35秒\\n>\\n> account：eosio，固定的\\n>\\n> name：newaccount，固定的\\n>\\n> actor：要创建的账户名称\\n>\\n> data：是第5步得到的binargs\\n>\\n> publick_key：是创建者的公钥\\n>\\n> chain_id：是第三步得到的\\n>\\n> 通过这一步，会得到一个json字符串，找到字符串的字段signatures的值，下一步将会用到\\n\\n**7、推送交易**\\n\\n涉及到的json字符串为：\\n\\n```\\n{\\n  \\\"compression\\\": \\\"none\\\",\\n  \\\"transaction\\\": {\\n    \\\"expiration\\\": \\\"%s\\\",\\n    \\\"ref_block_num\\\": %d,\\n    \\\"ref_block_prefix\\\": %d,\\n    \\\"actions\\\": [\\n      {\\n        \\\"account\\\": \\\"eosio\\\",\\n        \\\"name\\\": \\\"newaccount\\\",\\n        \\\"authorization\\\": [\\n          {\\n            \\\"actor\\\": \\\"%s\\\",\\n            \\\"permission\\\": \\\"active\\\"\\n          }\\n        ],\\n        \\\"data\\\": \\\"%s\\\"\\n      }\\n    ]\\n  },\\n  \\\"signatures\\\":%s\\n}\\n```\\n\\n格式化数据代码：\\n\\n```\\nfmt.Sprintf(utils.PUSH_TRANSACTION,newTime,ref_block_num,ref_block_prefix,actor,data,signatures)\\n```\\n\\n> 其中utils.PUSH_TRANSACTION是上面的json字符串，ref_block_num、ref_block_prefix、newTime是第四步得到的，其中newTime要比获取到的多加十几秒，主要用于交易时效，eos交易打包较快，多加10秒足以，我这边加的是35秒\\n>\\n> actor：是要创建的账户名称\\n>\\n> data：是第5步得到的binargs\\n>\\n> signatures：是第6步得到的signatures\\n>\\n> 如果这一步没有报错，就完成了创建账号。\\n\\n**交易和创建账号类似，其实创建账号就是一个交易。**\\n\\n\\n---\\n\\n## 交易说明\\n\\n设计到的json字符串：\\n\\n```\\nconst TRANSFER_ABI_JSON_TO_BIN = `\\n{\\n  \\\"code\\\": \\\"%s\\\",\\n  \\\"action\\\": \\\"transfer\\\",\\n  \\\"args\\\": {\\n    \\\"from\\\": \\\"%s\\\",\\n    \\\"to\\\": \\\"%s\\\",\\n    \\\"quantity\\\": \\\"%s\\\",\\n    \\\"memo\\\": \\\"%s\\\",\\n  }\\n}\\n`\\n\\nconst TRANSFER_SIGN_TRANSACTION = `\\n[\\n  {\\n    \\\"ref_block_num\\\": %d,\\n    \\\"ref_block_prefix\\\": %d,\\n    \\\"expiration\\\": \\\"%s\\\",\\n    \\\"actions\\\": [\\n      {\\n        \\\"account\\\": \\\"%s\\\",\\n        \\\"name\\\": \\\"transfer\\\",\\n        \\\"authorization\\\": [\\n          {\\n            \\\"actor\\\": \\\"%s\\\",\\n            \\\"permission\\\": \\\"active\\\"\\n          }\\n        ],\\n        \\\"data\\\": \\\"%s\\\"\\n      }\\n    ],\\n    \\\"signatures\\\": []\\n  },\\n  [\\n    \\\"%s\\\"\\n  ],\\n  \\\"%s\\\"\\n]\\n`\\n\\nconst TRANSFER_PUSH_TRANSACTION = `\\n{\\n  \\\"compression\\\": \\\"none\\\",\\n  \\\"transaction\\\": {\\n    \\\"expiration\\\": \\\"%s\\\",\\n    \\\"ref_block_num\\\": %d,\\n    \\\"ref_block_prefix\\\": %d,\\n    \\\"context_free_actions\\\": [],\\n    \\\"actions\\\": [\\n        {\\n            \\\"account\\\": \\\"%s\\\",\\n            \\\"name\\\": \\\"transfer\\\",\\n            \\\"authorization\\\": [\\n                {\\n                    \\\"actor\\\": \\\"%s\\\",\\n                    \\\"permission\\\": \\\"active\\\"\\n                }\\n            ],\\n            \\\"data\\\": \\\"%s\\\"\\n        }\\n    ],\\n    \\\"transaction_extensions\\\": []\\n  },\\n  \\\"signatures\\\": %s\\n}\\n`\\n```\\n\\n相关格式化代码如下：\\n\\nabiJsonToBin：`fmt.Sprintf(utils.TRANSFER_ABI_JSON_TO_BIN,code,from,to,quantity,memo)`\\n\\nsignTransaction：\\n\\n`fmt.Sprintf(utils.TRANSFER_SIGN_TRANSACTION,ref_block_num,ref_block_prefix,newTime,code,actor,data,public_key,chain_id)`\\n\\npushTranaction：\\n\\n`fmt.Sprintf(utils.TRANSFER_PUSH_TRANSACTION,newTime,ref_block_num,ref_block_prefix,code,actor,data,signatures)`\",\"timestamp\":1636351806,\"title\":\"EOS创建账号说明\"},\"digest\":\"sYcQIzN0jc6CnwoIH3b-K_T-j3e8SaETOb4umJMOIS4\",\"authorship\":{\"contributor\":\"0x111A1dC049f50fD0A8BF7b780FD9e2C21c267C24\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"UXHnjjtldwNk2CgV0ZVF-0-NhU4M4YW9jU95RYvugA0\\\",\\\"y\\\":\\\"49NUQRR8ndTF8MI8Cxv5GHWhjHBUJgk62W8-rTo9mGg\\\"}\",\"signature\":\"68SYv1os2ouklM0_65XXUc_N2hrlXpy67baQze2NOrePBqX9BpbwPU6yUKw2vkG6OfHGd9DghSroD3jeN0L4ug\",\"signingKeySignature\":\"0xb47ce0d537c4fcce021acd31da6b481ce8f231608e56bd6004009946390bad9b02f9ddc838ac7fec77e5f1146ef25ca0a5cdfacbd471fd6b0461f4c663e060771c\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"UXHnjjtldwNk2CgV0ZVF-0-NhU4M4YW9jU95RYvugA0\\\",\\\"y\\\":\\\"49NUQRR8ndTF8MI8Cxv5GHWhjHBUJgk62W8-rTo9mGg\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"sYcQIzN0jc6CnwoIH3b-K_T-j3e8SaETOb4umJMOIS4\"}"