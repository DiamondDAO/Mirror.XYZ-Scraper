"{\"content\":{\"body\":\"Clojure has been my favorite language for a long time. It is not without its faults, but it is the language in which I can express my ideas in the most efficient way. It has a powerful macro system that lets you mold the language to your needs. Most Clojure code can run on the JVM as well as in a Javascript runtime (as Clojurescript). This lets us leverage two rich package ecosystems with a convenient lisp syntax.\\n\\nWhile much of the code will be self-explanatory, a familiarity with Clojure (or other lisps) will be helpful.\\n\\n## Getting Started\\n\\nWriting Clojure code is pretty simple and doesnâ€™t require much boilerplate. We will need a few dependencies though.\\n\\n### Installing Dependencies\\n\\n Install Clojure by following this guide: \\n\\n[https://clojure.org/guides/getting_started](https://clojure.org/guides/getting_started)\\n\\nThen install shadow-cljs:\\n\\n[https://github.com/thheller/shadow-cljs](https://github.com/thheller/shadow-cljs)\\n\\n### Initialize Project\\n\\nI like to keep all my projects under `~/Developer`, so I run this from there, but from whichever directory you want to create your project in, run the following code in your terminal:\\n\\n```\\nnpx create-cljs-project hello-web3\\n```\\n\\n \\n This will create a new directory called `hello-web3` and within it create some of the files we need to get started.\\n\\nOne of the quirks Clojurescript inherited from Java is namespacing and directory structure.\\n\\nCreate the following file: `src/main/helloweb3/frontend/app.js` and put this in it:\\n\\n```\\n(ns helloweb3.frontend.app)\\n\\n(defn init []\\n  (println \\\"Hello Web3\\\"))\\n```\\n\\nIn `shadow-cljs.edn`, replace the empty `:builds` map with the following:\\n\\n```\\n{\\n...\\n  :builds\\n  {:frontend\\n   {:target :browser\\n    :modules {:main {:init-fn helloweb3.frontend.app/init}}\\n    }}}\\n```\\n\\nCreate the file `public/index.html`\\n\\n```\\n<!doctype html>\\n<html>\\n  <head>\\n    <meta charset=\\\"utf-8\\\" />\\n    <title>hello web3</title>\\n  </head>\\n  <body>\\n    <div id=\\\"root\\\"></div>\\n    <script src=\\\"/js/main.js\\\"></script>\\n  </body>\\n</html>\\n```\",\"timestamp\":1639175770,\"title\":\"Writing Web3 Apps with Clojurescript\"},\"digest\":\"G_FSE_n3OMNXXgcJpWkj3DDLk9WCwPUq3WEYxApugUI\",\"authorship\":{\"contributor\":\"0x8A2738252bE6Eeb8F1eD0a302c61E7a81b09f48C\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"dOAovQfJrzafemVhKaVEkdC9Bg9rT31LE5Mi9ikTGkM\\\",\\\"y\\\":\\\"O7ll0SdhPjPQN62k1cGBDfJESISBATLxGRX2vWm9HsE\\\"}\",\"signature\":\"dOWBx5nA37xCXW7JHbid5EMW1yjsRE7GYZyRD4jEhdu_VkB_JzpDfasXioQVfqOBz6MiXJqBr1ZliazP6Hde0Q\",\"signingKeySignature\":\"0xbf1f4791fb97c32a1e0ad1642247709db6678a94754389c60d439ac36c135ca2290683f44a41123cdc2a50ee38558292b95bb1e797f9f42e8b20bb437a3d7aac1b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"dOAovQfJrzafemVhKaVEkdC9Bg9rT31LE5Mi9ikTGkM\\\",\\\"y\\\":\\\"O7ll0SdhPjPQN62k1cGBDfJESISBATLxGRX2vWm9HsE\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"G_FSE_n3OMNXXgcJpWkj3DDLk9WCwPUq3WEYxApugUI\"}"