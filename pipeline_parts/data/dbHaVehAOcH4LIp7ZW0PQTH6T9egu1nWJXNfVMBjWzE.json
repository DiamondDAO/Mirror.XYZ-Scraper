"{\"content\":{\"body\":\"Optimizing Solidity code allows users to pay less transaction fees when they are interacting with dApps, however mastering *gas golfing* requires some tools and practice. Here comes Marmite: a Hardhat plugin helping developers perform gas cost comparisons among different Solidity code snippets.\\n\\n> \\\"You can cook good Solidity recipes with marmite.\\\"\\n>\\n> * Clément Lakhal, Chief of Protocol at Primitive\\n\\n## Overview\\n\\nAround Christmas last year, [transmissions11](https://twitter.com/transmissions11) offered us one of the best gifts a team of Solidity developers could ever dream of: pull requests full of gas optimizations!\\n\\nThis kind of spawned in us a desire to gas golf our contracts even deeper, but we quickly realized that we didn’t have a proper tool to help us test different Solidity implementations and compare the gas costs.\\n\\nSo after sending our smart-contracts to a final audit (performed by [Trail Of Bits](https://www.trailofbits.com/) team), we decided that it was time to build this new tool!\\n\\n## What’s the soup?\\n\\nMarmite allows you to write different implementations of some Solidity code directly in your contracts, and then obtain a gas cost comparison among them.\\n\\nThese declarations are done using the tags `@start<Implementation-name>` and `@end`:\\n\\n![Inline solidity comparisons](https://images.mirror-media.xyz/publication-images/NkQNSF_5WWyeR3XVo3SlR.png?height=740&width=1124)\\n\\n*Note: Implementations are meant to be used during the process of gas optimization and should not be kept in final contracts.*\\n\\nOnce you’ve done that, the next step is simply to run the `golf:contract` command:\\n\\n![Gas comparison using Marmite](https://images.mirror-media.xyz/publication-images/-tyilyKz0UKQwwLfWf_Bz.png?height=615&width=960)\\n\\nIf you have a more complex setup (with multiple contracts deployed) or a specific environment, you can write a script using the Marmite context function:\\n\\n![Customizing the gas comparison](https://images.mirror-media.xyz/publication-images/qRjpn5h6iPdovdaJOe077.png?height=526&width=1234)\\n\\nAfter that, you can use the `golf:script` task to execute the script:\\n\\n## Conclusion\\n\\nMarmite offers a simple and flexible way to compare gas costs directly in your contracts, and in case you were wondering: it supports any Solidity versions!\\n\\nIf you want to try it out, check out the [README](https://github.com/primitivefinance/hardhat-marmite) on GitHub for the installation and usage instructions.\\n\\nHappy gas golfing!\\n\\n[Marmite on GitHub](https://github.com/primitivefinance/hardhat-marmite)\\n\\n[Primitive Discord](https://discord.com/invite/gYDVGNPVz8)\",\"timestamp\":1642110137,\"title\":\"Introducing Marmite: Hassle-free Solidity gas cost comparisons\"},\"digest\":\"n_1iyPB8IUQypWCud5B2MjRHEARYp62KODP9cpgy92s\",\"authorship\":{\"contributor\":\"0x801D5e44960C5934181B04290Ec7F6A27d96cFF1\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"rNI6RdEoz01JsZS0LDCnviIM5BvXREZL8fuw3TAsT8w\\\",\\\"y\\\":\\\"7teVnvM2NWmwIlVenQoFAZCL2n6pWFFKg83rUzOt0fg\\\"}\",\"signature\":\"j7fFkmqusdkKxUbmqK59Ib_6h_juBxQIZJQ8BjxlBT_-Bg8nOTDWTcIpNNGcMxpgHFAyy52Rb0eE0IbUYnaekQ\",\"signingKeySignature\":\"0x28e65e49ca8cc93551c3d182b2077f1809c4597e5dfc1b35b82f6726ef2c6af479ea51bc9b2173f5271d50440a13edc8b38c6a97bebb0bd8b17bf1eca17d31071c\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"rNI6RdEoz01JsZS0LDCnviIM5BvXREZL8fuw3TAsT8w\\\",\\\"y\\\":\\\"7teVnvM2NWmwIlVenQoFAZCL2n6pWFFKg83rUzOt0fg\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"iHeEodUc7YkXp4AiB6g8pNHepUeE2bOTLxCC5FnsmNA\"}"