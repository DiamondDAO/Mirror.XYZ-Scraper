"{\"content\":{\"body\":\"Leetcode [271题](https://leetcode.com/problems/encode-and-decode-strings/)\\n\\n## 如何讲一组字符串编码串联成一个字符串， 然后再解码成原来的一组字符串呢？\\n\\n两个很实用的解法: 1) 思路一： 把字符与分隔符区别开来。 Base64, 把原字符串转化成base64， 这样就不会与分隔符冲突了 2) 思路二： 告诉解码器每一个字符串的起始位置与长度。 Chunked Transfer Encoding， 借助http1.1 chunked transfer encoding的设计思想， 我们在每个字符串之前加上字符串长度描述符；这样Decode过程就能按长度描述符准确的切割后面的字符串了.\\n\\n    例子:  \\n    input:  'good', 'morning'\\n    Encode: [0004good0007morning]\\n\\n<!---->\\n\\n    # Base64\\n    class Codec:\\n        def encode(self, strs: [str]) -> str:\\n            \\\"\\\"\\\"Encodes a list of strings to a single string.\\n            \\\"\\\"\\\"\\n            result=\\\"\\\"\\n            for string in strs:\\n                bs = string.encode('ascii')\\n                b64 = base64.b64encode(bs)\\n                result = result + ',' + b64.decode('ascii')\\n            return result\\n\\n        def decode(self, s: str) -> [str]:\\n            \\\"\\\"\\\"Decodes a single string to a list of strings.\\n            \\\"\\\"\\\"\\n            s = s[1:]\\n            strs = s.split(',')\\n            result = []\\n            for b64 in strs:\\n                decode_obj = base64.b64decode(b64)\\n                result.append(decode_obj.decode('ascii'))\\n            return result\\n\",\"timestamp\":1638850294,\"title\":\"字符串的编码与解码 - Joly的树洞\"},\"digest\":\"GmAATBUt8Q5OMrNsvkv-lQlhNRi-hnYW01AA0Pxr3tU\",\"authorship\":{\"contributor\":\"0x000f9987b3352802ad6934402Da1a215B1eCEf13\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"VLQ2j77wqZiHculTcu1z23C1dJlxtV6sNJDaBTMYjEQ\\\",\\\"y\\\":\\\"n06vwPjlJg1lhNOc_HF-b7n1x9i5nNbHYDw8U2KgzYg\\\"}\",\"signature\":\"WIzsI7FWz7qmiih-wbbjoqB8SeeUeJWVsKegbdGEWT4QA6Qe6Vkwn0xykUeLLehTBFl1ccmhe01rE7lGKWWAXw\",\"signingKeySignature\":\"0x14caf510d0b1c981d6fcea83d9c45b468e6d79c39adfed4db1e07fc79088fbfa4da96fbe42892ad4f2f4f42d94630f83d5c14233f926a06c99d333a9474eb3071b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"VLQ2j77wqZiHculTcu1z23C1dJlxtV6sNJDaBTMYjEQ\\\",\\\"y\\\":\\\"n06vwPjlJg1lhNOc_HF-b7n1x9i5nNbHYDw8U2KgzYg\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"GmAATBUt8Q5OMrNsvkv-lQlhNRi-hnYW01AA0Pxr3tU\"}"