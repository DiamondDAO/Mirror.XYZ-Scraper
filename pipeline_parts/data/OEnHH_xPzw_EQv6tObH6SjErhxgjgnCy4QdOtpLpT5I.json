"{\"content\":{\"body\":\"编按：本文是QuarkChain创始人&CEO周期博士在以太坊技术论坛ethresear.ch发布的一篇技术文章，介绍了一个高效的Merkle tree方案设计。\\n\\n原文链接：\\n\\nhttps://ethresear.ch/t/efficient-on-chain-dynamic-merkle-tree/11054\\n\\n# 简介\\n\\n遵循以太坊2.0的无状态客户端的思想，我们实现了一个高效的链上动态Merkle tree（默克尔树）：\\n\\n* 链上包含性验证；\\n* 链上添加/就地更新；\\n* O(1) 存储空间成本；\\n* 更新/添加操作的 O(1) 存储写入成本。\\n\\n# 背景\\n\\nMerkle tree广泛用于以极低存储成本在链上大量成员身份验证，例如 Uniswap 链上空投。无需上传链上所有用户大量的空投信息（比如，地址、数量），空投可以通过以下方式显著节省成本：\\n\\n* 将树的根哈希存储在链上\\n* 使用链下计算证明用户奖励\\n* 用户通过链上提交证明来获取奖励\\n\\n此外，链上动态 Merkle tree 正在引起人们的兴趣。著名的会计事务所安永（Ernst & Young ，EY) 开发了一种仅能在链上添加的动态  Merkle tree  (https://github.com/EYBlockchain/timber 5)。它通过只存储“边界”节点而不是树的所有节点来节省树的存储成本，但是，添加操作的写入成本为 O(log2(N))，这可能会在 EVM 上消耗相当大的 gas。\\n\\n# 基本想法\\n\\n类似于现有的静态Merkle tree，它使用默克尔证明来验证包含性，链上动态树的基本思想是在包含验证后重用默克尔证明来更新树的根哈希。树更新的步骤如下：\\n\\n1. 给定 LeafIndex、oldLeafHash、newLeafHash、oldRootHash、proof\\n2. 用 oldLeafHash 和 proof 计算 rootHash。如果计算出的rootHash != oldRoothHash，则包含验证失败；否则继续\\n3. 使用 newLeafHash 和 proof 计算 newRootHash，其中证明被重用，newRootHash 将是更新后树的根哈希\\n\\n请注意，只有 newRootHash 被写入区块链，因此空间和写入的成本是 O(1)。\\n\\n# 应用\\n\\n## ERC20\\n\\nERC20 标准可以修改为 Merklize （账户，余额）的树。任何造币/销毁/转移操作都需要 Merkle 证明。Merklized ERC20 的应用或许可以：\\n\\n* 链上投票——治理提案投票可以廉价地使用 ERC20 快照并根据快照计算链上投票，而不需要保留 ERC20 余额变化（Compound）或链下快照的所有历史记录。\\n* 远程流动性挖掘——远程链上的合约对本地 ERC20 用户进行空投/流动性挖矿，其中 ERC20 快照通过去中心化预言机定期转发到另一条链。\\n\\n示例代码可以在这里找到：\\n\\nQuarkChain/DynamicMerkleTree/blob/abe6c7ee8f2fef105649943d5e329e5f5e697f8d/contracts/MerklizedERC20.sol\\n\\n```\\n/SPDX-License-Identifier: MITpragma solidity ^0.8.0;\\nimport \\\"hardhat/console.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";import \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";import \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"./DynamicMerkleTree.sol\\\";\\ncontract MerklizedERC20 is Context, IERC20, IERC20Metadata {    mapping(address => uint256) private _balances;\\n    mapping(address => uint256) private _indices1;\\n    uint256 private _totalSupply;\\n    string private _name;    string private _symbol;\\n```\\n\\n \\n \",\"timestamp\":1635430350,\"title\":\"QuarkChain创始人&CEO周期博士：高效的链上动态 Merkle Tree\"},\"digest\":\"0sVFGV5kVTvz0Cj_wyo68znnMccSUnWl6jJMAxrqQ58\",\"authorship\":{\"contributor\":\"0xC5b41fB105883bCd59cEef072B5b6BdbC5df31dA\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"jp5AW2VlhRZubD8d2rvlpDaYH6xBymTHdBhL-OKqj-s\\\",\\\"y\\\":\\\"WDwLf-rfq94HG0FyBR6wHfkjp3QEeRoMuue-6vSgR2w\\\"}\",\"signature\":\"7CvYgBQfBTNlYd9X4XNQyxpvascILCyQRfdcp_H_7LK0sCa--FKSANgfqOn_e6bQEog7iqTYw8AVtQuKptBemA\",\"signingKeySignature\":\"0x88627697b3aecfe2e72bf63c89d232ee2c858f6cdba4c1ccb38d72665faabb763402f9cbf7cbed5cb5d6c485a405dbc094851efc889f84cf2c37e689a87fc3ea1c\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"jp5AW2VlhRZubD8d2rvlpDaYH6xBymTHdBhL-OKqj-s\\\",\\\"y\\\":\\\"WDwLf-rfq94HG0FyBR6wHfkjp3QEeRoMuue-6vSgR2w\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"0sVFGV5kVTvz0Cj_wyo68znnMccSUnWl6jJMAxrqQ58\"}"