"{\"content\":{\"body\":\"## Introduction\\n\\nScaffold-eth is a template for Ethereum dApp, and a combination of the best dApps. Scaffold-eth can help developers build app with efficiency and less bugs. It is a great resource for beginner developers of web3.0 dApp.\\n\\nScaffold-eth has the following components:\\n\\n* **hardhat:** run local Ethereum network to deploy and test smart contract\\n* **React:** build front end with preset UI components and functional hooks\\n* **Ant:** build customized UI and use Bootstrap or other libraries for front end\\n* **Surge:** deploy and publish projects\\n* Tenderly / The Graph / Etherscan / Infura / Blocknative...\\n* Supports for L2 / Sidechains\\n\\n## Swift deployment\\n\\n### Environment\\n\\nScafford Eth is based on Node.js, so you need to install `node.js` and `yarn`.\\n\\n### Deploy Scaffold-eth scaffold\\n\\n1. Fetch scaffold source code\\n\\n```bash\\ngit clone https://github.com/austintgriffith/scaffold-eth.git\\n```\\n\\n1. Open up 3 terminals\\n\\n> **TIPS:** Many Terminal app supports split screen feature.\\n\\n![image-20210924203810255](https://tva1.sinaimg.cn/large/008i3skNly1gurzzs4lelj61by0u075u02.jpg)\\n\\n1. run 👷‍ Hardhat chain in the first terminal:\\n\\n```bash\\ncd scaffold-eth\\nyarn install\\nyarn chain\\n```\\n\\n![](https://img-blog.csdnimg.cn/b0b2f44277d54f72af11266406f00d8a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAOTlLaWVz,size_20,color_FFFFFF,t_70,g_se,x_16)\\n\\n1. deploy the smart contract at `/scaffold-eth/packages/hardhat/contracts/` in the second terminal:\\n\\n```bash\\ncd scaffold-eth\\nyarn deploy\\n```\\n\\n![](https://img-blog.csdnimg.cn/955e5f40c2a6496b9d36ab3d2793527d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAOTlLaWVz,size_20,color_FFFFFF,t_70,g_se,x_16)\\n\\n1. run front end app in the third terminal:\\n\\n```bash\\ncd scaffold-eth\\nyarn start\\n```\\n\\n![](https://img-blog.csdnimg.cn/62f4b4be6800401f959c27591ef67054.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAOTlLaWVz,size_20,color_FFFFFF,t_70,g_se,x_16)\\n\\nThe sample contract under main branch stores and read the values. You can find the contract at `/scaffold-eth/packages/hardhat/contracts/` and modify it then redeploy.\\n\\n> **TIPS：**\\n>\\n> If you are interested in other contracts, you can checkout other branch to deploy different Dapp services.\\n> [switchable branches with different contracts](https://github.com/scaffold-eth/scaffold-eth/branches/active)\\n> for example nft contract branch <https://github.com/scaffold-eth/scaffold-eth/tree/simple-nft-example>\\n\\n## play with the application\\n\\nBack to the previous process. Now we have our contract deployed and front end and local chain network running.\\n\\nBelow is the code of the deployed contract.\\n\\n```javascript\\npragma solidity >=0.8.0 <0.9.0;\\n//SPDX-License-Identifier: MIT\\n\\nimport \\\"hardhat/console.sol\\\";\\n//import \\\"@openzeppelin/contracts/access/Ownable.sol\\\"; //https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\\n\\ncontract YourContract {\\n\\n  //event SetPurpose(address sender, string purpose);\\n\\n  string public purpose = \\\"Building Unstoppable Apps!!!\\\";\\n\\n  constructor() {\\n    // what should we do on deploy?\\n  }\\n\\n  // Storing purpose varible\\n  function setPurpose(string memory newPurpose) public {\\n      purpose = newPurpose;\\n      console.log(msg.sender,\\\"set purpose to\\\",purpose);\\n      //emit SetPurpose(msg.sender, purpose);\\n  }\\n}\\n```\\n\\nThe contract sets a public string variable purpose. The default value for purpose is \\\"Building...\\\" It also provides a setPurpose method to modify the purpose variable.\\n\\n## Conclusion\\n\\nWe built our Dapp with the scaffold scaffold-eth. Using hardhat, we can deploy local test network, switch networks and deploy your contracts in any networks.\\nHere is the Quickstart for scaffold-eth.\\n\\n## About authors\\n\\n**Author:** Core member of Nonce Geek Studio.\\n\\n**Contact the author:** \\n\\nWeChat: thf056\\nQQ: 1290017556\\nEmail: [1290017556@qq.com](mailto:1290017556@qq.com)\\n\\n> Github: <https://github.com/99kies>\\n>\\n> CSDN: <https://blog.csdn.net/qq_19381989>\\n\\n**Translater：**\\n\\n[msfew](https://noncegeek.com/namecards/msfew.svg?display=iframe)\",\"timestamp\":1635347301,\"title\":\"Scaffold-Eth Quickstart | web3.0 dApp Dev 0x03\"},\"digest\":\"FxjGNBnf6IqPwf9BTObNktCrkkPfwfVo0khHmBui6fU\",\"authorship\":{\"contributor\":\"0x769699506f972A992fc8950C766F0C7256Df601f\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"KUpydL26FzlItw03NThMjEIT5T4rCIB6Ac3PG31yEHI\\\",\\\"y\\\":\\\"5Xn77xdlMUSJDlFeEsR9YjUQ1R17B-oLmJyMpCq-Rl0\\\"}\",\"signature\":\"_QDjtk4P53IgHtUPPXlwNUQ3L7GDU-3RIxz43u1mbNoKFUQe8k9vfiLzxUEK7cEeLi6xoJ_BM4yBfuHVEQ30ug\",\"signingKeySignature\":\"0x3d9b22eb42b9ee4007a5df0d91672d88bb452c2924ca38e485b0dcd8733561442e37dad2eef12f2fe6c181f14fba66c70e86e50000d816837cef983f01b7b8fb1b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"KUpydL26FzlItw03NThMjEIT5T4rCIB6Ac3PG31yEHI\\\",\\\"y\\\":\\\"5Xn77xdlMUSJDlFeEsR9YjUQ1R17B-oLmJyMpCq-Rl0\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"FxjGNBnf6IqPwf9BTObNktCrkkPfwfVo0khHmBui6fU\"}"