"{\"content\":{\"body\":\"一、基本概念\\n\\ndip ： Density independent pixels ，设备无关像素。 \\n dp ：就是dip \\n px ： 像素 \\n dpi ：dots per inch ， 直接来说就是一英寸多少个像素点。常见取值 120，160，240。我一般称作像素密度，简称密度 \\n density ： 直接翻译的话貌似叫 密度。常见取值 1.5 ， 1.0 。和标准dpi的比例（160px/inc） \\n 分辨率 ： 横纵2个方向的像素点的数量，常见取值 480X800 ，320X480 \\n 屏幕尺寸： 屏幕对角线的长度。电脑电视同理。 \\n 屏幕比例的问题。因为只确定了对角线长，2边长度还不一定。所以有了4：3、16：9这种，这样就可以算出屏幕边长了。\\n\\n二、工具类实现\\n\\n```\\npublic class DensityUtils\\n{\\n    private DensityUtils()\\n    {  \\n        /* cannot be instantiated */\\n        throw new UnsupportedOperationException(\\\"cannot be instantiated\\\");\\n    }\\n\\n    /**\\n     * dp转px \\n     *\\n     * @param context\\n     * @param val\\n     * @return\\n     */\\n    public static int dp2px(Context context, float dpVal)\\n    {\\n        return (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,\\n                dpVal, context.getResources().getDisplayMetrics());\\n    }\\n\\n    /**\\n     * sp转px \\n     *\\n     * @param context\\n     * @param val\\n     * @return\\n     */\\n    public static int sp2px(Context context, float spVal)\\n    {\\n        return (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP,\\n                spVal, context.getResources().getDisplayMetrics());\\n    }\\n\\n    /**\\n     * px转dp \\n     *\\n     * @param context\\n     * @param pxVal\\n     * @return\\n     */\\n    public static float px2dp(Context context, float pxVal)\\n    {\\n        final float scale = context.getResources().getDisplayMetrics().density;\\n        return (pxVal / scale);\\n    }\\n\\n    /**\\n     * px转sp \\n     *\\n     * @param fontScale\\n     * @param pxVal\\n     * @return\\n     */\\n    public static float px2sp(Context context, float pxVal)\\n    {\\n        return (pxVal / context.getResources().getDisplayMetrics().scaledDensity);\\n    }\\n```\",\"timestamp\":1641729723,\"title\":\"android dpi 、 dip 、分辨率、屏幕尺寸、px、density 关系以及换算\"},\"digest\":\"YAC7kGv8LvbncdQDAUGw2rIKQc0QwEj6nyZsCOKooQo\",\"authorship\":{\"contributor\":\"0x3CdD11377392664bEC71186e30c8E105ec54DAB7\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"nEhsFBBsEppcWR3KfdD_H-UZH8Xilwqv7nOQmY-gBvs\\\",\\\"y\\\":\\\"Ua7-c3s9LJfShrVdB2pkSRmJnqqkrxHAGtBh9slFsEk\\\"}\",\"signature\":\"VqD6pkxMDf1QZDJGZY2G6V7L7M12WRxIUxh3Ss0WmVLWtSakjEQEcz-iCjfIs_yR6H5py7lZK0O6v8nJ6TD5wA\",\"signingKeySignature\":\"0x94dde04b37a55efbf0c539e2c1d935347fd4c4efbb1cc9d6e8921be127dd50c31efaa38756c4f1c2fa338c562bd53fd5ff55882b48501cdcfd739aac0d2d7f1e1c\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"nEhsFBBsEppcWR3KfdD_H-UZH8Xilwqv7nOQmY-gBvs\\\",\\\"y\\\":\\\"Ua7-c3s9LJfShrVdB2pkSRmJnqqkrxHAGtBh9slFsEk\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"YAC7kGv8LvbncdQDAUGw2rIKQc0QwEj6nyZsCOKooQo\"}"