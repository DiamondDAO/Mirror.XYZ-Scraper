"{\"content\":{\"body\":\"In this guide, we will be walking through the process of setting up a single node, private Ethereum blockchain using the Geth client. The purpose of this guide is to help readers understand how the blockchain works from the miners' perspective and what goes into the mining process. Although this guide touches on key areas of the Ethereum mining process, it is by no means an exhaustive guide.\\n\\nIt is also important to note that the Ethereum tokens which will be mined using this guide are not useful outside our private blockchain and can not be transferred or used on the public Ethereum network.\\n\\n## What is Ethereum\\n\\nEthereum is a decentralized platform that runs smart contracts; applications that run exactly as programmed without the possibility of downtime, censorship, fraud, or third-party interference.\\n\\nIt is a technology that is home to digital money, global payments, and applications. The community has built a booming digital economy, bold new ways for creators to earn online, and so much more. It's open to everyone, wherever you are in the world – all you need is the internet.\\n\\n## What is Geth\\n\\nGeth, also known as Go-Ethereum, is a command-line tool for running an Ethereum node; it is implemented in the Go programming language and is one of the three original implementations of the Ethereum protocol alongside Aleth (C++) and Trinity (Python).\\n\\n## Installing and running Geth\\n\\nGeth supports a variety of Operating systems and instructions on how to download and install Geth for your OS can be found [here](https://geth.ethereum.org/docs/install-and-build/installing-geth#install-on-windows).\\n\\nAfter installing Geth, Open a command-line interface and create a `private-blockchain` directory to house the blockchain data for our new private blockchain and navigate into it:\\n\\n```\\nmkdir private-blockchain && cd private-blockchain\\n```\\n\\nTo verify that Geth was properly installed run:\\n\\n```\\ngeth\\n```\\n\\n![Geth Initialisation](https://res.cloudinary.com/practicaldev/image/fetch/s--sRqC0Wrb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kv5uvgx99el9jrxyrqw1.png)\\n\\n**Note:** Geth attempts to download an entire blockchain into your PC which might take several days as well as use up a ton of computer disk space, Since mining the public Ethereum network isn’t the purpose of this guide, use “Control C” to stop this process.\\n\\n## Setting up a private Ethereum blockchain\\n\\nTo clarify what we’ll be doing here:\\n\\n1. We will be creating two Ethereum accounts on Geth: `account 1` and `account 2`. The first account will serve as our master account and will hold any Ethereum token (expressed in [Wei](https://www.investopedia.com/terms/w/wei.asp)) we earn from mining new blocks on this private blockchain.\\n2. We’ll also be running a single node private blockchain on our local computer.\\n3. We’ll go ahead and mine some new Ethereum blocks on our private blockchain and be rewarded with some tokens (Wei).\\n4. Finally, we will create an Ethereum transaction by sending some earned tokens from our master account (account 1) to account 2.\\n\\n#### 1. Creating two new Ethereum accounts on Geth\\n\\nTo create `Account 1`, run the command:\\n\\n```\\ngeth account new\\n```\\n\\n![Creating an Ethereum account on Geth](https://res.cloudinary.com/practicaldev/image/fetch/s--UWboJBv9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ubcga7wy7wt4ywho9urm.png)\\n\\n#### 2. Creating a single node private blockchain\\n\\nWe’ll be needing a genesis block to create our blockchain network, don’t know what a genesis block is? Well, A Genesis Block is the name given to the first block of a blockchain, such as Bitcoin. A blockchain consists of a series of blocks that are used to store information related to transactions that occur on a blockchain network. Each of the blocks contains a unique header, and each such block is identified by its block header hash individually.\\n\\nInside the `private-blockchain` directory, create a json file with the name `genesis-block.json` and copy in the below content:\\n\\n```\\n{\\n  \\\"config\\\": {\\n    \\\"chainId\\\": 15,\\n    \\\"homesteadBlock\\\": 0,\\n    \\\"eip150Block\\\": 0,\\n    \\\"eip155Block\\\": 0,\\n    \\\"eip158Block\\\": 0,\\n    \\\"byzantiumBlock\\\": 0,\\n    \\\"constantinopleBlock\\\": 0,\\n    \\\"petersburgBlock\\\": 0,\\n    \\\"ethash\\\": {}\\n  },\\n  \\\"difficulty\\\": \\\"1\\\",\\n  \\\"gasLimit\\\": \\\"8000000\\\",\\n  \\\"alloc\\\": {},\\n}\\n```\\n\\nNext, initialize Geth using our newly created `genesis-block.json` file like so:\\n\\n```\\ngeth --datadir . init genesis-block.json\\n```\\n\\n![Initialise Geth with a genesis block](https://res.cloudinary.com/practicaldev/image/fetch/s--1OfGHvKW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fnsio2sjwooopsez1eb3.png)\\n\\nNotice how the last line says “Successfully wrote genesis state”, this simply means we’ve successfully created our private blockchain, we can go ahead and get it started by running:\\n\\n```\\ngeth --allow-insecure-unlock --datadir . --keystore ~/Library/ethereum/keystore --networkid 4568 --http --http.addr '0.0.0.0' --http.corsdomain \\\"*\\\" --http.port 8502 --http.api 'personal,eth,net,web3,txpool,miner' --mine --miner.etherbase=YOUR_ETHEREUM_ADDRESS_HERE\\n```\\n\\n![Starting our private blockchain](https://res.cloudinary.com/practicaldev/image/fetch/s--roSGvPTA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2y028ua9dmadwsjcb1r3.png)\\n\\n**Note:** running the above command starts an interactive session that continues to print stuff to the console, thereby not allowing us to type in new commands. Leave it running that way and open a new console, then navigate into the `private-blockchain` directory and type in this command to begin interacting with our private blockchain:\\n\\n```\\ngeth attach geth.ipc\\n```\\n\\nThis will load the [web3](https://web3js.readthedocs.io/en/v1.5.2) module into the console and expose a ton of functions. Let us check the account balances for the two newly created accounts using the exposed functions, run:\\n\\n```\\neth.getBalance(eth.accounts[0])\\n\\n\\n\\neth.getBalance(eth.accounts[1])\\n```\\n\\nBoth account balances should return 0, this is because we’re yet to perform any mining activity.\\n\\n#### 3. Mining Ethereum blocks\\n\\nTo begin mining on our private blockchain, we simply need to run:\\n\\n```\\nminer.start()\\n```\\n\\nAllow it to run for a while and then stop the process with:\\n\\n```\\nminer.stop()\\n```\\n\\nNotice that you’ve been rewarded with some tokens (depending on how long you left it running) for mining new blocks, this can be verified by checking the balance of `account 1`, our master account.\\n\\n```\\neth.getBalance(eth.accounts[0])\\n```\\n\\n#### 4. Sending Tokens (Wei) from one account to another\\n\\nBefore we can transfer tokens between accounts, we will need to authenticate as the owner of the sending account, in this case, `account 1`.\\n\\n```\\npersonal.unlockAccount(eth.accounts[0])\\n```\\n\\nThis will prompt you to enter your password. Once that is completed, we can go ahead and transfer some tokens to `account 2`.To transfer tokens, we simply use `eth.sendTransaction()` which accepts a bunch of parameters but most are optional and can be left out as reasonable defaults are used under the hood.In your terminal, run:\\n\\n```\\neth.sendTransaction({from: eth.accounts[0], to: eth.accounts[1], value: 500000})\\n```\\n\\n![Sending ether from account 1 to account 2](https://res.cloudinary.com/practicaldev/image/fetch/s--vSXXu2Ug--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gynq5nzu1jce9pzidueg.png)\\n\\n* I used accounts on indices 6 and 7 as opposed to indices 0 and 1, this is because I have performed these tasks several times resulting in me having more than 2 accounts.\\n* Value here is in Wei (default) (Where 1 Ether equals 1 x 10 ^ 18 Wei).\\n\\nAt this point, the transaction has been created but has not been mined. Remember we ran `miner.stop()` just before creating this transaction, what happens under the hood is that this transaction is added to the mempool (queue) of transactions waiting to be added to a block by a miner, and given that we are the only miners on this network, we will have to mine this transaction ourselves. Now go ahead and mine a new block by running:\\n\\n```\\nminer.start()\\n```\\n\\nGive it a couple of seconds then run:\\n\\n```\\nminer.stop()\\n```\\n\\nYou can verify that some tokens were sent to the receiving account by running:\\n\\n```\\neth.getBalance(eth.accounts[1])\\n```\\n\\nThat's it, you've successfully set up and mined a single node, private Ethereum blockchain.\\n\\nReferences<https://www.investopedia.com/terms/g/genesis-block.asp>ConsenSys blockchain developer Bootcamp resource[https://geth.ethereum.org](https://geth.ethereum.org/)<https://ethereum.org/en>\",\"timestamp\":1638277055,\"title\":\"A Guide to Private Ethereum Mining with Geth (Go-Ethereum)\"},\"digest\":\"EJOWp8qoqsNNFlWrS_DZBKkewiCzuuznzl4DpRi9H0o\",\"authorship\":{\"contributor\":\"0x5F0ACdE83F858014bc9723B356095E28fc8880B1\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"bmNOQZVLimdRFgpvvjB7sNSQXc5v7Er8qb_tZ2hOyYI\\\",\\\"y\\\":\\\"s8x1k8OsgHFXUubNkW-YDFJwbDNNXjSGm6OxS9jPkIA\\\"}\",\"signature\":\"JCAPB6HMWFLZSFAHm_lPQ2OA7wFXoYGzpsXKr7Hnlt4uULz4LWGM1gPZndByWoxU-aDNTnZQ0ZHULVXDCGOAIg\",\"signingKeySignature\":\"0xe51d4958460582f650dc4120b26d2e187e3665e7d552c4b2ab43b7c6db1bce4810a500b39274c1766669748f276a2f8abc0d21684e528d24f32b2dd2825233ee1b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"bmNOQZVLimdRFgpvvjB7sNSQXc5v7Er8qb_tZ2hOyYI\\\",\\\"y\\\":\\\"s8x1k8OsgHFXUubNkW-YDFJwbDNNXjSGm6OxS9jPkIA\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"82tNmOWqsGG44C7r8RwqHSEOBdfsRRpYLGpSqRY05_M\"}"