"{\"content\":{\"body\":\"注：原文作者是Celestia联合创始人Mustafa Al-Bassam。\\n\\n感谢 Matthew Di Ferrante 的原始想法，以及John Adler 和 Federico Kunze Küllmer 对这篇文章提供的评论。\\n\\n在这篇帖子中，我们将讨论EVM rollup的最佳结算层是什么样的，以及如何使用 Celestia、Evmos以及Cosmos（作为基于EVM应用的模块化堆栈的一部分）来构建它。\\n\\n我们所说的结算层是指什么？ rollup的结算层是一条链，其中rollup有一个信任最小化的双向桥梁，并在结算层上使用一个争议解决合约。这允许以信任最小化的方式在rollup和结算层之间，或通过结算层在rollup之间传输token。\\n\\n目前，rollup是使用的以太坊主链进行结算，然而，以太坊主链并不是一个理想的rollup 结算层，因为它与直接使用链进行智能合约交易的非rollup 应用共享。因此，与专门的结算层相比，以太坊主链是非专业化的，并且降低了扩容效果。\\n\\n正如Matt在他的[文章](https://forum.celestia.org/t/increasing-scalability-of-the-evm-for-rollups-by-restricting-state-and-contract-set/78)中解释的，rollup理想的专用结算层将会受到限制，其只允许（a）rollup智能合约，（b）rollup之间的简单传输，因此会禁止非rollup应用使用这个结算层，或使其非常昂贵。\\n\\n而这与[geth团队的观点](https://notes.ethereum.org/EH_xVCD8SnaLCEDrXxUyYA)‌不同，他们的目标是让以太坊链同时适用于非rollup和rollup应用：\\n\\n> “具体而言，我们担心由于EIP-4488方案的二维性质，其如此支持rollup交易，以至于非rollup交易将不可能使用这个区块链。该EIP应提供更多的证据来证明情况并非如此。”\\n\\n我们提议通过使用 [Optimint](https://github.com/celestiaorg/optimint)‌（而不是Tendermint）来部署一个基于Evmos的区块链（一个内置EVM 的 Cosmos SDK区块链），该链将作为一个Celestia rollup实现。Optimint 是 Tendermint BFT 的直接替代品，它使开发人员能够部署使用现有共识和数据可用性层的新链（例如Celestia），从而使新链成为一个rollup。\\n\\n我们称之为“结算rollup”，由于结算rollup是一个受限制的EVM环境，我们设想该状态可通过单轮欺诈证明来验证欺诈。\\n\\n然后可以将Rollup部署在Evmos 结算rollup上，作为一个递归rollup（rollup的rollup）。每个rollup都会有一个与结算rollup的双向信任最小化桥梁，类似于以太坊rollup。目标是可重新部署今天存在于以太坊上的相同rollup合约和软件，因此移植rollup所需的工作是很少的。这意味着rollup使用结算rollup上的 calldata，结算rollup使用 Optimint 对数据进行批处理并将其发布到 Celestia。\\n\\n结算rollup需要一个抗审查的区块生产 leader选择机制，因为没有“上层”执行环境来构建逃生舱口。目前，几个寻求去中心化区块生产的以太坊 rollup团队正在积极研究这一点。这主要对抵抗DoS攻击是必要的，以防任何人创建需要（免费）分发欺诈证明的区块。\\n\\n## Monorollup\\n\\n使用此结算层的 rollup之一，可能是类似于 Arbitrum One 的通用 EVM“monorollup”，它使用户能够部署任何以太坊智能合约。这将使开发人员能够轻松进入生态系统，并且为他们提供类似于Polygon 的开发体验，他们可轻松地重部署现有合约。然后，如果monorollup拥堵，他们可以使用信任最小化的桥，将他们的合约重部署到他们自己的特定应用rollup上。\\n\\n## 集群间跨链（Intercluster bridging）\\n\\n如果有一个使用了 Celestia/Evmos/Cosmos技术堆栈的rollup想要与另一个非rollup链（比如在IBC 网络中的）进行通信，或者是一个使用不同结算层的rollup（即[集群间通信](https://blog.celestia.org/clusters/)‌），则一个基于委员会的跨链桥是需要的，因为信任最小化的桥是不可能的。但是，理想情况下，结算rollup不会有验证者集或委员会。为了解决这个问题，我们建议将基于委员会的桥运营商和结算rollup的区块生产者解耦。\\n\\n第三方链将运营一个基于委员会的跨链桥。如果结算rollup的EVM可能对跨链桥合约（例如验证大型委员会多重签名或门限签名）过于限制，则桥可以是在结算rollup上的一个rollup，而不是结算rollup本身。\\n\\n这可以通过以下两种方式之一（或者两种方式）来实现：\\n\\n1. 一个Cosmos zone充当“集群间rollup枢纽”，在该hub枢纽中，zone的验证人通过跟踪结算rollup的状态来操作桥梁，并允许通过rollup结算层上的多重签名或门限签名合约，将结算rollup上的资产转移到该zone （可能使用[gravity bridge](https://github.com/cosmos/gravity-bridge)‌）。**Evmos主链可以适合这个角色**。 （见上图）\\n2. 依靠现有的“链间通信即服务”，例如 Axelar 或 Polymer，来完成上述工作。\\n\\n好处：根据结算rollup的欺诈证明机制，也可能允许一个结算rollup到以太坊上的以太坊桥接合约以验证结算rollup欺诈证明（增加安全性），尽管它不会像以太坊rollup那样信任最小化，因为结算rollup的数据可用性与以太坊无关。\\n\\n本文链接：<https://www.defidaonews.com/article/6718750>\",\"timestamp\":1641125863,\"title\":\"一文了解如何用Celestia、Evmos 和 Cosmos构建替代EVM rollup结算层\"},\"digest\":\"PXRI1j8k-V0Wdd2sp8M9Xvgh8JxQp8t48ocDxtIUxn4\",\"authorship\":{\"contributor\":\"0x0F82065867225a157BEe83C97c3854EEAAbdf57F\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"Ogs2s_XlqUTaijAXc9mn82sFDftKffcXcupdDXOcSEM\\\",\\\"y\\\":\\\"hihtsBgujScl38oJ-pR2w8Usu3WOa8Ctt2CwtLrxK2o\\\"}\",\"signature\":\"kenJbBz_NBWxvrIrWb4SpUwrJ20pnTtoJLVXgVnfGacxqAEJPvfugCYsTopxc8UP9puQDv6NDN6PwyvY0eUoHQ\",\"signingKeySignature\":\"0x9d6bc2c891b4f0c6d0f8ffdb282dd02c1c7f65841b06171b3933326c35a2864422cb1def48111cffd9a69e657d1bfaf4d277da12915633c1e01e031ec3ff69c71b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"Ogs2s_XlqUTaijAXc9mn82sFDftKffcXcupdDXOcSEM\\\",\\\"y\\\":\\\"hihtsBgujScl38oJ-pR2w8Usu3WOa8Ctt2CwtLrxK2o\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"PXRI1j8k-V0Wdd2sp8M9Xvgh8JxQp8t48ocDxtIUxn4\"}"