"{\"content\":{\"body\":\"![](https://images.mirror-media.xyz/publication-images/2fdbacd7-0048-44a9-9666-7c7948f940bd.gif?height=293&width=520)\\n\\nOne of the most popular ways for bootstrapping a DeFi project is through Liquidity Mining. Most DeFi projects are two-sided marketplaces for some type of financial service — for example, Compound is a marketplace for borrowers/lenders and Uniswap is a marketplace for LPs/traders. Bootstrapping a new two-sided marketplace is difficult because of the cold-start problem: if there is no demand, there won’t be supply, and if there is no supply there will be no demand. This is where tokens come in handy — projects can incentivize one (or both) sides of the marketplace through distributing their own token to kickstart the demand-supply flywheel. \\n\\nAnother side effect of executing liquidity mining program is that the project is able to distribute their native token to more people. More holders of the token often leads to broader support for the project, or greater level of decentralization if the token is used for governance. This dual-benefit often makes LM programs a no-brainer.\\n\\nHowever, the primary drawback of Liquidity Mining programs is that it often gets farmed and dumped by whales or yield aggregators — the capital committed to providing liquidity often dries up the moment the incentives stop flowing. Projects often find it difficult to have *sustained* benefits from the LM programs after they are done. \\n\\n# Introducing Insurance Mining\\n\\nInstead of simply incentivizing liquidity, what if we could indirectly incentivize usage through subsidizing an insurance market for smart contract failure? For example, we could give out tokens to insurance sellers for a new protocol, attracting tons of liquidity into the insurance selling pool, and on the opposite side providing cheap cover for users of the project. \\n\\nWe can call this *Liquidity Mining Rewards V3.*\\n\\n[https://twitter.com/AndreCronjeTech/status/1426829355532136452](https://twitter.com/AndreCronjeTech/status/1426829355532136452)\\n\\nBeing able to purchase cheap cover could potentially remove much of the early friction in trying out a new DeFi project. Over time, the project can slowly build up “Lindy-ness” as it gets derisked by being in production without getting exploited, and the incentives can be gracefully turned off over time. \\n\\n![](https://images.mirror-media.xyz/publication-images/2cb9ac15-4d8f-4086-9bfe-a36478e71c63.png?height=917&width=1228)\\n\\nAs per this illustration, the cost of cover is highest when a project is in the earliest stages due to unknown smart contract risks. Over time, the cost of cover should come down as people gain more confidence in the project’s code. If projects can provide a subsidy for insurance in the early stages, they can likely attract more users — another way to solve the “cold start” problem of two sided marketplaces.\\n\\nFurthermore, Insurance Mining also has the nice property of being able to be gracefully turned off without materially damaging the experience of the product. Liquidity Mining only benefits a project while that liquidity is in the protocol — once it leaves, the project becomes as shitty as it once was. Insurance Mining on the other hand is much more elegant because the cost of cover *naturally* comes down over time, so insurance subsidies can be turned off without users having to suddenly pay more for cover. \\n\\n# Implementation\\n\\nThe next natural question to ask is, how do we construct an Insurance Mining program on a code-level? \\n\\nIn theory, it should be pretty simple — projects can bootstrap an insurance market on a protocol of their choice (ideally it gives insurance sellers a *receipt token*), then have insurance writers stake their receipt tokens in a custom Insurance Mining contract to earn rewards. \\n\\nOne caveat to note is that to assign rewards fairly to insurance sellers, we must create *segregated insurance pools* that only use the capital to write insurance on your specific protocol. This itself could make the whole exercise not economically viable for insurance sellers, since the economics for fully-collateralized insurance are not very favorable (capital inefficient) — but we can potentially make up for that inefficiency with a more aggressive rewards schedule. \\n\\n# Conclusion\\n\\nInsurance Mining can be a much more incentive-aligned way of distributing tokens to parties who create *sustainable* value to a protocol, compared to Liquidity Mining. To learn more about on-chain insurance, specifically *Algorithmic Insurance,* please read this post first:\\n\\n[https://tuba.mirror.xyz/72Oo_gd-e_XxyX7q8R88wQeoTXh69YZ9nXJYIwmMEDU](https://tuba.mirror.xyz/72Oo_gd-e_XxyX7q8R88wQeoTXh69YZ9nXJYIwmMEDU)\\n\\nLastly, if you are thinking of building this, please **do not** contact me because I will likely not have much useful input beyond what I have laid out in this post. But feel free to add this post to the citations in your whitepaper when you go out and raise money. \",\"timestamp\":1629840791,\"title\":\"Liquidity Mining Rewards V3\",\"publication\":\"tuba\"},\"digest\":\"plpS-PrSmBj9Hjvu_EPYEOh20XMoBxsJqQFvrlfALPM\",\"authorship\":{\"contributor\":\"0xe16c0E1Bf3B75F67E83C9e47B9c0Eb8Bf1B99CCd\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"0gPJtwp-JyrWDn8fysD2z9396Q_L_FCIAOkvsRH0oXM\\\",\\\"y\\\":\\\"SutRu0eA_O6OSRSy-UQY8bT6B_uB9jKHPSTylZN_X_k\\\"}\",\"signature\":\"664H47CTAg-1iJj_QEqxgkaGEnnuc90PGRnb-XdfsOkarjCYSM-IRp-iWxI808iug4K1OISYyRaO0DTPRq9j5Q\",\"signingKeySignature\":\"0xa89bd02787dbf38d6f2e7e5caee9012501a04dc5e321b24059b7afbe66c90977009a27ae02b31514631983edb5fd9a4f8cca8c4cd8bb94e2ac6c0c65f060f3001c\",\"signingKeyMessage\":\"I authorize the publication of articles on tuba.mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"0gPJtwp-JyrWDn8fysD2z9396Q_L_FCIAOkvsRH0oXM\\\",\\\"y\\\":\\\"SutRu0eA_O6OSRSy-UQY8bT6B_uB9jKHPSTylZN_X_k\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"plpS-PrSmBj9Hjvu_EPYEOh20XMoBxsJqQFvrlfALPM\"}"