"{\"content\":{\"body\":\"Send a message to another user, on chain.\\n\\nTL;DR\\n\\n1. Encrypt message to receiver using their public key\\n2. Create a transaction on main chain that emits an event with the receiver’s address and the encrypted message\\n3. Create a subgraph and index these events\\n4. Display the encrypted messages\\n5. When the user opens the message, decrypt and display message\\n\\n# Encrypt using public key\\n\\n![](https://images.mirror-media.xyz/publication-images/ESiXPmO0WUu39BjMKKMCC.png?height=937&width=1221)\\n\\nFor this you need the public key of the user. You might not always have it.\\n\\nTo get the public key, you need to have access to atleast 1 transaction made by this user. \\n\\nTo register to receive encrypted messages, a user must make a `register` transaction to your smart contract on chain. Then, using this transaction, extract the public key and store it on chain.\\n\\nThe typed message should be encrypted using Metamask.\\n\\nRefer : \\n\\n[https://docs.metamask.io/guide/rpc-api.html#encrypting](https://docs.metamask.io/guide/rpc-api.html#encrypting)\\n\\n# Emit message\\n\\nIf public key is available, encrypt it. Else send an un-encrypted message.\\n\\nTo send a message put the encrypted or unencrypted message on a blob in IPFS.\\n\\nMake a transaction to your smart contract that emits an event with the `to address` and `ipfs hash` .\\n\\n[https://stackoverflow.com/questions/62648572/how-to-create-a-directory-and-add-files-to-ipfs-using-js-ipfs-with-pure-javascri](https://stackoverflow.com/questions/62648572/how-to-create-a-directory-and-add-files-to-ipfs-using-js-ipfs-with-pure-javascri)\\n\\n[https://docs.soliditylang.org/en/v0.8.11/contracts.html#events](https://docs.soliditylang.org/en/v0.8.11/contracts.html#events)\\n\\n# Create a subgraph\\n\\nIndex these events using TheGraph protocol.\\n\\nMake it query-able “get all messages for a given receiver”.\\n\\n[https://thegraph.com/docs/en/developer/create-subgraph-hosted/](https://thegraph.com/docs/en/developer/create-subgraph-hosted/)\\n\\n# List messages\\n\\n![](https://images.mirror-media.xyz/publication-images/f35Kr67q-j9FRUwf5iEtO.png?height=903&width=1265)\\n\\nWhen a user opens their inbox show the list of all the messages they’ve received by querying TheGraph\\n\\nShow only sender name (ens) or address and send time.\\n\\n[https://thegraph.com/docs/en/developer/graphql-api/](https://thegraph.com/docs/en/developer/graphql-api/)\\n\\n# Open message\\n\\n![](https://images.mirror-media.xyz/publication-images/8KS4Bg-ks2UsxP0SAZj_r.png?height=910&width=1088)\\n\\nWhen the user taps on the message, fetch the file from ipfs. If it is encrypted decrypt using Metamask.\\n\\n[https://docs.metamask.io/guide/rpc-api.html#eth-decrypt](https://docs.metamask.io/guide/rpc-api.html#eth-decrypt)\\n\\n# Bounty!\\n\\nIf you build this on or before 10th January 2022, I pay 1 ETH.\",\"timestamp\":1641039198,\"title\":\"Request to Build - a Graph based email system\"},\"digest\":\"JTBs4nDH9oBpmPYwxqt9RNM61FvET2AsvXEbNcoT4_A\",\"authorship\":{\"contributor\":\"0xa2dDFc8a6C1F8868B80F2747D04532a6cDE9804d\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"DDhNljfF5mUscdPBA-XjBWovdbD4xSYuf6D3RDgu3mI\\\",\\\"y\\\":\\\"ovUJpccYf30QqMREGLNKP3Z1RSTrs_mlluMBjZtaWcY\\\"}\",\"signature\":\"f-o4q3yf-lAuT5QmB8LIeiI4Mcztzl3JWGNxGOgFvHfmf8qiwFJ_KL2B6qSnwPr2U5FMMePpgXnLfD_yrp1MXw\",\"signingKeySignature\":\"0x23f5dfe94b85aa901c2ab4179b9bc2ab44c44ffcf7751f53ae88174906fcd9081ab0bc824ba8ab7a802f0c05d8ec389b4328cdf473e15e5b467098d26d0d68f61b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"DDhNljfF5mUscdPBA-XjBWovdbD4xSYuf6D3RDgu3mI\\\",\\\"y\\\":\\\"ovUJpccYf30QqMREGLNKP3Z1RSTrs_mlluMBjZtaWcY\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"JTBs4nDH9oBpmPYwxqt9RNM61FvET2AsvXEbNcoT4_A\"}"