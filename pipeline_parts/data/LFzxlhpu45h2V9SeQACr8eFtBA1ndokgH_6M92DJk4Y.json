"{\"content\":{\"body\":\"[SmartWeave](https://github.com/ArweaveTeam/SmartWeave)\\n\\n[SmartWeave](https://github.com/ArweaveTeam/SmartWeave)是一个建立在 Arweave 网络之上的智能合约平台。它允许用户和开发人员构建执行可信赖且去中心化的程序。SmartWeave 的独特之处之一是惰性求值过程，它将处理智能合约的负担从节点转移到用户身上。这意味着，不是在网络中的每台机器上运行每段代码，而是在请求它们的机器上本地计算合约状态。这有很多影响：\\n\\n* 智能合约可以用更易于访问的通用编程语言（如 JavaScript）编写。\\n* 程序可以执行任意数量的计算，而不会产生额外的网络费用。\\n* 智能合约代码确实需要被网络中的节点信任。这允许在没有安全限制的情况下编写智能合约——只有信任合约开发者的用户才能执行他们的代码。\\n\\n### 合约如何在 SmartWeave 中工作\\n\\nSmartWeave 合约的工作原理如下：\\n\\n1. 当开发人员发布合约时，程序的源代码及其初始状态存储在 Arweave 交易中。\\n2. 当用户希望与 SmartWeave 合约交互时，他们会在新的 Arweave 交易中将输入写入程序。\\n3. 然后，当用户想要计算合约的当前状态时，他们使用[GraphQL](https://gql-guide.vercel.app/)查询网络以查找合约的源代码、初始状态和所有用户交互交易。\\n4. 一旦生成了交互事务列表，SmartWeave 客户端就会使用源代码按顺序执行输入。无效的交易被简单地忽略，并且执行转移到下一个交互。可选地，可以使用各种缓存服务来加速这个过程——但必须权衡一定程度的信任。\\n\\n### SmartWeave 作为操作系统\\n\\nSmartWeave 被设计为简单和模块化。标准[SmartWeave 客户端](https://github.com/ArweaveTeam/SmartWeave)允许完全访问本地 JavaScript 引擎以执行。之所以选择 JavaScript，是因为它已成为许多人熟知的“通用”编程语言，并且可以编译许多其他语言（例如使用 WASM）。这使得 SmartWeave 环境能够轻松支持多种语言。例如，[uwu](https://github.com/useverto/uwu)和[Clarity](https://arweave.medium.com/weaving-clarity-safe-smart-contracts-for-smartweave-68fb7ad7ecc4)都可以在 SmartWeave 环境中编译和运行。此外，堆栈的灵活性允许与不同的缓存服务集成，以加快合约状态计算时间。\",\"timestamp\":1640917161,\"title\":\"可能是2022区块链buidl最振奋人心的––Arweave 智能合约SmartWeave\"},\"digest\":\"PF_n4bE3jJGIy4qVv8rhKASsMBAR4v4AklWybWvycs8\",\"authorship\":{\"contributor\":\"0x45D29b661F9351Abb53d3412ffe8852e6708f9D0\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"fv2fr65ipeiSKH05o5Q50aSA8bp3rfv16_zYltEKznY\\\",\\\"y\\\":\\\"LyWxJqAvBKVZHzd2ok2eQYTio_nXOUklWfXWrq9fBlE\\\"}\",\"signature\":\"3wBSNyiQbZnD1_Bqsz191KmbJhOeilp6CyJSkEdUcAAXvC5GK182S3uUli6yBhlw_JeNc3rzNsR849E2bgAiaA\",\"signingKeySignature\":\"0xcdec961f27581b9d784c6116e6d74658ea1fbf8005dd26566abf85240d6ed53f0b2f732d4c0898d44037efb46c12df5d931fdf7e2b9272360d6b6388d9b51e571b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"fv2fr65ipeiSKH05o5Q50aSA8bp3rfv16_zYltEKznY\\\",\\\"y\\\":\\\"LyWxJqAvBKVZHzd2ok2eQYTio_nXOUklWfXWrq9fBlE\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"PF_n4bE3jJGIy4qVv8rhKASsMBAR4v4AklWybWvycs8\"}"