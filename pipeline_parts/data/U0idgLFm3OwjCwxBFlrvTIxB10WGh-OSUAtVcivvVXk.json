"{\"content\":{\"body\":\"　　为了正确理解什么是智能合约以及我们为什么要使用它们，我们首先需要缩小并了解在智能合约概念出现之前就存在的最早的加密货币。\\n\\n　　创建的第一个加密货币(从 2009 年开始)没有智能合约，直到后来才推出第一个功能齐全的智能合约区块链(以太坊)，以解决使用加密货币的人们发现的一些缺失功能他们想。\\n\\n　　一开始，只有比特币。中本聪以其无穷的智慧将比特币带给了我们，全世界看过他作品的人都认为它很好。\\n\\n　　比特币是第一个存在的数字货币，是对金融体系不透明的权力结构和影响政府发行货币的失控货币通货膨胀的反应，特别是在 2008 年全球金融危机之后。\\n\\n　　它是第一个由数学和密码学而不是由隐藏在封闭的门后的一小群有权势的人统治的公开透明的货币。使用比特币，首次以完全自由的公开透明方式存储和转移价值成为可能。\\n\\n　　然而，比特币有一些限制，这源于其设计的有目的的简单性。虽然可以在分布在世界各地的人们之间进行简单的支付，也可以创建非常简单的应用程序(例如多重签名钱包)，但不可能创建更复杂的应用程序。\\n\\n　　因此，随着时间的推移，出现了对更复杂的“可编程货币”的需求，它可以允许程序员编写任何代码并允许它执行与加密货币相关的交易。\\n\\n　　**什么是智能合约?**\\n\\n　　从技术角度来看，智能合约是存储在区块链上的代码，可以执行一组精心预定义的操作，以响应人类从钱包进行交易或由其他智能合约触发的操作。\\n\\n　　以太坊引入了“智能合约”区块链的概念，为程序员提供了更大的灵活性。这最终意味着任何可以在普通计算机上编写和执行的计算机程序也可以在以太坊上运行(尽管在实践中这样做可能非常昂贵!)因此，这提供了以前无法想象的数量通过设计一系列可以相互操作的智能合约，创造整个金融生态系统和创新的潜力。\\n\\n　　**它们是如何工作的?**\\n\\n　　智能合约可以被认为是存储并在区块链上运行的计算机程序。因此，智能合约通常包含“if…then…”语句的变体，根据各种输入和条件执行某些逻辑。\\n\\n　　以太坊是当今最流行的智能合约区块链，它拥有自己的编程语言 Solidity，开发人员使用它来创建应用程序。\\n\\n　　一旦编写，合约被编译成低级“字节码”，然后“部署”到特定的以太坊地址，以太坊的任何用户和其他合约都可以访问该地址。\\n\\n　　为了与该智能合约的代码进行交互，人们将通过将包含特定数据的交易发送到合约的以太坊地址来调用函数。这可以通过Metamask等钱包完成。\\n\\n　　**智能合约可以用来做什么?**\\n\\n　　智能合约的用例非常广泛，我们已经看到了大量的创新。当今最流行的用途包括代表多种不同资产的代币、去中心化金融(DeFi) 和代表艺术品的不可替代代币 (NFT)。然而，很可能还有很多其他的应用还没有被想象到!\\n\\n　　许多最早的智能合约用例非常简单，但是，随着时间的推移，复杂性增加了。智能合约最强大的元素之一是它们能够相互交互，这导致了围绕它们成长的生态系统。例如，DeFi 开始创建替代金融系统，该系统开始时只有一些最简单的元素，如代币和交易所，但现在包括保险、复杂的衍生品等。\\n\\n　　智能合约功能的简单示例包括：\\n\\n　　跟踪谁拥有哪些资产(代币)\\n\\n　　代表艺术品和其他资产 (NFT) 的所有权\\n\\n　　允许分散和透明的投票(治理)\\n\\n　　在满足条件时向适当的各方发放资金(去中心化交易所)\\n\\n　　当某些条件发生时发出事件，允许自动监控(通知)\\n\\n　　**有什么好处?**\\n\\n　　**透明的**\\n\\n　　任何查看区块链的人都可以观察到智能合约代码，因此管理它们的规则是完全透明的。由于审查水平的提高，与封闭源应用程序、网站或金融机构中可能存在的信任相比，这显着增加了对这些应用程序的信任。可以遵守规则以平等对待所有人，而不是使某些人受益于其他人。例如，去中心化交易所可以证明给每个人相同的价格和相同的费用，而在传统金融世界中，有几个引人注目的案例，发现交易所为他们的一些人提供了更好的条件。客户，允许他们最终以牺牲其他客户为代价来赚钱。\\n\\n　　**永久不变**\\n\\n　　一旦创建并部署了智能合约，它就是永久性的，无法更改。这让与他们互动的人相信，未来的变化不会导致引入可能因黑客或错误而导致资金损失的新错误。\\n\\n　　这也意味着与它们交互的应用程序可以确定使用智能合约构建的协议将永远按预期运行。\\n\\n　　**高度灵活和可定制**\\n\\n　　以太坊和其他智能合约平台理论上允许编写和部署任何程序。这为世界各地的开发人员带来了几乎无限的潜力，可以在全球范围内试验和测试他们的新想法，而无需首先创建底层基础设施来承载他们的想法。\\n\\n　　因此，我们看到了围绕智能合约的大量创新以及在 DeFi中创建的一些非常成功的协议，这些协议在短短几年后就拥有数十亿美元的资产，而且每天都在构建更多!\\n\\n　　**始终在线且可靠**\\n\\n　　由于智能合约协议部署在区块链上，因此它们继承了区块链极具弹性且永不脱机的事实。虽然传统网站经常需要维护，在一段时间后关闭，或者在升级过程中遇到问题导致向后兼容，但只要区块链继续存在，智能合约就会存在。\\n\\n　　这让那些想要建立在智能合约之上的人知道他们只需要做一次工作，并且在一段时间后不会发现系统发生变化或停止工作。\\n\\n　　**确定性的**\\n\\n　　智能合约的输出是确定性的，因此总是会导致可证明的结果，可以复制并证明是公平的。无论谁执行输出，每次输出都是相同的。\\n\\n　　**去信任**\\n\\n　　区块链确保交易必须遵守编入智能合约的规则，因此两方或多方可以通过它们进行交互，而无需相互信任。\\n\\n　　**有哪些限制?**\\n\\n　　**真实世界数据**\\n\\n　　虽然智能合约非常适合与区块链的其他用户交互以及涉及区块链上已有资产的交易，但为了充分发挥其潜力，他们需要访问有关现实世界的信息。\\n\\n　　例如，如果我们正在构建一个智能合约作为代管代理，为正在出售的房屋付款，我们需要有一种可靠的方法来知道房屋已被交换。\\n\\n　　有许多项目致力于以安全和去信任的方式提供“Oracle”数据，以允许应用程序访问这些数据并围绕它们创建逻辑。一个流行的例子是ChainLink。\\n\\n　　**缺乏可升级性**\\n\\n　　由于如果存在软件错误，则智能合约在部署后无法更改，因此修复起来要困难得多。在最坏的情况下，这可能导致黑客更大的攻击和资金损失。\\n\\n　　对此的一种解决方案是，许多协议现在使用“代理”合约作为访问协议的接口，其逻辑保存在第二个智能合约中。虽然不能替换或更改逻辑合约，但可以部署新的升级逻辑，然后可以通知代理仅指向新合约。\\n\\n　　**成本**\\n\\n　　虽然理论上可以使用智能合约构建任何计算机程序，但限制因素通常是成本。由于必须在区块链上部署合约、执行交易和存储数据，因此每个操作都会产生相关成本，以避免整体状态变得太大并防止垃圾交易。\\n\\n　　一般来说，开发人员的目标是尽可能多地“脱链”工作，并且只将智能合约用于真正需要它们提供的好处的核心元素。\",\"timestamp\":1635996655,\"title\":\"什么是智能合约?以及它的工作原理\"},\"digest\":\"l2cmflmdBnbdlBmSXUgEQJB4rytACGOSPpLBFtiGuVw\",\"authorship\":{\"contributor\":\"0xbE1aCaAE49c7396F6599333c1B548C7Fa211278D\",\"signingKey\":\"{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"Y6G56jHohB-8_D32KYzuxtJaxq1vZT1vnhnVDGXmVZw\\\",\\\"y\\\":\\\"XzPY31R24lExiKBErvQRsiwVJi8e-YaLZSLlsF8zjT0\\\"}\",\"signature\":\"65rdt8zDVfV1DRNLjMOHvYGthGgZY_Ea_n3hrsmW0vHFxAudYxoQKwFcwXnVuNkozVP-B4zU6BSMTavIeqa9rw\",\"signingKeySignature\":\"0xe3a24a08722dec81b0fd54e66563b03cc4c7caa378fb54fbc3af94caf2735b383218b0e8fd84eb455affd96ee08ab7bbe20a58f3a427df5880aefccd17bfecc11b\",\"signingKeyMessage\":\"I authorize publishing on mirror.xyz from this device using:\\n{\\\"crv\\\":\\\"P-256\\\",\\\"ext\\\":true,\\\"key_ops\\\":[\\\"verify\\\"],\\\"kty\\\":\\\"EC\\\",\\\"x\\\":\\\"Y6G56jHohB-8_D32KYzuxtJaxq1vZT1vnhnVDGXmVZw\\\",\\\"y\\\":\\\"XzPY31R24lExiKBErvQRsiwVJi8e-YaLZSLlsF8zjT0\\\"}\",\"algorithm\":{\"name\":\"ECDSA\",\"hash\":\"SHA-256\"}},\"nft\":{},\"version\":\"12-21-2020\",\"originalDigest\":\"l2cmflmdBnbdlBmSXUgEQJB4rytACGOSPpLBFtiGuVw\"}"